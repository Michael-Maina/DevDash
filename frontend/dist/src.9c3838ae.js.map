{"version":3,"sources":["webpack://xterm/webpack/universalModuleDefinition","webpack://xterm/src/browser/AccessibilityManager.ts","webpack://xterm/src/browser/Clipboard.ts","webpack://xterm/src/browser/ColorContrastCache.ts","webpack://xterm/src/browser/ColorManager.ts","webpack://xterm/src/browser/Dom.ts","webpack://xterm/src/browser/Lifecycle.ts","webpack://xterm/src/browser/Linkifier.ts","webpack://xterm/src/browser/Linkifier2.ts","webpack://xterm/src/browser/LocalizableStrings.ts","webpack://xterm/src/browser/MouseZoneManager.ts","webpack://xterm/src/browser/RenderDebouncer.ts","webpack://xterm/src/browser/ScreenDprMonitor.ts","webpack://xterm/src/browser/Terminal.ts","webpack://xterm/src/browser/TimeBasedDebouncer.ts","webpack://xterm/src/browser/Viewport.ts","webpack://xterm/src/browser/decorations/BufferDecorationRenderer.ts","webpack://xterm/src/browser/decorations/ColorZoneStore.ts","webpack://xterm/src/browser/decorations/OverviewRulerRenderer.ts","webpack://xterm/src/browser/input/CompositionHelper.ts","webpack://xterm/src/browser/input/Mouse.ts","webpack://xterm/src/browser/input/MoveToCell.ts","webpack://xterm/src/browser/public/Terminal.ts","webpack://xterm/src/browser/renderer/BaseRenderLayer.ts","webpack://xterm/src/browser/renderer/CursorRenderLayer.ts","webpack://xterm/src/browser/renderer/CustomGlyphs.ts","webpack://xterm/src/browser/renderer/GridCache.ts","webpack://xterm/src/browser/renderer/LinkRenderLayer.ts","webpack://xterm/src/browser/renderer/Renderer.ts","webpack://xterm/src/browser/renderer/RendererUtils.ts","webpack://xterm/src/browser/renderer/SelectionRenderLayer.ts","webpack://xterm/src/browser/renderer/TextRenderLayer.ts","webpack://xterm/src/browser/renderer/atlas/BaseCharAtlas.ts","webpack://xterm/src/browser/renderer/atlas/CharAtlasCache.ts","webpack://xterm/src/browser/renderer/atlas/CharAtlasUtils.ts","webpack://xterm/src/browser/renderer/atlas/Constants.ts","webpack://xterm/src/browser/renderer/atlas/DynamicCharAtlas.ts","webpack://xterm/src/browser/renderer/atlas/LRUMap.ts","webpack://xterm/src/browser/renderer/dom/DomRenderer.ts","webpack://xterm/src/browser/renderer/dom/DomRendererRowFactory.ts","webpack://xterm/src/browser/selection/SelectionModel.ts","webpack://xterm/src/browser/services/CharSizeService.ts","webpack://xterm/src/browser/services/CharacterJoinerService.ts","webpack://xterm/src/browser/services/CoreBrowserService.ts","webpack://xterm/src/browser/services/MouseService.ts","webpack://xterm/src/browser/services/RenderService.ts","webpack://xterm/src/browser/services/SelectionService.ts","webpack://xterm/src/browser/services/Services.ts","webpack://xterm/src/browser/services/SoundService.ts","webpack://xterm/src/common/CircularList.ts","webpack://xterm/src/common/Clone.ts","webpack://xterm/src/common/Color.ts","webpack://xterm/src/common/CoreTerminal.ts","webpack://xterm/src/common/EventEmitter.ts","webpack://xterm/src/common/InputHandler.ts","webpack://xterm/src/common/Lifecycle.ts","webpack://xterm/src/common/Platform.ts","webpack://xterm/src/common/SortedList.ts","webpack://xterm/src/common/TypedArrayUtils.ts","webpack://xterm/src/common/WindowsMode.ts","webpack://xterm/src/common/buffer/AttributeData.ts","webpack://xterm/src/common/buffer/Buffer.ts","webpack://xterm/src/common/buffer/BufferLine.ts","webpack://xterm/src/common/buffer/BufferRange.ts","webpack://xterm/src/common/buffer/BufferReflow.ts","webpack://xterm/src/common/buffer/BufferSet.ts","webpack://xterm/src/common/buffer/CellData.ts","webpack://xterm/src/common/buffer/Constants.ts","webpack://xterm/src/common/buffer/Marker.ts","webpack://xterm/src/common/data/Charsets.ts","webpack://xterm/src/common/data/EscapeSequences.ts","webpack://xterm/src/common/input/Keyboard.ts","webpack://xterm/src/common/input/TextDecoder.ts","webpack://xterm/src/common/input/UnicodeV6.ts","webpack://xterm/src/common/input/WriteBuffer.ts","webpack://xterm/src/common/input/XParseColor.ts","webpack://xterm/src/common/parser/Constants.ts","webpack://xterm/src/common/parser/DcsParser.ts","webpack://xterm/src/common/parser/EscapeSequenceParser.ts","webpack://xterm/src/common/parser/OscParser.ts","webpack://xterm/src/common/parser/Params.ts","webpack://xterm/src/common/public/AddonManager.ts","webpack://xterm/src/common/public/BufferApiView.ts","webpack://xterm/src/common/public/BufferLineApiView.ts","webpack://xterm/src/common/public/BufferNamespaceApi.ts","webpack://xterm/src/common/public/ParserApi.ts","webpack://xterm/src/common/public/UnicodeApi.ts","webpack://xterm/src/common/services/BufferService.ts","webpack://xterm/src/common/services/CharsetService.ts","webpack://xterm/src/common/services/CoreMouseService.ts","webpack://xterm/src/common/services/CoreService.ts","webpack://xterm/src/common/services/DecorationService.ts","webpack://xterm/src/common/services/DirtyRowService.ts","webpack://xterm/src/common/services/InstantiationService.ts","webpack://xterm/src/common/services/LogService.ts","webpack://xterm/src/common/services/OptionsService.ts","webpack://xterm/src/common/services/ServiceRegistry.ts","webpack://xterm/src/common/services/Services.ts","webpack://xterm/src/common/services/UnicodeService.ts","webpack://xterm/webpack/bootstrap","webpack://xterm/webpack/startup","src/TerminalUI.js","node_modules/parseuri/index.js","node_modules/socket.io-client/node_modules/ms/index.js","node_modules/socket.io-client/node_modules/debug/src/debug.js","node_modules/process/browser.js","node_modules/socket.io-client/node_modules/debug/src/browser.js","node_modules/socket.io-client/lib/url.js","node_modules/socket.io-parser/node_modules/ms/index.js","node_modules/socket.io-parser/node_modules/debug/src/debug.js","node_modules/socket.io-parser/node_modules/debug/src/browser.js","node_modules/component-emitter/index.js","node_modules/socket.io-parser/node_modules/isarray/index.js","node_modules/base64-js/index.js","node_modules/ieee754/index.js","node_modules/node-libs-browser/node_modules/isarray/index.js","node_modules/node-libs-browser/node_modules/buffer/index.js","node_modules/socket.io-parser/is-buffer.js","node_modules/socket.io-parser/binary.js","node_modules/socket.io-parser/index.js","node_modules/has-cors/index.js","node_modules/engine.io-client/lib/globalThis.browser.js","node_modules/engine.io-client/lib/transports/xmlhttprequest.browser.js","node_modules/engine.io-parser/lib/keys.js","node_modules/has-binary2/node_modules/isarray/index.js","node_modules/has-binary2/index.js","node_modules/arraybuffer.slice/index.js","node_modules/after/index.js","node_modules/engine.io-parser/lib/utf8.js","node_modules/base64-arraybuffer/lib/base64-arraybuffer.js","node_modules/blob/index.js","node_modules/engine.io-parser/lib/browser.js","node_modules/engine.io-client/lib/transport.js","node_modules/parseqs/index.js","node_modules/component-inherit/index.js","node_modules/yeast/index.js","node_modules/engine.io-client/node_modules/ms/index.js","node_modules/engine.io-client/node_modules/debug/src/debug.js","node_modules/engine.io-client/node_modules/debug/src/browser.js","node_modules/engine.io-client/lib/transports/polling.js","node_modules/engine.io-client/lib/transports/polling-xhr.js","node_modules/engine.io-client/lib/transports/polling-jsonp.js","node_modules/engine.io-client/lib/transports/websocket.js","node_modules/engine.io-client/lib/transports/index.js","node_modules/indexof/index.js","node_modules/engine.io-client/lib/socket.js","node_modules/engine.io-client/lib/index.js","node_modules/to-array/index.js","node_modules/socket.io-client/lib/on.js","node_modules/component-bind/index.js","node_modules/socket.io-client/lib/socket.js","node_modules/backo2/index.js","node_modules/socket.io-client/lib/manager.js","node_modules/socket.io-client/lib/index.js","src/index.js"],"names":["root","factory","exports","module","define","amd","a","i","self","_terminal","_renderService","_liveRegionLineCount","_charsToConsume","_charsToAnnounce","_accessibilityTreeRoot","document","createElement","classList","add","tabIndex","_rowContainer","setAttribute","_rowElements","rows","_createAccessibilityTreeNode","appendChild","_topBoundaryFocusListener","e","_onBoundaryFocus","_bottomBoundaryFocusListener","addEventListener","length","_refreshRowsDimensions","_renderRowsDebouncer","TimeBasedDebouncer","_renderRows","bind","_refreshRows","_liveRegion","element","Error","insertAdjacentElement","register","onResize","_onResize","onRender","start","end","onScroll","onA11yChar","char","_onChar","onLineFeed","onA11yTab","spaceCount","_onTab","onKey","_onKey","key","onBlur","_clearLiveRegion","onDimensionsChange","_screenDprMonitor","ScreenDprMonitor","setListener","addDisposableDomListener","window","dispose","removeElementFromParent","this","position","boundaryElement","target","beforeBoundaryElement","getAttribute","buffer","lines","relatedTarget","topBoundaryElement","bottomBoundaryElement","pop","removeChild","shift","removeEventListener","newElement","unshift","push","scrollLines","focus","preventDefault","stopImmediatePropagation","children","_refreshRowDimensions","MAX_ROWS_TO_READ","textContent","Strings","tooMuchOutput","isMac","parentNode","setTimeout","keyChar","refresh","setSize","toString","lineData","translateBufferLineToString","ydisp","posInSet","innerText","_announceCharacters","dimensions","actualCellHeight","style","height","Disposable","AccessibilityManager","prepareTextForTerminal","text","replace","bracketTextForPaste","bracketedPasteMode","paste","textarea","coreService","decPrivateModes","triggerDataEvent","value","moveTextAreaUnderMouseCursor","ev","screenElement","pos","getBoundingClientRect","left","clientX","top","clientY","width","zIndex","selectionService","clipboardData","setData","selectionText","stopPropagation","getData","shouldSelectWord","rightClickSelect","select","_color","_rgba","clear","setCss","bg","fg","getCss","undefined","setColor","getColor","ColorContrastCache","DEFAULT_FOREGROUND","css","toColor","DEFAULT_BACKGROUND","DEFAULT_CURSOR","DEFAULT_CURSOR_ACCENT","DEFAULT_SELECTION","rgba","DEFAULT_ANSI_COLORS","Object","freeze","colors","v","r","g","b","channels","toCss","toRgba","c","allowTransparency","canvas","ctx","getContext","_ctx","globalCompositeOperation","_litmusColor","createLinearGradient","_contrastCache","foreground","background","cursor","cursorAccent","selectionTransparent","selectionOpaque","color","blend","selectionForeground","ansi","slice","contrastCache","_updateRestoreColors","onOptionsChange","setTheme","theme","_parseColor","selection","nullColor","isOpaque","opacity","black","red","green","yellow","blue","magenta","cyan","white","brightBlack","brightRed","brightGreen","brightYellow","brightBlue","brightMagenta","brightCyan","brightWhite","restoreColor","slot","_restoreColors","fallback","fillStyle","console","warn","fillRect","data","getImageData","substring","split","map","component","Number","alpha","Math","round","ColorManager","elements","parentElement","node","type","handler","options","disposed","_bufferService","_logService","_unicodeService","_linkMatchers","_nextLinkMatcherId","_onShowLinkUnderline","EventEmitter","_onHideLinkUnderline","_onLinkTooltip","_rowsToLinkify","event","attachToDom","mouseZoneManager","_element","_mouseZoneManager","linkifyRows","min","max","clearAll","_rowsTimeoutId","clearTimeout","_linkifyRows","Linkifier","_timeBeforeLatency","absoluteRowIndexStart","absoluteRowIndexEnd","overscanLineLimit","ceil","cols","iterator","hasNext","next","_doLinkifyRow","range","first","content","debug","registerLinkMatcher","regex","matcher","id","matchIndex","validationCallback","hoverTooltipCallback","tooltipCallback","hoverLeaveCallback","leaveCallback","willLinkActivate","priority","_addLinkMatcherToList","splice","deregisterLinkMatcher","matcherId","rowIndex","match","rex","RegExp","source","flags","stringIndex","uri","indexOf","lastIndex","bufferIndex","stringIndexToBufferIndex","line","get","attr","getFg","isValid","_addLink","exec","x","y","getStringCellWidth","x1","y1","floor","x2","y2","MouseZone","newWindow","open","opener","location","href","fire","_createLinkHoverEvent","remove","IBufferService","ILogService","IUnicodeService","clickCallback","hoverCallback","_linkProviders","_linkCacheDisposables","_isMouseOut","_activeLine","getDisposeArrayDisposable","_currentLink","registerLinkProvider","linkProvider","providerIndex","mouseService","renderService","_mouseService","_clearCurrentLink","_onMouseMove","_handleMouseDown","_handleMouseUp","_lastMouseEvent","_positionFromMouseEvent","composedPath","contains","_lastBufferCell","_onHover","_askForLink","_linkAtPosition","link","useLineCache","_activeProviderReplies","forEach","reply","linkWithState","Map","linkProvided","_checkLinkProviderResult","provideLinks","links","linksWithState","set","size","_removeIntersectingLinks","entries","replies","occupiedCells","Set","providerReply","startX","endX","has","index","hasLinkBefore","j","linkAtPosition","find","_handleNewLink","currentLink","_mouseDownLink","activate","startRow","endRow","_linkLeave","disposeArray","state","decorations","underline","pointerCursor","isHovered","_linkHover","defineProperties","toggle","_fireUnderlineEvent","onRenderedViewportChange","hover","showEvent","scrollOffset","_createLinkUnderlineEvent","leave","sameLine","wrappedFromLeft","wrappedToRight","coords","getCoords","Linkifier2","promptLabel","_screenElement","_selectionService","_optionsService","_zones","_areZonesActive","_lastHoverCoords","_initialSelectionLength","_onMouseDown","_mouseMoveListener","_mouseLeaveListener","_onMouseLeave","_clickListener","_onClick","_deactivate","zone","_activate","_currentZone","pageX","pageY","_findZoneEventAt","_tooltipTimeout","_onTooltip","rawOptions","linkTooltipHoverDuration","_getSelectionLength","currentSelectionLength","IMouseService","ISelectionService","IOptionsService","MouseZoneManager","_renderCallback","_refreshCallbacks","_animationFrame","cancelAnimationFrame","addRefreshCallback","callback","requestAnimationFrame","_innerRefresh","rowStart","rowEnd","rowCount","_rowCount","_rowStart","_rowEnd","_runRefreshCallbacks","RenderDebouncer","_currentDevicePixelRatio","devicePixelRatio","listener","_listener","clearListener","_outerListener","_updateDpr","_resolutionMediaMatchList","removeListener","matchMedia","addListener","browser","Browser","_keyDownHandled","_keyDownSeen","_keyPressHandled","_unprocessedDeadKey","_onCursorMove","_onRender","_onSelectionChange","_onTitleChange","_onBell","_onFocus","_onBlur","_onA11yCharEmitter","_onA11yTabEmitter","_setup","linkifier","_instantiationService","createInstance","linkifier2","_decorationService","DecorationService","setService","IDecorationService","_inputHandler","onRequestBell","bell","onRequestRefreshRows","onRequestSendFocus","_reportFocus","onRequestReset","reset","onRequestWindowsOptionsReport","_reportWindowsOptions","onColor","_handleColorEvent","forwardEvent","onCursorMove","onTitleChange","_afterResize","_colorManager","req","acc","ident","toColorRGB","C0","ESC","toRgbString","C1_ESCAPED","ST","setColors","viewport","onThemeChange","_isDisposed","_customKeyEventHandler","write","buffers","active","preventScroll","_updateOptions","_charSizeService","measure","setRenderer","_createRenderer","syncScrollArea","optionsService","screenReaderMode","_accessibilityManager","setupTabStops","_setTheme","_onTextAreaFocus","sendFocus","updateCursorStyle","_showCursor","blur","_onTextAreaBlur","_syncTextArea","isCursorInViewport","_compositionHelper","isComposing","cursorY","ybase","bufferLine","cursorX","cellHeight","getWidth","cellWidth","actualCellWidth","cursorTop","cursorLeft","lineHeight","_initGlobal","_bindKeys","hasSelection","copyHandler","pasteHandlerWrapper","handlePasteEvent","isFirefox","button","rightClickHandler","rightClickSelectsWord","isLinux","_keyUp","_keyDown","_keyPress","compositionstart","compositionupdate","compositionend","_inputEvent","updateCompositionElements","_queueLinkification","parent","isConnected","_document","ownerDocument","dir","fragment","createDocumentFragment","_viewportElement","_viewportScrollArea","_helperContainer","coreBrowserService","CoreBrowserService","ICoreBrowserService","CharSizeService","ICharSizeService","_theme","onOptionChange","_characterJoinerService","CharacterJoinerService","ICharacterJoinerService","renderer","RenderService","IRenderService","resize","_compositionView","CompositionHelper","_soundService","SoundService","ISoundService","MouseService","Viewport","amount","onRequestSyncScrollBar","onFocus","SelectionService","onRequestScrollLines","suppressScrollEvent","onSelectionChange","onRequestRedraw","onSelectionChanged","columnSelectMode","onLinuxMouseSelection","_onScroll","BufferDecorationRenderer","onMouseDown","coreMouseService","areMouseEventsActive","disable","enable","overviewRulerWidth","_overviewRulerRenderer","OverviewRulerRenderer","bindMouse","rendererType","Renderer","DomRenderer","el","sendEvent","but","action","getRawByteCoords","overrideType","buttons","getLinesScrolled","deltaY","triggerMouseEvent","col","row","ctrl","ctrlKey","alt","altKey","shiftKey","requestedEvents","mouseup","wheel","mousedrag","mousemove","eventListeners","cancel","onProtocolChange","events","logLevel","explainEvents","passive","activeProtocol","shouldForceSelection","hasScrollback","sequence","applicationCursorKeys","abs","onWheel","onTouchStart","onTouchMove","refreshRows","shouldColumnSelect","isCursorInitialized","disp","attachCustomKeyEventHandler","customKeyEventHandler","registerCharacterJoiner","joinerId","deregisterCharacterJoiner","deregister","markers","addMarker","cursorYOffset","normal","registerDecoration","decorationOptions","column","setSelection","getSelection","getSelectionPosition","startColumn","selectionStart","endColumn","selectionEnd","clearSelection","selectAll","selectLines","shouldIgnoreComposition","macOptionIsMeta","keydown","scrollToBottom","result","evaluateKeyboardEvent","scrollCount","_isThirdLevelShift","metaKey","charCodeAt","ETX","CR","domEvent","thirdLevelKey","isWindows","getModifierState","keyCode","charCode","which","String","fromCharCode","inputType","composed","_soundBell","playBellSound","hasValidSize","clearAllMarkers","getBlankLine","DEFAULT_ATTR_DATA","clearTextureAtlas","WindowsOptionsReportType","GET_WIN_SIZE_PIXELS","canvasWidth","scaledCanvasWidth","toFixed","canvasHeight","scaledCanvasHeight","GET_CELL_SIZE_PIXELS","scaledCellWidth","scaledCellHeight","force","cancelEvents","_visualBell","bellStyle","CoreTerminal","Terminal","_debounceThresholdMS","_lastRefreshMs","_additionalRefreshRequested","_refreshTimeoutID","refreshRequestTime","Date","now","elapsed","waitPeriodBeforeTrailingRefresh","_scrollLines","_scrollArea","scrollBarWidth","_currentRowHeight","_currentScaledCellHeight","_lastRecordedBufferLength","_lastRecordedViewportHeight","_lastRecordedBufferHeight","_lastTouchY","_lastScrollTop","_wheelPartialScroll","_refreshAnimationFrame","_ignoreNextScrollEvent","offsetWidth","_activeBuffer","onBufferActivate","activeBuffer","_renderDimensions","backgroundColor","_refresh","immediate","offsetHeight","newBufferHeight","scrollTop","offsetParent","diff","_bubbleScroll","scrollPosFromTop","cancelable","_getPixelsScrolled","_applyScrollModifier","deltaMode","WheelEvent","DOM_DELTA_LINE","DOM_DELTA_PAGE","DOM_DELTA_PIXEL","modifier","fastScrollModifier","fastScrollSensitivity","scrollSensitivity","touches","_decorationElements","_altBufferIsActive","_dimensionsChanged","_container","_queueRefresh","onDecorationRegistered","onDecorationRemoved","decoration","_removeDecoration","refreshDecorations","_renderDecoration","_refreshStyle","_refreshXPosition","_createElement","marker","display","onRenderEmitter","onDispose","anchor","right","delete","_zonePool","_zonePoolIndex","_linePadding","full","center","addDecoration","overviewRulerOptions","z","_lineIntersectsZone","_lineAdjacentToZone","_addLineToZone","startBufferLine","endBufferLine","setPadding","padding","ColorZoneStore","drawHeight","drawWidth","drawX","_colorZoneStore","_shouldUpdateDimensions","_shouldUpdateAnchor","_lastKnownBufferLength","_canvas","_refreshCanvasDimensions","insertBefore","_registerDecorationListeners","_registerBufferChangeListeners","_registerDimensionChangeListeners","_refreshDrawHeightConstants","_refreshColorZonePadding","_containerHeight","clientHeight","o","_refreshDrawConstants","outerWidth","innerWidth","pixelsPerLine","nonFullHeight","_width","_refreshDecorations","clearRect","lineWidth","zones","_renderColorZone","updateCanvasDimensions","updateAnchor","_textarea","_coreService","_isComposing","_isSendingComposition","_compositionPosition","_dataAlreadySent","_finalizeComposition","_handleAnyTextareaChanges","waitForPropagation","input","oldValue","dontRecurse","fontFamily","fontSize","compositionViewBounds","ICoreService","getCoordsRelativeToElement","rect","elementStyle","getComputedStyle","leftPadding","parseInt","getPropertyValue","topPadding","colCount","hasValidCharSize","isSelection","moveToRequestedRow","startY","targetY","bufferService","applicationCursor","wrappedRowsForRow","repeat","wrappedRows","direction","verticalDirection","isWrapped","currentRow","lineWraps","startCol","endCol","forward","currentCol","bufferStr","mod","count","str","rpt","targetX","rowDifference","currX","CONSTRUCTOR_ONLY_OPTIONS","_core","_addonManager","AddonManager","_publicOptions","getter","propName","setter","_checkReadonlyOptions","desc","defineProperty","includes","_checkProposedApi","allowProposedApi","onBell","onBinary","onData","onWriteParsed","_parser","ParserApi","UnicodeApi","_buffer","BufferNamespaceApi","m","mouseTrackingMode","applicationCursorKeysMode","applicationKeypadMode","applicationKeypad","insertMode","modes","originMode","origin","reverseWraparoundMode","reverseWraparound","sendFocusMode","wraparoundMode","wraparound","columns","_verifyIntegers","registerMarker","_verifyPositiveIntegers","scrollPages","pageCount","scrollToTop","scrollToLine","writeUtf8","writeln","getOption","setOption","loadAddon","addon","values","Infinity","isNaN","_alpha","_colors","_rendererId","_scaledCharWidth","_scaledCharHeight","_scaledCellWidth","_scaledCellHeight","_scaledCharLeft","_scaledCharTop","_columnSelectMode","_currentGlyphIdentifier","chars","code","bold","dim","italic","_initCanvas","_charAtlas","throwIfFalsy","_clearAll","onOptionsChanged","onGridChanged","_selectionStart","_selectionEnd","colorSet","_refreshCharAtlas","_setTransparency","oldCanvas","cloneNode","replaceChild","acquireCharAtlas","warmUp","scaledCharWidth","scaledCharHeight","scaledCharLeft","scaledCharTop","_fillCells","_fillMiddleLineAtCells","cellOffset","_fillBottomLineAtCells","_fillLeftLineAtCell","_strokeRectAtCell","strokeRect","_clearCells","_fillCharTrueColor","cell","font","_getFont","textBaseline","TEXT_BASELINE","_clipRow","drawSuccess","customGlyphs","tryDrawCustomChar","getChars","fillText","_drawChars","contrastColor","_getContrastColor","isFgRGB","isBgRGB","_drawUncachedChars","isInverse","isBgDefault","INVERTED_DEFAULT_COLOR","getBgColor","isFgDefault","getFgColor","DEFAULT_COLOR","drawBoldTextInBrightColors","isBold","WHITESPACE_CELL_CHAR","getCode","WHITESPACE_CELL_CODE","isDim","isItalic","hasOverrides","getDecorationsAtCell","d","backgroundColorRGB","foregroundColorRGB","draw","fgOverride","save","opaque","AttributeData","join","globalAlpha","DIM_OPACITY","restore","beginPath","clip","fontWeightBold","fontWeight","bgOverride","isTop","layer","_isCellInSelection","minimumContrastRatio","excludeFromContrastRatioDemands","adjustedColor","fgColor","fgColorMode","getFgColorMode","bgColor","bgColorMode","getBgColorMode","temp","temp2","bgRgba","_resolveBackgroundRgba","fgRgba","_resolveForegroundRgba","ensureContrastRatio","inverse","BaseRenderLayer","BLINK_INTERVAL","container","rendererId","_onRequestRedraw","_coreBrowserService","decorationService","_cell","CellData","_state","isFocused","_cursorRenderers","_renderBarCursor","_renderBlockCursor","_renderUnderlineCursor","_cursorBlinkStateManager","_clearCursor","restartBlinkAnimation","pause","resume","cursorBlink","CursorBlinkStateManager","_render","isPaused","triggeredByAnimationFrame","isCursorHidden","viewportRelativeCursorY","loadCell","cursorStyle","_renderBlurCursor","isCursorVisible","cursorWidth","strokeStyle","CursorRenderLayer","_restartInterval","_blinkStartTimeout","_blinkInterval","clearInterval","_animationTimeRestarted","timeToStart","time","setInterval","blockElementDefinitions","w","h","patternCharacterDefinitions","boxDrawingDefinitions","xp","yp","powerlineDefinitions","horizontalPadding","xOffset","yOffset","blockElementDefinition","charDefinition","box","xEighth","yEighth","patternDefinition","patternSet","cachedPatterns","pattern","tmpCanvas","tmpCtx","imageData","ImageData","startsWith","parseFloat","putImageData","createPattern","boxDrawingDefinition","instructions","actualInstructions","instruction","f","svgToCanvasInstructionMap","args","translateArgs","error","stroke","closePath","drawBoxDrawingChar","powerlineDefinition","fill","clamp","bezierCurveTo","lineTo","moveTo","cache","GridCache","onShowLinkUnderline","onHideLinkUnderline","middleRowCount","is256Color","LinkRenderLayer","nextRendererId","instantiationService","_id","_renderLayers","TextRenderLayer","SelectionRenderLayer","_devicePixelRatio","_updateDimensions","removeTerminalFromCache","onDevicePixelRatioChange","l","onCharSizeChanged","_runOperation","operation","renderRows","letterSpacing","IInstantiationService","isPowerlineGlyph","codepoint","_clearState","_didStateChange","viewportStartRow","viewportEndRow","viewportCappedStartRow","viewportCappedEndRow","startRowEndCol","middleRowsCount","_areCoordinatesEqual","coord1","coord2","_characterWidth","_characterFont","_characterOverlapCache","_workCell","terminalFont","_forEachCell","firstRow","lastRow","joinedRanges","getJoinedCharacters","isJoined","lastCharX","JoinedCellData","translateToString","_isOverlapping","getCodePoint","NULL_CELL_CODE","_drawBackground","prevFillStyle","nextFillStyle","isBgPalette","_drawForeground","isInvisible","isUnderline","isStrikethrough","beginFrame","hasOwnProperty","overlaps","measureText","_didWarmUp","_doWarmUp","BaseCharAtlas","charAtlasCache","newConfig","generateConfig","ownedByIndex","entry","ownedBy","configEquals","config","atlas","newEntry","DynamicCharAtlas","clonedColors","colorCode","isLegacyEdge","CHAR_ATLAS_CELL_SPACING","TEXTURE_WIDTH","TEXTURE_HEIGHT","TRANSPARENT_COLOR","getGlyphCacheKey","glyph","_config","_drawToCacheCount","_glyphsWaitingOnBitmap","_bitmapCommitTimeout","_bitmap","_cacheCanvas","_cacheCtx","_tmpCtx","_height","capacity","_cacheMap","LRUMap","prealloc","_canCache","glyphKey","cacheValue","_drawFromCache","peek","_drawToCache","_toCoordinateX","_toCoordinateY","isEmpty","cacheX","cacheY","drawImage","inBitmap","_getColorFromAnsiIndex","idx","_getBackgroundColor","_getForegroundColor","fontStyle","clearColor","offset","_addGlyphToBitmap","isSafari","_generateBitmap","glyphsMovingToBitmap","createImageBitmap","then","bitmap","NoneCharAtlas","_map","_head","_tail","_nodePool","_unlinkNode","prev","_appendNode","tail","nodePool","peekValue","head","TERMINAL_CLASS_PREFIX","FG_CLASS_PREFIX","BG_CLASS_PREFIX","FOCUS_CLASS","nextTerminalId","_linkifier","_linkifier2","_terminalClass","_refreshRowElements","_selectionContainer","_injectCss","_rowFactory","DomRendererRowFactory","_onLinkHover","_onLinkLeave","_themeStyleElement","_dimensionsStyleElement","overflow","styles","_terminalSelector","BOLD_CLASS","ITALIC_CLASS","CURSOR_CLASS","CURSOR_STYLE_BLOCK_CLASS","CURSOR_BLINK_CLASS","CURSOR_STYLE_BAR_CLASS","CURSOR_STYLE_UNDERLINE_CLASS","documentFragment","isXFlipped","_createSelectionElement","colStart","colEnd","cursorAbsoluteY","rowElement","createRow","_setCellUnderline","enabled","span","textDecoration","DIM_CLASS","UNDERLINE_CLASS","STRIKETHROUGH_CLASS","isCursorRow","lineLength","charElement","isInSelection","resolvedBg","_addStyle","padStart","_applyMinimumContrast","padChar","isSelectAllActive","selectionStartLength","areSelectionValuesReversed","startPlusLength","onTrim","SelectionModel","_onCharSizeChange","_measureStrategy","DomMeasureStrategy","_parentElement","_result","_measureElement","geometry","firstCell","combinedData","isCombined","setFromCharData","getAsCharData","_characterJoiners","_nextCharacterJoinerId","joiner","ranges","lineStr","rangeStartColumn","currentStringIndex","rangeStartStringIndex","rangeAttrFG","rangeAttrBG","getBg","getTrimmedLength","_getJoinedRanges","startIndex","endIndex","allJoinedRanges","joinerRanges","_mergeRanges","_stringRangesToCellRanges","currentRangeIndex","currentRangeStarted","currentRange","getString","newRange","inRange","getRootNode","activeElement","hasFocus","_renderer","_isPaused","_needsFullRefresh","_isNextRenderRedrawOnly","_needsSelectionRefresh","_canvasWidth","_canvasHeight","_selectionState","_onDimensionsChange","_onRenderedViewportChange","_onRefreshRequest","_renderDebouncer","_fullRefresh","_handleOptionsChanged","onCharSizeChange","IntersectionObserver","_onIntersectionChange","threshold","observe","disconnect","isIntersecting","intersectionRatio","isRedrawOnly","_fireOnCanvasResize","NON_BREAKING_SPACE_CHAR","ALL_NON_BREAKING_SPACE_REGEX","_dragScrollAmount","_enabled","_mouseDownTimeStamp","_oldHasSelection","_oldSelectionStart","_oldSelectionEnd","_onLinuxMouseSelection","_onRedrawRequest","_onRequestScrollLines","_mouseUpListener","_onMouseUp","onUserInput","_trimListener","_onTrim","_onBufferActivate","_model","_activeSelectionMode","_removeMouseDownListeners","finalSelectionStart","finalSelectionEnd","lineText","isLinuxMouseSelection","_isClickInSelection","_getMouseBufferCoords","_areCoordsInSelection","isCellInSelection","_selectWordAtCursor","allowWhitespaceOnlySelection","getRangeLength","_selectWordAt","_getMouseEventScrollAmount","terminalHeight","macOptionClickForcesSelection","timeStamp","_onIncrementalClick","detail","_onSingleClick","_onDoubleClick","_onTripleClick","_addMouseDownListeners","_dragScrollIntervalTimer","_dragScroll","hasWidth","_selectLineAt","previousSelectionEnd","_selectToWordAt","timeElapsed","coordinates","moveToCellSequence","_fireEventIfSelectionChanged","_fireOnSelectionChange","_convertViewportColToCharacterIndex","charIndex","_getWordAt","followWrappedLinesAbove","followWrappedLinesBelow","charOffset","leftWideCharCount","rightWideCharCount","leftLongCharOffset","rightLongCharOffset","charAt","_isCharWordSeparator","trim","previousBufferLine","previousLineWordPosition","nextBufferLine","nextLineWordPosition","wordPosition","wordSeparator","wrappedRange","getWrappedRangeForLine","last","createDecorator","_audioContext","audioContextCtor","AudioContext","webkitAudioContext","audioContext","bellAudioSource","createBufferSource","decodeAudioData","_base64ToArrayBuffer","_removeMimeType","bellSound","connect","destination","base64","binaryString","atob","len","bytes","Uint8Array","dataURI","_maxLength","onDeleteEmitter","onInsertEmitter","onTrimEmitter","_array","Array","_startIndex","_length","newMaxLength","newArray","_getCyclicIndex","newLength","recycle","deleteCount","items","countToTrim","trimStart","shiftElements","expandListBy","CircularList","clone","val","depth","clonedObject","isArray","rgb","toPaddedHex","s","contrastRatio","l1","l2","fgR","fgG","fgB","bgR","bgG","bgB","ratio","rgbaColor","toChannels","rgbaMatch","relativeLuminance2","rs","gs","bs","pow","relativeLuminance","reduceLuminance","cr","increaseLuminance","bgL","fgL","resultB","resultA","resultARatio","hasWriteSyncWarnHappened","_onBinary","_onData","_onLineFeed","_onWriteParsed","InstantiationService","OptionsService","BufferService","LogService","CoreService","CoreMouseService","ICoreMouseService","_dirtyRowService","DirtyRowService","IDirtyRowService","unicodeService","UnicodeService","_charsetService","CharsetService","ICharsetService","InputHandler","markRangeDirty","scrollBottom","_writeBuffer","WriteBuffer","promiseResult","parse","_onScrollApi","_windowsMode","writeSync","maxSubsequentCalls","LogLevelEnum","WARN","MINIMUM_COLS","MINIMUM_ROWS","scroll","eraseAttr","registerEscHandler","registerDcsHandler","registerCsiHandler","registerOscHandler","windowsMode","_enableWindowsMode","updateWindowsModeWrappedState","final","_listeners","_disposed","_event","arg1","arg2","queue","call","from","to","GLEVEL","MAX_PARSEBUFFER_LENGTH","paramToWindowOption","n","opts","setWinLines","restoreWin","minimizeWin","setWinPosition","setWinSizePixels","raiseWin","lowerWin","refreshWin","setWinSizeChars","maximizeWin","fullscreenWin","getWinState","getWinPosition","getWinSizePixels","getScreenSizePixels","getCellSizePixels","getWinSizeChars","getScreenSizeChars","getIconTitle","getWinTitle","pushTitle","popTitle","_data","Uint32Array","hook","params","put","concat","subarray","unhook","success","utf32ToString","pt","_coreMouseService","EscapeSequenceParser","_parseBuffer","_stringDecoder","StringToUtf32","_utf8Decoder","Utf8ToUtf32","_windowTitle","_iconName","_windowTitleStack","_iconNameStack","_curAttrData","_eraseAttrDataInternal","_onRequestBell","_onRequestRefreshRows","_onRequestReset","_onRequestSendFocus","_onRequestSyncScrollBar","_onRequestWindowsOptionsReport","_onA11yChar","_onA11yTab","_onColor","_parseStack","paused","cursorStartX","cursorStartY","decodedLength","_specialColors","setCsiHandlerFallback","identifier","identToString","toArray","setEscHandlerFallback","setExecuteHandlerFallback","setOscHandlerFallback","setDcsHandlerFallback","payload","setPrintHandler","print","insertChars","intermediates","scrollLeft","cursorUp","scrollRight","cursorDown","cursorForward","cursorBackward","cursorNextLine","cursorPrecedingLine","cursorCharAbsolute","cursorPosition","cursorForwardTab","eraseInDisplay","prefix","eraseInLine","insertLines","deleteLines","deleteChars","scrollUp","scrollDown","eraseChars","cursorBackwardTab","charPosAbsolute","hPositionRelative","repeatPrecedingCharacter","sendDeviceAttributesPrimary","sendDeviceAttributesSecondary","linePosAbsolute","vPositionRelative","hVPosition","tabClear","setMode","setModePrivate","resetMode","resetModePrivate","charAttributes","deviceStatus","deviceStatusPrivate","softReset","setCursorStyle","setScrollRegion","saveCursor","windowOptions","restoreCursor","insertColumns","deleteColumns","setExecuteHandler","BEL","LF","lineFeed","VT","FF","carriageReturn","BS","backspace","HT","tab","SO","shiftOut","SI","shiftIn","C1","IND","NEL","nextLine","HTS","tabSet","OscHandler","setTitle","setIconName","setOrReportIndexedColor","setOrReportFgColor","setOrReportBgColor","setOrReportCursorColor","restoreIndexedColor","restoreFgColor","restoreBgColor","restoreCursorColor","reverseIndex","keypadApplicationMode","keypadNumericMode","fullReset","setgLevel","selectDefaultCharset","flag","selectCharset","CHARSETS","screenAlignmentPattern","setErrorHandler","DECRQSS","_preserveStack","_logSlowResolvingAsync","p","Promise","race","res","rej","catch","err","wasPaused","DEBUG","prototype","clearRange","decode","chWidth","charset","curAttr","bufferRow","markDirty","setCellFromCodePoint","extended","wcwidth","ch","stringFromCodePoint","_eraseAttrData","insertCells","getNullCell","NULL_CELL_WIDTH","addCodepointToCell","precedingCodepoint","hasContent","DcsHandler","convertEol","_restrictCursor","originalX","nextStop","maxCol","_setCursor","_moveCursor","diffToTop","diffToBottom","param","tabs","prevStop","_eraseInBufferLine","clearWrap","replaceCells","_resetBufferLine","clearMarkers","scrollBackSize","scrollBottomRowsOffset","scrollBottomAbsolute","deleteCells","_is","term","termName","setgCharset","DEFAULT_CHARSET","activeEncoding","activateAltBuffer","activateNormalBuffer","_updateAttrColor","mode","c1","c2","c3","fromColorRGB","_extractColor","accu","cSpace","advance","hasSubParams","subparams","getSubParams","underlineColor","_processUnderline","underlineStyle","updateExtended","savedX","savedY","savedCurAttrData","savedCharset","isBlinking","bottom","second","_savedCharset","slots","spec","parseColor","_setOrReportSpecialColor","collectAndFlag","scrollRegionHeight","level","markAllDirty","_disposables","unregister","disposables","array","isNode","navigator","userAgent","platform","test","isIpad","isIphone","_getKey","insert","_search","getKeyIterator","mid","SortedList","fillFallback","constructor","lastChar","CHAR_DATA_CODE_INDEX","ExtendedAttrs","newObj","isBlink","isFgPalette","isAttributeDefault","hasExtendedAttrs","getUnderlineColor","getUnderlineColorMode","isUnderlineColorRGB","isUnderlineColorPalette","isUnderlineColorDefault","getUnderlineStyle","MAX_BUFFER_SIZE","_hasScrollback","_nullCell","fromCharData","NULL_CELL_CHAR","_whitespaceCell","WHITESPACE_CELL_WIDTH","_isClearing","_cols","_rows","_getCorrectBufferLength","getWhitespaceCell","BufferLine","maxLength","relativeY","correctBufferLength","scrollback","fillViewportRows","fillAttr","newCols","newRows","nullCell","addToY","amountToTrim","_isReflowEnabled","_reflow","_reflowLarger","_reflowSmaller","toRemove","reflowLargerGetLinesToRemove","newLayoutResult","reflowLargerCreateNewLayout","reflowLargerApplyNewLayout","layout","_reflowLargerAdjustViewport","countRemoved","viewportAdjustments","toInsert","countToInsert","wrappedLines","absoluteY","trimmedLines","lastLineLength","destLineLengths","reflowSmallerGetNewLineLengths","linesToAdd","newLines","newLine","destLineIndex","destCol","srcLineIndex","srcCol","cellsToCopy","copyCellsFrom","wrappedLinesIndex","getWrappedLineTrimmedLength","setCell","insertEvents","originalLines","originalLinesLength","originalLineIndex","nextToInsertIndex","nextToInsert","countInsertedSoFar","nextI","insertCountEmitted","lineIndex","trimRight","CHAR_DATA_WIDTH_INDEX","CHAR_DATA_CHAR_INDEX","tabStopWidth","Marker","onInsert","onDelete","_removeMarker","startOverscan","endOverscan","BufferStringIterator","Buffer","_trimRight","_endIndex","_startOverscan","_endOverscan","_current","fillCellData","_combined","_extendedAttrs","cp","CHAR_DATA_ATTR_INDEX","codePoint","eAttrs","keys","copyFrom","src","applyInReverse","srcData","srcCombinedKeys","bufferCols","endsInNull","followingLineStartsWithWide","oldCols","bufferAbsoluteY","srcTrimmedTineLength","srcRemainingCells","destRemainingCells","countToRemove","nextToRemoveIndex","nextToRemoveStart","countRemovedSoFar","newLayout","newLayoutLines","newLineLengths","cellsNeeded","reduce","srcLine","cellsAvailable","oldTrimmedLength","endsWithWide","_normal","_alt","inactiveBuffer","BufferSet","obj","combined","DEFAULT_ATTR","_nextId","isDisposed","_onDispose","C","NUL","SOH","STX","EOT","ENQ","ACK","DLE","DC1","DC2","DC3","DC4","NAK","SYN","ETB","CAN","EM","SUB","FS","GS","RS","US","SP","DEL","PAD","HOP","BPH","NBH","SSA","ESA","HTJ","VTS","PLD","PLU","RI","SS2","SS3","DCS","PU1","PU2","STS","CCH","MW","SPA","EPA","SOS","SGCI","SCI","CSI","OSC","PM","APC","KEYCODE_KEY_MAPPINGS","applicationCursorMode","modifiers","keyMapping","keyString","toUpperCase","toLowerCase","_interim","startPos","interim","byte1","byte2","byte3","byte4","discardInterim","tmp","missing","fourStop","table","BMP_COMBINING","HIGH_COMBINING","version","num","ucs","UnicodeV6","qmt","queueMicrotask","cb","resolve","_action","_callbacks","_pendingData","_bufferOffset","_isSyncWriting","_syncCalls","chunk","_innerWrite","lastTime","startTime","RGB_REX","HASH_REX","pad","bits","s2","low","base","adv","PAYLOAD_LIMIT","EMPTY_HANDLERS","_handlers","create","_active","_ident","_handlerFb","_stack","loopPosition","fallThrough","registerHandler","handlerList","handlerIndex","clearHandler","setHandlerFallback","handlerResult","DcsParser","EMPTY_PARAMS","Params","addParam","_handler","_params","_hitLimit","ret","setDefault","addMany","codes","TransitionTable","NON_ASCII_PRINTABLE","VT500_TRANSITION_TABLE","blueprint","apply","unused","PRINTABLES","EXECUTABLES","states","_transitions","handlers","handlerPos","transition","chunkPos","initialState","currentState","_collect","_printHandlerFb","_executeHandlerFb","_csiHandlerFb","_escHandlerFb","_errorHandlerFb","_printHandler","_executeHandlers","_csiHandlers","_escHandlers","_oscParser","OscParser","_dcsParser","_errorHandler","_identifier","finalRange","intermediate","finalCode","reverse","clearPrintHandler","clearEscHandler","clearExecuteHandler","clearCsiHandler","clearDcsHandler","clearOscHandler","clearErrorHandler","collect","abort","addSubParam","addDigit","handlersEsc","jj","_start","_put","MAX_VALUE","maxSubParamsLength","Int32Array","_subParams","_subParamsLength","_subParamsIdx","Uint16Array","_rejectDigits","_rejectSubDigits","_digitIsSub","fromArray","k","newParams","getSubParamsAll","store","cur","_addons","instance","terminal","loadedAddon","_wrappedAddonDispose","init","getLine","BufferLineApiView","BufferApiView","_line","getCell","_onBufferChange","_alternate","alternate","addCsiHandler","addDcsHandler","addEscHandler","addOscHandler","provider","versions","activeVersion","isUserScrolling","_cachedBlankLine","topRow","bottomRow","willBufferBeTrimmed","isFull","oldYdisp","scrollAmount","glevel","_charsets","DEFAULT_PROTOCOLS","NONE","restrict","X10","VT200","DRAG","ANY","eventCode","isSGR","S","DEFAULT_ENCODINGS","DEFAULT","SGR","_protocols","_encodings","_activeProtocol","_activeEncoding","_onProtocolChange","_lastEvent","addProtocol","addEncoding","name","protocol","encoding","_compareEvents","report","triggerBinaryEvent","down","up","drag","move","e1","e2","DEFAULT_MODES","DEFAULT_DEC_PRIVATE_MODES","_onUserInput","_scrollToBottom","wasUserInput","disableStdin","_decorations","_onDecorationRegistered","_onDecorationRemoved","Decoration","getDecorationsAtLine","xmin","xmax","_cachedBg","_cachedFg","foregroundColor","_end","_entries","service","ServiceCollection","_services","getService","ctor","serviceDependencies","getServiceDependencies","sort","serviceArgs","dependency","firstServiceArgPos","optionsKeyToLogLevel","info","INFO","ERROR","off","OFF","_updateLogLevel","_evalLazyOptionalParams","optionalParams","_log","message","log","DEFAULT_BELL_SOUND","DEFAULT_OPTIONS","altClickMovesCursor","FONT_WEIGHT_OPTIONS","_onOptionChange","defaultOptions","newValue","_sanitizeAndValidateOption","_setupOptions","serviceRegistry","decorator","arguments","storeServiceDependency","_providers","_onChange","defaultProvider","_activeProvider","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","_xterm","require","_typeof","Symbol","_classCallCheck","Constructor","TypeError","_defineProperties","props","descriptor","enumerable","configurable","writable","_toPropertyKey","_createClass","protoProps","staticProps","arg","_toPrimitive","hint","prim","toPrimitive","TerminalUI","socket","_this","sendInput","on","emit","prompt","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","defaultClearTimeout","runTimeout","fun","runClearTimeout","currentQueue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","Item","noop","nextTick","title","env","argv","once","removeAllListeners","prependListener","prependOnceListener","listeners","binding","cwd","chdir","umask","useColors","documentElement","WebkitAppearance","firebug","exception","$1","formatArgs","namespace","humanize","lastC","Function","namespaces","storage","removeItem","load","localstorage","localStorage","chrome","local","formatters","JSON","stringify","encode","arraybuffer","encoded1","encoded2","encoded3","encoded4","bufferLength","ArrayBuffer","_TerminalUI","_socket","_interopRequireDefault","__esModule","default","serverAddress","connectToSocket","io","startTerminal","attachTo","startListening","getElementById"],"mappings":"AwIIA,AZJA,ATAA,APIA,I4BAA,AZJA,ATAA,APIA,E4BAA,AZJA,ATAA,APIA,GgBJA,ATAA,CqBKA,A5BAA,E4BAA,A5BAA,G4BAA,A5BAA,E4BCA,A5BAA,CgBJA,ATAA,CqBIA,A5BAA,G4BAA,A5BAA,E4BCA,A5BAA,CgBLA,ATAA,CqBKA,A5BAA,G4BAA,A5BAA,E4BCA,A5BAA,E4BAA,AZNA,ATAA,APMA,MgBNA,ATAA,CqBMA,A5BAA,E4BsCA,A5BAA,MgB5CA,ATAA,GqB4CA,A5BAA,E4BAA,A5BAA,G4BEA,A5BAA,CgB9CA,ATAA,GSCA,ATAA,EqB4CA,A5BAA,E4BAA,A5BAA,EgB5CA,ATAA,KqB4CA,A5BAA,I4BCA,A5BAA,O4BAA,A5BAA,EgB7CA,ATAA,ESAA,ATAA,CqB6CA,A5BAA,C4BGA,A5BAA,GgBhDA,ATAA,CqBgDA,A5BAA,E4BAA,A5BAA,wH4BAA,A5BAA,K4BCA,A5BAA,G4BEA,A5BAA,G4BAA,A5BAA,E4BAA,A5BAA,C4BGA,A5BAA,I4BAA,A5BAA,E4BAA,A5BAA,W4BAA,A5BAA,E4BAA,A5BAA,I4BEA,A5BAA,Q4BDA,A5BAA,E4BAA,A5BAA,I4BAA,A5BAA,M4BAA,A5BAA,e4BEA,A5BAA,I4BAA,A5BAA,Q4BCA,A5BAA,I4BAA,A5BAA,O4BCA,A5BAA,I4BAA,A5BAA,M4BCA,A5BAA,I4BAA,A5BAA,K4BCA,A5BAA,I4BAA,A5BAA,I4BCA,A5BAA,O4BAA,A5BAA,E4BAA,A5BAA,E4BCA,A5BAA,I4BAA,A5BAA,O4BCA,A5BAA,I4BAA,A5BAA,M4BCA,A5BAA,I4BAA,A5BAA,I4BCA,A5BAA,O4BAA,A5BAA,E4BAA,A5BAA,E4BCA,A5BAA,I4BAA,A5BAA,Q4BCA,A5BAA,I4BAA,A5BAA,O4BCA,A5BAA,I4BAA,A5BAA,M4BCA,A5BAA,I4BAA,A5BAA,K4BCA,A5BAA,I4BAA,A5BAA,I4BCA,A5BAA,O4BAA,A5BAA,E4BAA,A5BAA,E4BCA,A5BAA,I4BAA,A5BAA,U4BCA,A5BAA,I4BAA,A5BAA,S4BCA,A5BAA,I4BAA,A5BAA,O4BCA,A5BAA,I4BAA,A5BAA,M4BCA,A5BAA,I4BAA,A5BAA,I4BCA,A5BAA,O4BAA,A5BAA,E4BAA,A5BAA,E4BCA,A5BAA,I4BAA,A5BAA,U4BCA,A5BAA,I4BAA,A5BAA,S4BCA,A5BAA,I4BAA,A5BAA,O4BCA,A5BAA,I4BAA,A5BAA,M4BCA,A5BAA,I4BAA,A5BAA,I4BCA,A5BAA,O4BAA,A5BAA,E4BAA,A5BAA,E4BCA,A5BAA,I4BAA,A5BAA,e4BCA,A5BAA,I4BAA,A5BAA,c4BCA,A5BAA,I4BAA,A5BAA,Q4BCA,A5BAA,I4BAA,A5BAA,O4BCA,A5BAA,I4BAA,A5BAA,K4BCA,A5BAA,O4BAA,A5BAA,E4BCA,A5BAA,Q4BCA,A5BAA,U4BYA,A5BAA,S4BAA,A5BAA,E4BAA,A5BAA,G4BCA,A5BAA,O4BAA,A5BAA,G4BAA,A5BAA,E4BCA,A5BAA,K4BAA,A5BAA,M4BAA,A5BAA,E4BAA,A5BAA,G4BAA,A5BAA,I4BEA,A5BAA,G4BAA,A5BAA,E4BCA,A5BAA,K4BAA,A5BAA,M4BAA,A5BAA,E4BAA,A5BAA,G4BAA,A5BAA,I4BEA,A5BAA,G4BAA,A5BAA,E4BCA,A5BAA,K4BAA,A5BAA,M4BAA,A5BAA,E4BAA,A5BAA,G4BAA,A5BAA,I4BEA,A5BAA,G4BAA,A5BAA,E4BCA,A5BAA,K4BAA,A5BAA,M4BAA,A5BAA,E4BAA,A5BAA,G4BAA,A5BAA,I4BEA,A5BAA,E4BAA,A5BAA,K4BWA,A5BAA,S4BAA,A5BAA,E4BAA,A5BAA,G4BCA,A5BAA,O4BAA,A5BAA,E4BAA,A5BAA,E4BAA,A5BAA,E4BAA,A5BAA,Q4BCA,A5BAA,E4BAA,A5BAA,E4BAA,A5BAA,E4BAA,A5BAA,S4BCA,A5BAA,E4BAA,A5BAA,E4BAA,A5BAA,E4BAA,A5BAA,W4BCA,A5BAA,E4BAA,A5BAA,E4BAA,A5BAA,E4BAA,A5BAA,W4BCA,A5BAA,E4BAA,A5BAA,M4BOA,A5BAA,S4BAA,A5BAA,E4BAA,A5BAA,E4BAA,A5BAA,E4BAA,A5BAA,G4BCA,A5BAA,K4BAA,A5BAA,E4BAA,A5BAA,G4BGA,A5BAA,O4BAA,A5BAA,E4BAA,A5BAA,I4BAA,A5BAA,E4BCA,A5BAA,K4BAA,A5BAA,M4BAA,A5BAA,E4BAA,A5BAA,G4BAA,A5BAA,I4BAA,A5BAA,E4BEA,A5BAA,K4BAA,A5BAA,K4BAA,A5BAA,E4BAA,A5BAA,G4BAA,A5BAA,I4BAA,A5BAA,E4BAA,A5BAA,I4B9HA,A5BAA,O4BAA,A5BAA,Q4BAA,A5BAA,S4BAA,A5BAA,E4BAA,A5BAA,G4BCA,A5BAA,E4BAA,A5BAA,G4BAA,A5BAA,G4BCA,A5BAA,I4BAA,A5BAA,S4BAA,A5BAA,E4BCA,A5BAA,G4BAA,A5BAA,W4BAA,A5BAA,G4BAA,A5BAA,E4BAA,A5BAA,O4BAA,A5BAA,E4BCA,A5BAA,O4BAA,A5BAA,E4BAA,A5BAA,G4BCA,A5BAA,G4BAA,A5BAA,W4BAA,A5BAA,I4BAA,A5BAA,I4BAA,A5BAA,M4BAA,A5BAA,G4BCA,A5BAA,O4BAA,A5BAA,E4BAA,A5BAA,K4BAA,A5BAA,E4BAA,A5BAA,G4BAA,A5BAA,E4BAA,A5BAA,G4BEA,A5BAA,M4BAA,A5BAA,I4BAA,A5BAA,M4BCA,A5BAA,wD4BCA,A5BAA,K4BAA,A5BAA,U4BAA,A5BAA;;O5GlCA,SAA2CA,EAAMC,GAChD,GAAsB,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,SACb,GAAqB,mBAAXG,GAAyBA,EAAOC,IAC9CD,EAAO,GAAIH,OACP,CACJ,IAAIK,EAAIL,IACR,IAAI,IAAIM,KAAKD,GAAuB,iBAAZJ,QAAuBA,QAAUF,GAAMO,GAAKD,EAAEC,IAPxE,CASGC,KAAM,WACT,YCLA,aAAA,IAAA,EAAA,CAAA,KAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,MAAA,KAAA,YAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,CAAA,UAAA,cAAA,OAAA,SAAA,EAAA,GAAA,EAAA,UAAA,IAAA,SAAA,EAAA,GAAA,IAAA,IAAA,KAAA,EAAA,OAAA,UAAA,eAAA,KAAA,EAAA,KAAA,EAAA,GAAA,EAAA,MAAA,EAAA,IAAA,SAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,uBAAA,OAAA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AS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,C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","file":"src.9c3838ae.js","sourceRoot":"..","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, function() {\nreturn ","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from 'browser/LocalizableStrings';\nimport { ITerminal, IRenderDebouncer } from 'browser/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { isMac } from 'common/Platform';\nimport { TimeBasedDebouncer } from 'browser/TimeBasedDebouncer';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { Disposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { IRenderService } from 'browser/services/Services';\nimport { removeElementFromParent } from 'browser/Dom';\n\nconst MAX_ROWS_TO_READ = 20;\n\nconst enum BoundaryPosition {\n  TOP,\n  BOTTOM\n}\n\nexport class AccessibilityManager extends Disposable {\n  private _accessibilityTreeRoot: HTMLElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[];\n  private _liveRegion: HTMLElement;\n  private _liveRegionLineCount: number = 0;\n\n  private _renderRowsDebouncer: IRenderDebouncer;\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _topBoundaryFocusListener: (e: FocusEvent) => void;\n  private _bottomBoundaryFocusListener: (e: FocusEvent) => void;\n\n  /**\n   * This queue has a character pushed to it for keys that are pressed, if the\n   * next character added to the terminal is equal to the key char then it is\n   * not announced (added to live region) because it has already been announced\n   * by the textarea event (which cannot be canceled). There are some race\n   * condition cases if there is typing while data is streaming, but this covers\n   * the main case of typing into the prompt and inputting the answer to a\n   * question (Y/N, etc.).\n   */\n  private _charsToConsume: string[] = [];\n\n  private _charsToAnnounce: string = '';\n\n  constructor(\n    private readonly _terminal: ITerminal,\n    private readonly _renderService: IRenderService\n  ) {\n    super();\n    this._accessibilityTreeRoot = document.createElement('div');\n    this._accessibilityTreeRoot.classList.add('xterm-accessibility');\n    this._accessibilityTreeRoot.tabIndex = 0;\n\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.setAttribute('role', 'list');\n    this._rowContainer.classList.add('xterm-accessibility-tree');\n    this._rowElements = [];\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n\n    this._topBoundaryFocusListener = e => this._onBoundaryFocus(e, BoundaryPosition.TOP);\n    this._bottomBoundaryFocusListener = e => this._onBoundaryFocus(e, BoundaryPosition.BOTTOM);\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n    this._accessibilityTreeRoot.appendChild(this._rowContainer);\n\n    this._renderRowsDebouncer = new TimeBasedDebouncer(this._renderRows.bind(this));\n    this._refreshRows();\n\n    this._liveRegion = document.createElement('div');\n    this._liveRegion.classList.add('live-region');\n    this._liveRegion.setAttribute('aria-live', 'assertive');\n    this._accessibilityTreeRoot.appendChild(this._liveRegion);\n\n    if (!this._terminal.element) {\n      throw new Error('Cannot enable accessibility before Terminal.open');\n    }\n    this._terminal.element.insertAdjacentElement('afterbegin', this._accessibilityTreeRoot);\n\n    this.register(this._renderRowsDebouncer);\n    this.register(this._terminal.onResize(e => this._onResize(e.rows)));\n    this.register(this._terminal.onRender(e => this._refreshRows(e.start, e.end)));\n    this.register(this._terminal.onScroll(() => this._refreshRows()));\n    // Line feed is an issue as the prompt won't be read out after a command is run\n    this.register(this._terminal.onA11yChar(char => this._onChar(char)));\n    this.register(this._terminal.onLineFeed(() => this._onChar('\\n')));\n    this.register(this._terminal.onA11yTab(spaceCount => this._onTab(spaceCount)));\n    this.register(this._terminal.onKey(e => this._onKey(e.key)));\n    this.register(this._terminal.onBlur(() => this._clearLiveRegion()));\n    this.register(this._renderService.onDimensionsChange(() => this._refreshRowsDimensions()));\n\n    this._screenDprMonitor = new ScreenDprMonitor();\n    this.register(this._screenDprMonitor);\n    this._screenDprMonitor.setListener(() => this._refreshRowsDimensions());\n    // This shouldn't be needed on modern browsers but is present in case the\n    // media query that drives the ScreenDprMonitor isn't supported\n    this.register(addDisposableDomListener(window, 'resize', () => this._refreshRowsDimensions()));\n  }\n\n  public dispose(): void {\n    super.dispose();\n    removeElementFromParent(this._accessibilityTreeRoot);\n    this._rowElements.length = 0;\n  }\n\n  private _onBoundaryFocus(e: FocusEvent, position: BoundaryPosition): void {\n    const boundaryElement = e.target as HTMLElement;\n    const beforeBoundaryElement = this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2];\n\n    // Don't scroll if the buffer top has reached the end in that direction\n    const posInSet = boundaryElement.getAttribute('aria-posinset');\n    const lastRowPos = position === BoundaryPosition.TOP ? '1' : `${this._terminal.buffer.lines.length}`;\n    if (posInSet === lastRowPos) {\n      return;\n    }\n\n    // Don't scroll when the last focused item was not the second row (focus is going the other\n    // direction)\n    if (e.relatedTarget !== beforeBoundaryElement) {\n      return;\n    }\n\n    // Remove old boundary element from array\n    let topBoundaryElement: HTMLElement;\n    let bottomBoundaryElement: HTMLElement;\n    if (position === BoundaryPosition.TOP) {\n      topBoundaryElement = boundaryElement;\n      bottomBoundaryElement = this._rowElements.pop()!;\n      this._rowContainer.removeChild(bottomBoundaryElement);\n    } else {\n      topBoundaryElement = this._rowElements.shift()!;\n      bottomBoundaryElement = boundaryElement;\n      this._rowContainer.removeChild(topBoundaryElement);\n    }\n\n    // Remove listeners from old boundary elements\n    topBoundaryElement.removeEventListener('focus', this._topBoundaryFocusListener);\n    bottomBoundaryElement.removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Add new element to array/DOM\n    if (position === BoundaryPosition.TOP) {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.unshift(newElement);\n      this._rowContainer.insertAdjacentElement('afterbegin', newElement);\n    } else {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.push(newElement);\n      this._rowContainer.appendChild(newElement);\n    }\n\n    // Add listeners to new boundary elements\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Scroll up\n    this._terminal.scrollLines(position === BoundaryPosition.TOP ? -1 : 1);\n\n    // Focus new boundary before element\n    this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2].focus();\n\n    // Prevent the standard behavior\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  private _onResize(rows: number): void {\n    // Remove bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Grow rows as required\n    for (let i = this._rowContainer.children.length; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n    // Shrink rows as required\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n\n    // Add bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n  }\n\n  private _createAccessibilityTreeNode(): HTMLElement {\n    const element = document.createElement('div');\n    element.setAttribute('role', 'listitem');\n    element.tabIndex = -1;\n    this._refreshRowDimensions(element);\n    return element;\n  }\n\n  private _onTab(spaceCount: number): void {\n    for (let i = 0; i < spaceCount; i++) {\n      this._onChar(' ');\n    }\n  }\n\n  private _onChar(char: string): void {\n    if (this._liveRegionLineCount < MAX_ROWS_TO_READ + 1) {\n      if (this._charsToConsume.length > 0) {\n        // Have the screen reader ignore the char if it was just input\n        const shiftedChar = this._charsToConsume.shift();\n        if (shiftedChar !== char) {\n          this._charsToAnnounce += char;\n        }\n      } else {\n        this._charsToAnnounce += char;\n      }\n\n      if (char === '\\n') {\n        this._liveRegionLineCount++;\n        if (this._liveRegionLineCount === MAX_ROWS_TO_READ + 1) {\n          this._liveRegion.textContent += Strings.tooMuchOutput;\n        }\n      }\n\n      // Only detach/attach on mac as otherwise messages can go unaccounced\n      if (isMac) {\n        if (this._liveRegion.textContent && this._liveRegion.textContent.length > 0 && !this._liveRegion.parentNode) {\n          setTimeout(() => {\n            this._accessibilityTreeRoot.appendChild(this._liveRegion);\n          }, 0);\n        }\n      }\n    }\n  }\n\n  private _clearLiveRegion(): void {\n    this._liveRegion.textContent = '';\n    this._liveRegionLineCount = 0;\n\n    // Only detach/attach on mac as otherwise messages can go unaccounced\n    if (isMac) {\n      removeElementFromParent(this._liveRegion);\n    }\n  }\n\n  private _onKey(keyChar: string): void {\n    this._clearLiveRegion();\n    this._charsToConsume.push(keyChar);\n  }\n\n  private _refreshRows(start?: number, end?: number): void {\n    this._renderRowsDebouncer.refresh(start, end, this._terminal.rows);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    const buffer: IBuffer = this._terminal.buffer;\n    const setSize = buffer.lines.length.toString();\n    for (let i = start; i <= end; i++) {\n      const lineData = buffer.translateBufferLineToString(buffer.ydisp + i, true);\n      const posInSet = (buffer.ydisp + i + 1).toString();\n      const element = this._rowElements[i];\n      if (element) {\n        if (lineData.length === 0) {\n          element.innerText = '\\u00a0';\n        } else {\n          element.textContent = lineData;\n        }\n        element.setAttribute('aria-posinset', posInSet);\n        element.setAttribute('aria-setsize', setSize);\n      }\n    }\n    this._announceCharacters();\n  }\n\n  private _refreshRowsDimensions(): void {\n    if (!this._renderService.dimensions.actualCellHeight) {\n      return;\n    }\n    if (this._rowElements.length !== this._terminal.rows) {\n      this._onResize(this._terminal.rows);\n    }\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._refreshRowDimensions(this._rowElements[i]);\n    }\n  }\n\n  private _refreshRowDimensions(element: HTMLElement): void {\n    element.style.height = `${this._renderService.dimensions.actualCellHeight}px`;\n  }\n\n  private _announceCharacters(): void {\n    if (this._charsToAnnounce.length === 0) {\n      return;\n    }\n    this._liveRegion.textContent += this._charsToAnnounce;\n    this._charsToAnnounce = '';\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionService } from 'browser/services/Services';\nimport { ICoreService } from 'common/services/Services';\n\n/**\n * Prepares text to be pasted into the terminal by normalizing the line endings\n * @param text The pasted text that needs processing before inserting into the terminal\n */\nexport function prepareTextForTerminal(text: string): string {\n  return text.replace(/\\r?\\n/g, '\\r');\n}\n\n/**\n * Bracket text for paste, if necessary, as per https://cirw.in/blog/bracketed-paste\n * @param text The pasted text to bracket\n */\nexport function bracketTextForPaste(text: string, bracketedPasteMode: boolean): string {\n  if (bracketedPasteMode) {\n    return '\\x1b[200~' + text + '\\x1b[201~';\n  }\n  return text;\n}\n\n/**\n * Binds copy functionality to the given terminal.\n * @param ev The original copy event to be handled\n */\nexport function copyHandler(ev: ClipboardEvent, selectionService: ISelectionService): void {\n  if (ev.clipboardData) {\n    ev.clipboardData.setData('text/plain', selectionService.selectionText);\n  }\n  // Prevent or the original text will be copied.\n  ev.preventDefault();\n}\n\n/**\n * Redirect the clipboard's data to the terminal's input handler.\n * @param ev The original paste event to be handled\n * @param term The terminal on which to apply the handled paste event\n */\nexport function handlePasteEvent(ev: ClipboardEvent, textarea: HTMLTextAreaElement, coreService: ICoreService): void {\n  ev.stopPropagation();\n  if (ev.clipboardData) {\n    const text = ev.clipboardData.getData('text/plain');\n    paste(text, textarea, coreService);\n  }\n}\n\nexport function paste(text: string, textarea: HTMLTextAreaElement, coreService: ICoreService): void {\n  text = prepareTextForTerminal(text);\n  text = bracketTextForPaste(text, coreService.decPrivateModes.bracketedPasteMode);\n  coreService.triggerDataEvent(text, true);\n  textarea.value = '';\n}\n\n/**\n * Moves the textarea under the mouse cursor and focuses it.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n */\nexport function moveTextAreaUnderMouseCursor(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement): void {\n\n  // Calculate textarea position relative to the screen element\n  const pos = screenElement.getBoundingClientRect();\n  const left = ev.clientX - pos.left - 10;\n  const top = ev.clientY - pos.top - 10;\n\n  // Bring textarea at the cursor position\n  textarea.style.width = '20px';\n  textarea.style.height = '20px';\n  textarea.style.left = `${left}px`;\n  textarea.style.top = `${top}px`;\n  textarea.style.zIndex = '1000';\n\n  textarea.focus();\n}\n\n/**\n * Bind to right-click event and allow right-click copy and paste.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n * @param selectionService The terminal's selection manager.\n * @param shouldSelectWord If true and there is no selection the current word will be selected\n */\nexport function rightClickHandler(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement, selectionService: ISelectionService, shouldSelectWord: boolean): void {\n  moveTextAreaUnderMouseCursor(ev, textarea, screenElement);\n\n  if (shouldSelectWord) {\n    selectionService.rightClickSelect(ev);\n  }\n\n  // Get textarea ready to copy from the context menu\n  textarea.value = selectionService.selectionText;\n  textarea.select();\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColorContrastCache } from 'browser/Types';\nimport { IColor } from 'common/Types';\n\nexport class ColorContrastCache implements IColorContrastCache {\n  private _color: { [bg: number]: { [fg: number]: IColor | null | undefined } | undefined } = {};\n  private _rgba: { [bg: number]: { [fg: number]: string | null | undefined } | undefined } = {};\n\n  public clear(): void {\n    this._color = {};\n    this._rgba = {};\n  }\n\n  public setCss(bg: number, fg: number, value: string | null): void {\n    if (!this._rgba[bg]) {\n      this._rgba[bg] = {};\n    }\n    this._rgba[bg]![fg] = value;\n  }\n\n  public getCss(bg: number, fg: number): string | null | undefined {\n    return this._rgba[bg] ? this._rgba[bg]![fg] : undefined;\n  }\n\n  public setColor(bg: number, fg: number, value: IColor | null): void {\n    if (!this._color[bg]) {\n      this._color[bg] = {};\n    }\n    this._color[bg]![fg] = value;\n  }\n\n  public getColor(bg: number, fg: number): IColor | null | undefined {\n    return this._color[bg] ? this._color[bg]![fg] : undefined;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColorManager, IColorSet, IColorContrastCache } from 'browser/Types';\nimport { ITheme } from 'common/services/Services';\nimport { channels, color, css } from 'common/Color';\nimport { ColorContrastCache } from 'browser/ColorContrastCache';\nimport { ColorIndex, IColor } from 'common/Types';\n\n\ninterface IRestoreColorSet {\n  foreground: IColor;\n  background: IColor;\n  cursor: IColor;\n  ansi: IColor[];\n}\n\n\nconst DEFAULT_FOREGROUND = css.toColor('#ffffff');\nconst DEFAULT_BACKGROUND = css.toColor('#000000');\nconst DEFAULT_CURSOR = css.toColor('#ffffff');\nconst DEFAULT_CURSOR_ACCENT = css.toColor('#000000');\nconst DEFAULT_SELECTION = {\n  css: 'rgba(255, 255, 255, 0.3)',\n  rgba: 0xFFFFFF4D\n};\n\n// An IIFE to generate DEFAULT_ANSI_COLORS.\nexport const DEFAULT_ANSI_COLORS = Object.freeze((() => {\n  const colors = [\n    // dark:\n    css.toColor('#2e3436'),\n    css.toColor('#cc0000'),\n    css.toColor('#4e9a06'),\n    css.toColor('#c4a000'),\n    css.toColor('#3465a4'),\n    css.toColor('#75507b'),\n    css.toColor('#06989a'),\n    css.toColor('#d3d7cf'),\n    // bright:\n    css.toColor('#555753'),\n    css.toColor('#ef2929'),\n    css.toColor('#8ae234'),\n    css.toColor('#fce94f'),\n    css.toColor('#729fcf'),\n    css.toColor('#ad7fa8'),\n    css.toColor('#34e2e2'),\n    css.toColor('#eeeeec')\n  ];\n\n  // Fill in the remaining 240 ANSI colors.\n  // Generate colors (16-231)\n  const v = [0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff];\n  for (let i = 0; i < 216; i++) {\n    const r = v[(i / 36) % 6 | 0];\n    const g = v[(i / 6) % 6 | 0];\n    const b = v[i % 6];\n    colors.push({\n      css: channels.toCss(r, g, b),\n      rgba: channels.toRgba(r, g, b)\n    });\n  }\n\n  // Generate greys (232-255)\n  for (let i = 0; i < 24; i++) {\n    const c = 8 + i * 10;\n    colors.push({\n      css: channels.toCss(c, c, c),\n      rgba: channels.toRgba(c, c, c)\n    });\n  }\n\n  return colors;\n})());\n\n/**\n * Manages the source of truth for a terminal's colors.\n */\nexport class ColorManager implements IColorManager {\n  public colors: IColorSet;\n  private _ctx: CanvasRenderingContext2D;\n  private _litmusColor: CanvasGradient;\n  private _contrastCache: IColorContrastCache;\n  private _restoreColors!: IRestoreColorSet;\n\n  constructor(document: Document, public allowTransparency: boolean) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) {\n      throw new Error('Could not get rendering context');\n    }\n    this._ctx = ctx;\n    this._ctx.globalCompositeOperation = 'copy';\n    this._litmusColor = this._ctx.createLinearGradient(0, 0, 1, 1);\n    this._contrastCache = new ColorContrastCache();\n    this.colors = {\n      foreground: DEFAULT_FOREGROUND,\n      background: DEFAULT_BACKGROUND,\n      cursor: DEFAULT_CURSOR,\n      cursorAccent: DEFAULT_CURSOR_ACCENT,\n      selectionTransparent: DEFAULT_SELECTION,\n      selectionOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      selectionForeground: undefined,\n      ansi: DEFAULT_ANSI_COLORS.slice(),\n      contrastCache: this._contrastCache\n    };\n    this._updateRestoreColors();\n  }\n\n  public onOptionsChange(key: string): void {\n    if (key === 'minimumContrastRatio') {\n      this._contrastCache.clear();\n    }\n  }\n\n  /**\n   * Sets the terminal's theme.\n   * @param theme The  theme to use. If a partial theme is provided then default\n   * colors will be used where colors are not defined.\n   */\n  public setTheme(theme: ITheme = {}): void {\n    this.colors.foreground = this._parseColor(theme.foreground, DEFAULT_FOREGROUND);\n    this.colors.background = this._parseColor(theme.background, DEFAULT_BACKGROUND);\n    this.colors.cursor = this._parseColor(theme.cursor, DEFAULT_CURSOR, true);\n    this.colors.cursorAccent = this._parseColor(theme.cursorAccent, DEFAULT_CURSOR_ACCENT, true);\n    this.colors.selectionTransparent = this._parseColor(theme.selection, DEFAULT_SELECTION, true);\n    this.colors.selectionOpaque = color.blend(this.colors.background, this.colors.selectionTransparent);\n    const nullColor: IColor = {\n      css: '',\n      rgba: 0\n    };\n    this.colors.selectionForeground = theme.selectionForeground ? this._parseColor(theme.selectionForeground, nullColor) : undefined;\n    if (this.colors.selectionForeground === nullColor) {\n      this.colors.selectionForeground = undefined;\n    }\n\n    /**\n     * If selection color is opaque, blend it with background with 0.3 opacity\n     * Issue #2737\n     */\n    if (color.isOpaque(this.colors.selectionTransparent)) {\n      const opacity = 0.3;\n      this.colors.selectionTransparent = color.opacity(this.colors.selectionTransparent, opacity);\n    }\n    this.colors.ansi[0] = this._parseColor(theme.black, DEFAULT_ANSI_COLORS[0]);\n    this.colors.ansi[1] = this._parseColor(theme.red, DEFAULT_ANSI_COLORS[1]);\n    this.colors.ansi[2] = this._parseColor(theme.green, DEFAULT_ANSI_COLORS[2]);\n    this.colors.ansi[3] = this._parseColor(theme.yellow, DEFAULT_ANSI_COLORS[3]);\n    this.colors.ansi[4] = this._parseColor(theme.blue, DEFAULT_ANSI_COLORS[4]);\n    this.colors.ansi[5] = this._parseColor(theme.magenta, DEFAULT_ANSI_COLORS[5]);\n    this.colors.ansi[6] = this._parseColor(theme.cyan, DEFAULT_ANSI_COLORS[6]);\n    this.colors.ansi[7] = this._parseColor(theme.white, DEFAULT_ANSI_COLORS[7]);\n    this.colors.ansi[8] = this._parseColor(theme.brightBlack, DEFAULT_ANSI_COLORS[8]);\n    this.colors.ansi[9] = this._parseColor(theme.brightRed, DEFAULT_ANSI_COLORS[9]);\n    this.colors.ansi[10] = this._parseColor(theme.brightGreen, DEFAULT_ANSI_COLORS[10]);\n    this.colors.ansi[11] = this._parseColor(theme.brightYellow, DEFAULT_ANSI_COLORS[11]);\n    this.colors.ansi[12] = this._parseColor(theme.brightBlue, DEFAULT_ANSI_COLORS[12]);\n    this.colors.ansi[13] = this._parseColor(theme.brightMagenta, DEFAULT_ANSI_COLORS[13]);\n    this.colors.ansi[14] = this._parseColor(theme.brightCyan, DEFAULT_ANSI_COLORS[14]);\n    this.colors.ansi[15] = this._parseColor(theme.brightWhite, DEFAULT_ANSI_COLORS[15]);\n    // Clear our the cache\n    this._contrastCache.clear();\n    this._updateRestoreColors();\n  }\n\n  public restoreColor(slot?: ColorIndex): void {\n    // unset slot restores all ansi colors\n    if (slot === undefined) {\n      for (let i = 0; i < this._restoreColors.ansi.length; ++i) {\n        this.colors.ansi[i] = this._restoreColors.ansi[i];\n      }\n      return;\n    }\n    switch (slot) {\n      case ColorIndex.FOREGROUND:\n        this.colors.foreground = this._restoreColors.foreground;\n        break;\n      case ColorIndex.BACKGROUND:\n        this.colors.background = this._restoreColors.background;\n        break;\n      case ColorIndex.CURSOR:\n        this.colors.cursor = this._restoreColors.cursor;\n        break;\n      default:\n        this.colors.ansi[slot] = this._restoreColors.ansi[slot];\n    }\n  }\n\n  private _updateRestoreColors(): void {\n    this._restoreColors = {\n      foreground: this.colors.foreground,\n      background: this.colors.background,\n      cursor: this.colors.cursor,\n      ansi: this.colors.ansi.slice()\n    };\n  }\n\n  private _parseColor(\n    css: string | undefined,\n    fallback: IColor,\n    allowTransparency: boolean = this.allowTransparency\n  ): IColor {\n    if (css === undefined) {\n      return fallback;\n    }\n\n    // If parsing the value results in failure, then it must be ignored, and the attribute must\n    // retain its previous value.\n    // -- https://html.spec.whatwg.org/multipage/canvas.html#fill-and-stroke-styles\n    this._ctx.fillStyle = this._litmusColor;\n    this._ctx.fillStyle = css;\n    if (typeof this._ctx.fillStyle !== 'string') {\n      console.warn(`Color: ${css} is invalid using fallback ${fallback.css}`);\n      return fallback;\n    }\n\n    this._ctx.fillRect(0, 0, 1, 1);\n    const data = this._ctx.getImageData(0, 0, 1, 1).data;\n\n    // Check if the printed color was transparent\n    if (data[3] !== 0xFF) {\n      if (!allowTransparency) {\n        // Ideally we'd just ignore the alpha channel, but...\n        //\n        // Browsers may not give back exactly the same RGB values we put in, because most/all\n        // convert the color to a pre-multiplied representation. getImageData converts that back to\n        // a un-premultipled representation, but the precision loss may make the RGB channels unuable\n        // on their own.\n        //\n        // E.g. In Chrome #12345610 turns into #10305010, and in the extreme case, 0xFFFFFF00 turns\n        // into 0x00000000.\n        //\n        // \"Note: Due to the lossy nature of converting to and from premultiplied alpha color values,\n        // pixels that have just been set using putImageData() might be returned to an equivalent\n        // getImageData() as different values.\"\n        // -- https://html.spec.whatwg.org/multipage/canvas.html#pixel-manipulation\n        //\n        // So let's just use the fallback color in this case instead.\n        console.warn(\n          `Color: ${css} is using transparency, but allowTransparency is false. ` +\n          `Using fallback ${fallback.css}.`\n        );\n        return fallback;\n      }\n\n      // https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n      // the color value has alpha less than 1.0, and the string is the color value in the CSS rgba()\n      const [r, g, b, a] = this._ctx.fillStyle.substring(5, this._ctx.fillStyle.length - 1).split(',').map(component => Number(component));\n      const alpha = Math.round(a * 255);\n      const rgba: number = channels.toRgba(r, g, b, alpha);\n      return {\n        rgba,\n        css\n      };\n    }\n\n    return {\n      // https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n      // if it has alpha equal to 1.0, then the string is a lowercase six-digit hex value, prefixed with a \"#\" character\n      css: this._ctx.fillStyle,\n      rgba: channels.toRgba(data[0], data[1], data[2], data[3])\n    };\n  }\n}\n","/**\n * Copyright (c) 2020 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function removeElementFromParent(...elements: (HTMLElement | undefined)[]): void {\n  for (const e of elements) {\n    e?.parentElement?.removeChild(e);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Adds a disposable listener to a node in the DOM, returning the disposable.\n * @param type The event type.\n * @param handler The handler for the listener.\n */\nexport function addDisposableDomListener(\n  node: Element | Window | Document,\n  type: string,\n  handler: (e: any) => void,\n  options?: boolean | AddEventListenerOptions\n): IDisposable {\n  node.addEventListener(type, handler, options);\n  let disposed = false;\n  return {\n    dispose: () => {\n      if (disposed) {\n        return;\n      }\n      disposed = true;\n      node.removeEventListener(type, handler, options);\n    }\n  };\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILinkifierEvent, ILinkMatcher, LinkMatcherHandler, ILinkMatcherOptions, ILinkifier, IMouseZoneManager, IMouseZone, IRegisteredLinkMatcher } from 'browser/Types';\nimport { IBufferStringIteratorResult } from 'common/buffer/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ILogService, IBufferService, IOptionsService, IUnicodeService } from 'common/services/Services';\n\n/**\n * Limit of the unwrapping line expansion (overscan) at the top and bottom\n * of the actual viewport in ASCII characters.\n * A limit of 2000 should match most sane urls.\n */\nconst OVERSCAN_CHAR_LIMIT = 2000;\n\n/**\n * The Linkifier applies links to rows shortly after they have been refreshed.\n */\nexport class Linkifier implements ILinkifier {\n  /**\n   * The time to wait after a row is changed before it is linkified. This prevents\n   * the costly operation of searching every row multiple times, potentially a\n   * huge amount of times.\n   */\n  protected static _timeBeforeLatency = 200;\n\n  protected _linkMatchers: IRegisteredLinkMatcher[] = [];\n\n  private _mouseZoneManager: IMouseZoneManager | undefined;\n  private _element: HTMLElement | undefined;\n\n  private _rowsTimeoutId: number | undefined;\n  private _nextLinkMatcherId = 0;\n  private _rowsToLinkify: { start: number | undefined, end: number | undefined };\n\n  private _onShowLinkUnderline = new EventEmitter<ILinkifierEvent>();\n  public get onShowLinkUnderline(): IEvent<ILinkifierEvent> { return this._onShowLinkUnderline.event; }\n  private _onHideLinkUnderline = new EventEmitter<ILinkifierEvent>();\n  public get onHideLinkUnderline(): IEvent<ILinkifierEvent> { return this._onHideLinkUnderline.event; }\n  private _onLinkTooltip = new EventEmitter<ILinkifierEvent>();\n  public get onLinkTooltip(): IEvent<ILinkifierEvent> { return this._onLinkTooltip.event; }\n\n  constructor(\n    @IBufferService protected readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IUnicodeService private readonly _unicodeService: IUnicodeService\n  ) {\n    this._rowsToLinkify = {\n      start: undefined,\n      end: undefined\n    };\n  }\n\n  /**\n   * Attaches the linkifier to the DOM, enabling linkification.\n   * @param mouseZoneManager The mouse zone manager to register link zones with.\n   */\n  public attachToDom(element: HTMLElement, mouseZoneManager: IMouseZoneManager): void {\n    this._element = element;\n    this._mouseZoneManager = mouseZoneManager;\n  }\n\n  /**\n   * Queue linkification on a set of rows.\n   * @param start The row to linkify from (inclusive).\n   * @param end The row to linkify to (inclusive).\n   */\n  public linkifyRows(start: number, end: number): void {\n    // Don't attempt linkify if not yet attached to DOM\n    if (!this._mouseZoneManager) {\n      return;\n    }\n\n    // Increase range to linkify\n    if (this._rowsToLinkify.start === undefined || this._rowsToLinkify.end === undefined) {\n      this._rowsToLinkify.start = start;\n      this._rowsToLinkify.end = end;\n    } else {\n      this._rowsToLinkify.start = Math.min(this._rowsToLinkify.start, start);\n      this._rowsToLinkify.end = Math.max(this._rowsToLinkify.end, end);\n    }\n\n    // Clear out any existing links on this row range\n    this._mouseZoneManager.clearAll(start, end);\n\n    // Restart timer\n    if (this._rowsTimeoutId) {\n      clearTimeout(this._rowsTimeoutId);\n    }\n\n    // Cannot use window.setTimeout since tests need to run in node\n    this._rowsTimeoutId = setTimeout(() => this._linkifyRows(), Linkifier._timeBeforeLatency) as any as number;\n  }\n\n  /**\n   * Linkifies the rows requested.\n   */\n  private _linkifyRows(): void {\n    this._rowsTimeoutId = undefined;\n    const buffer = this._bufferService.buffer;\n\n    if (this._rowsToLinkify.start === undefined || this._rowsToLinkify.end === undefined) {\n      this._logService.debug('_rowToLinkify was unset before _linkifyRows was called');\n      return;\n    }\n\n    // Ensure the start row exists\n    const absoluteRowIndexStart = buffer.ydisp + this._rowsToLinkify.start;\n    if (absoluteRowIndexStart >= buffer.lines.length) {\n      return;\n    }\n\n    // Invalidate bad end row values (if a resize happened)\n    const absoluteRowIndexEnd = buffer.ydisp + Math.min(this._rowsToLinkify.end, this._bufferService.rows) + 1;\n\n    // Iterate over the range of unwrapped content strings within start..end\n    // (excluding).\n    // _doLinkifyRow gets full unwrapped lines with the start row as buffer offset\n    // for every matcher.\n    // The unwrapping is needed to also match content that got wrapped across\n    // several buffer lines. To avoid a worst case scenario where the whole buffer\n    // contains just a single unwrapped string we limit this line expansion beyond\n    // the viewport to +OVERSCAN_CHAR_LIMIT chars (overscan) at top and bottom.\n    // This comes with the tradeoff that matches longer than OVERSCAN_CHAR_LIMIT\n    // chars will not match anymore at the viewport borders.\n    const overscanLineLimit = Math.ceil(OVERSCAN_CHAR_LIMIT / this._bufferService.cols);\n    const iterator = this._bufferService.buffer.iterator(\n      false, absoluteRowIndexStart, absoluteRowIndexEnd, overscanLineLimit, overscanLineLimit);\n    while (iterator.hasNext()) {\n      const lineData: IBufferStringIteratorResult = iterator.next();\n      for (let i = 0; i < this._linkMatchers.length; i++) {\n        this._doLinkifyRow(lineData.range.first, lineData.content, this._linkMatchers[i]);\n      }\n    }\n\n    this._rowsToLinkify.start = undefined;\n    this._rowsToLinkify.end = undefined;\n  }\n\n  /**\n   * Registers a link matcher, allowing custom link patterns to be matched and\n   * handled.\n   * @param regex The regular expression to search for. Specifically, this\n   * searches the textContent of the rows. You will want to use \\s to match a\n   * space ' ' character for example.\n   * @param handler The callback when the link is called.\n   * @param options Options for the link matcher.\n   * @return The ID of the new matcher, this can be used to deregister.\n   */\n  public registerLinkMatcher(regex: RegExp, handler: LinkMatcherHandler, options: ILinkMatcherOptions = {}): number {\n    if (!handler) {\n      throw new Error('handler must be defined');\n    }\n    const matcher: IRegisteredLinkMatcher = {\n      id: this._nextLinkMatcherId++,\n      regex,\n      handler,\n      matchIndex: options.matchIndex,\n      validationCallback: options.validationCallback,\n      hoverTooltipCallback: options.tooltipCallback,\n      hoverLeaveCallback: options.leaveCallback,\n      willLinkActivate: options.willLinkActivate,\n      priority: options.priority || 0\n    };\n    this._addLinkMatcherToList(matcher);\n    return matcher.id;\n  }\n\n  /**\n   * Inserts a link matcher to the list in the correct position based on the\n   * priority of each link matcher. New link matchers of equal priority are\n   * considered after older link matchers.\n   * @param matcher The link matcher to be added.\n   */\n  private _addLinkMatcherToList(matcher: IRegisteredLinkMatcher): void {\n    if (this._linkMatchers.length === 0) {\n      this._linkMatchers.push(matcher);\n      return;\n    }\n\n    for (let i = this._linkMatchers.length - 1; i >= 0; i--) {\n      if (matcher.priority <= this._linkMatchers[i].priority) {\n        this._linkMatchers.splice(i + 1, 0, matcher);\n        return;\n      }\n    }\n\n    this._linkMatchers.splice(0, 0, matcher);\n  }\n\n  /**\n   * Deregisters a link matcher if it has been registered.\n   * @param matcherId The link matcher's ID (returned after register)\n   * @return Whether a link matcher was found and deregistered.\n   */\n  public deregisterLinkMatcher(matcherId: number): boolean {\n    for (let i = 0; i < this._linkMatchers.length; i++) {\n      if (this._linkMatchers[i].id === matcherId) {\n        this._linkMatchers.splice(i, 1);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Linkifies a row given a specific handler.\n   * @param rowIndex The row index to linkify (absolute index).\n   * @param text string content of the unwrapped row.\n   * @param matcher The link matcher for this line.\n   */\n  private _doLinkifyRow(rowIndex: number, text: string, matcher: ILinkMatcher): void {\n    // clone regex to do a global search on text\n    const rex = new RegExp(matcher.regex.source, (matcher.regex.flags || '') + 'g');\n    let match;\n    let stringIndex = -1;\n    while ((match = rex.exec(text)) !== null) {\n      const uri = match[typeof matcher.matchIndex !== 'number' ? 0 : matcher.matchIndex];\n      if (!uri) {\n        // something matched but does not comply with the given matchIndex\n        // since this is most likely a bug the regex itself we simply do nothing here\n        this._logService.debug('match found without corresponding matchIndex', match, matcher);\n        break;\n      }\n\n      // Get index, match.index is for the outer match which includes negated chars\n      // therefore we cannot use match.index directly, instead we search the position\n      // of the match group in text again\n      // also correct regex and string search offsets for the next loop run\n      stringIndex = text.indexOf(uri, stringIndex + 1);\n      rex.lastIndex = stringIndex + uri.length;\n      if (stringIndex < 0) {\n        // invalid stringIndex (should not have happened)\n        break;\n      }\n\n      // get the buffer index as [absolute row, col] for the match\n      const bufferIndex = this._bufferService.buffer.stringIndexToBufferIndex(rowIndex, stringIndex);\n      if (bufferIndex[0] < 0) {\n        // invalid bufferIndex (should not have happened)\n        break;\n      }\n\n      const line = this._bufferService.buffer.lines.get(bufferIndex[0]);\n      if (!line) {\n        break;\n      }\n\n      const attr = line.getFg(bufferIndex[1]);\n      const fg = attr ? (attr >> 9) & 0x1ff : undefined;\n\n      if (matcher.validationCallback) {\n        matcher.validationCallback(uri, isValid => {\n          // Discard link if the line has already changed\n          if (this._rowsTimeoutId) {\n            return;\n          }\n          if (isValid) {\n            this._addLink(bufferIndex[1], bufferIndex[0] - this._bufferService.buffer.ydisp, uri, matcher, fg);\n          }\n        });\n      } else {\n        this._addLink(bufferIndex[1], bufferIndex[0] - this._bufferService.buffer.ydisp, uri, matcher, fg);\n      }\n    }\n  }\n\n  /**\n   * Registers a link to the mouse zone manager.\n   * @param x The column the link starts.\n   * @param y The row the link is on.\n   * @param uri The URI of the link.\n   * @param matcher The link matcher for the link.\n   * @param fg The link color for hover event.\n   */\n  private _addLink(x: number, y: number, uri: string, matcher: ILinkMatcher, fg: number | undefined): void {\n    if (!this._mouseZoneManager || !this._element) {\n      return;\n    }\n    // FIXME: get cell length from buffer to avoid mismatch after Unicode version change\n    const width = this._unicodeService.getStringCellWidth(uri);\n    const x1 = x % this._bufferService.cols;\n    const y1 = y + Math.floor(x / this._bufferService.cols);\n    let x2 = (x1 + width) % this._bufferService.cols;\n    let y2 = y1 + Math.floor((x1 + width) / this._bufferService.cols);\n    if (x2 === 0) {\n      x2 = this._bufferService.cols;\n      y2--;\n    }\n\n    this._mouseZoneManager.add(new MouseZone(\n      x1 + 1,\n      y1 + 1,\n      x2 + 1,\n      y2 + 1,\n      e => {\n        if (matcher.handler) {\n          return matcher.handler(e, uri);\n        }\n        const newWindow = window.open();\n        if (newWindow) {\n          newWindow.opener = null;\n          newWindow.location.href = uri;\n        } else {\n          console.warn('Opening link blocked as opener could not be cleared');\n        }\n      },\n      () => {\n        this._onShowLinkUnderline.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        this._element!.classList.add('xterm-cursor-pointer');\n      },\n      e => {\n        this._onLinkTooltip.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        if (matcher.hoverTooltipCallback) {\n          // Note that IViewportRange use 1-based coordinates to align with escape sequences such\n          // as CUP which use 1,1 as the default for row/col\n          matcher.hoverTooltipCallback(e, uri, { start: { x: x1, y: y1 }, end: { x: x2, y: y2 } });\n        }\n      },\n      () => {\n        this._onHideLinkUnderline.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        this._element!.classList.remove('xterm-cursor-pointer');\n        if (matcher.hoverLeaveCallback) {\n          matcher.hoverLeaveCallback();\n        }\n      },\n      e => {\n        if (matcher.willLinkActivate) {\n          return matcher.willLinkActivate(e, uri);\n        }\n        return true;\n      }\n    ));\n  }\n\n  private _createLinkHoverEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n\nexport class MouseZone implements IMouseZone {\n  constructor(\n    public x1: number,\n    public y1: number,\n    public x2: number,\n    public y2: number,\n    public clickCallback: (e: MouseEvent) => any,\n    public hoverCallback: (e: MouseEvent) => any,\n    public tooltipCallback: (e: MouseEvent) => any,\n    public leaveCallback: () => void,\n    public willLinkActivate: (e: MouseEvent) => boolean\n  ) {\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILinkifier2, ILinkProvider, IBufferCellPosition, ILink, ILinkifierEvent, ILinkDecorations, ILinkWithState } from 'browser/Types';\nimport { IDisposable } from 'common/Types';\nimport { IMouseService, IRenderService } from './services/Services';\nimport { IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable, getDisposeArrayDisposable, disposeArray } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\n\nexport class Linkifier2 extends Disposable implements ILinkifier2 {\n  private _element: HTMLElement | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _linkProviders: ILinkProvider[] = [];\n  public get currentLink(): ILinkWithState | undefined { return this._currentLink; }\n  protected _currentLink: ILinkWithState | undefined;\n  private _mouseDownLink: ILinkWithState | undefined;\n  private _lastMouseEvent: MouseEvent | undefined;\n  private _linkCacheDisposables: IDisposable[] = [];\n  private _lastBufferCell: IBufferCellPosition | undefined;\n  private _isMouseOut: boolean = true;\n  private _activeProviderReplies: Map<Number, ILinkWithState[] | undefined> | undefined;\n  private _activeLine: number = -1;\n\n  private _onShowLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public get onShowLinkUnderline(): IEvent<ILinkifierEvent> { return this._onShowLinkUnderline.event; }\n  private _onHideLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public get onHideLinkUnderline(): IEvent<ILinkifierEvent> { return this._onHideLinkUnderline.event; }\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.register(getDisposeArrayDisposable(this._linkCacheDisposables));\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    this._linkProviders.push(linkProvider);\n    return {\n      dispose: () => {\n        // Remove the link provider from the list\n        const providerIndex = this._linkProviders.indexOf(linkProvider);\n\n        if (providerIndex !== -1) {\n          this._linkProviders.splice(providerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public attachToDom(element: HTMLElement, mouseService: IMouseService, renderService: IRenderService): void {\n    this._element = element;\n    this._mouseService = mouseService;\n    this._renderService = renderService;\n\n    this.register(addDisposableDomListener(this._element, 'mouseleave', () => {\n      this._isMouseOut = true;\n      this._clearCurrentLink();\n    }));\n    this.register(addDisposableDomListener(this._element, 'mousemove', this._onMouseMove.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'mousedown', this._handleMouseDown.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'mouseup', this._handleMouseUp.bind(this)));\n  }\n\n  private _onMouseMove(event: MouseEvent): void {\n    this._lastMouseEvent = event;\n\n    if (!this._element || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n    this._isMouseOut = false;\n\n    // Ignore the event if it's an embedder created hover widget\n    const composedPath = event.composedPath() as HTMLElement[];\n    for (let i = 0; i < composedPath.length; i++) {\n      const target = composedPath[i];\n      // Hit Terminal.element, break and continue\n      if (target.classList.contains('xterm')) {\n        break;\n      }\n      // It's a hover, don't respect hover event\n      if (target.classList.contains('xterm-hover')) {\n        return;\n      }\n    }\n\n    if (!this._lastBufferCell || (position.x !== this._lastBufferCell.x || position.y !== this._lastBufferCell.y)) {\n      this._onHover(position);\n      this._lastBufferCell = position;\n    }\n  }\n\n  private _onHover(position: IBufferCellPosition): void {\n    // TODO: This currently does not cache link provider results across wrapped lines, activeLine should be something like `activeRange: {startY, endY}`\n    // Check if we need to clear the link\n    if (this._activeLine !== position.y) {\n      this._clearCurrentLink();\n      this._askForLink(position, false);\n      return;\n    }\n\n    // Check the if the link is in the mouse position\n    const isCurrentLinkInPosition = this._currentLink && this._linkAtPosition(this._currentLink.link, position);\n    if (!isCurrentLinkInPosition) {\n      this._clearCurrentLink();\n      this._askForLink(position, true);\n    }\n  }\n\n  private _askForLink(position: IBufferCellPosition, useLineCache: boolean): void {\n    if (!this._activeProviderReplies || !useLineCache) {\n      this._activeProviderReplies?.forEach(reply => {\n        reply?.forEach(linkWithState => {\n          if (linkWithState.link.dispose) {\n            linkWithState.link.dispose();\n          }\n        });\n      });\n      this._activeProviderReplies = new Map();\n      this._activeLine = position.y;\n    }\n    let linkProvided = false;\n\n    // There is no link cached, so ask for one\n    for (const [i, linkProvider] of this._linkProviders.entries()) {\n      if (useLineCache) {\n        const existingReply = this._activeProviderReplies?.get(i);\n        // If there isn't a reply, the provider hasn't responded yet.\n\n        // TODO: If there isn't a reply yet it means that the provider is still resolving. Ensuring\n        // provideLinks isn't triggered again saves ILink.hover firing twice though. This probably\n        // needs promises to get fixed\n        if (existingReply) {\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n        }\n      } else {\n        linkProvider.provideLinks(position.y, (links: ILink[] | undefined) => {\n          if (this._isMouseOut) {\n            return;\n          }\n          const linksWithState: ILinkWithState[] | undefined = links?.map(link  => ({ link }));\n          this._activeProviderReplies?.set(i, linksWithState);\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n\n          // If all providers have responded, remove lower priority links that intersect ranges of\n          // higher priority links\n          if (this._activeProviderReplies?.size === this._linkProviders.length) {\n            this._removeIntersectingLinks(position.y, this._activeProviderReplies);\n          }\n        });\n      }\n    }\n  }\n\n  private _removeIntersectingLinks(y: number, replies: Map<Number, ILinkWithState[] | undefined>): void {\n    const occupiedCells = new Set<number>();\n    for (let i = 0; i < replies.size; i++) {\n      const providerReply = replies.get(i);\n      if (!providerReply) {\n        continue;\n      }\n      for (let i = 0; i < providerReply.length; i++) {\n        const linkWithState = providerReply[i];\n        const startX = linkWithState.link.range.start.y < y ? 0 : linkWithState.link.range.start.x;\n        const endX = linkWithState.link.range.end.y > y ? this._bufferService.cols : linkWithState.link.range.end.x;\n        for (let x = startX; x <= endX; x++) {\n          if (occupiedCells.has(x)) {\n            providerReply.splice(i--, 1);\n            break;\n          }\n          occupiedCells.add(x);\n        }\n      }\n    }\n  }\n\n  private _checkLinkProviderResult(index: number, position: IBufferCellPosition, linkProvided: boolean): boolean {\n    if (!this._activeProviderReplies) {\n      return linkProvided;\n    }\n\n    const links = this._activeProviderReplies.get(index);\n\n    // Check if every provider before this one has come back undefined\n    let hasLinkBefore = false;\n    for (let j = 0; j < index; j++) {\n      if (!this._activeProviderReplies.has(j) || this._activeProviderReplies.get(j)) {\n        hasLinkBefore = true;\n      }\n    }\n\n    // If all providers with higher priority came back undefined, then this provider's link for\n    // the position should be used\n    if (!hasLinkBefore && links) {\n      const linkAtPosition = links.find(link => this._linkAtPosition(link.link, position));\n      if (linkAtPosition) {\n        linkProvided = true;\n        this._handleNewLink(linkAtPosition);\n      }\n    }\n\n    // Check if all the providers have responded\n    if (this._activeProviderReplies.size === this._linkProviders.length && !linkProvided) {\n      // Respect the order of the link providers\n      for (let j = 0; j < this._activeProviderReplies.size; j++) {\n        const currentLink = this._activeProviderReplies.get(j)?.find(link => this._linkAtPosition(link.link, position));\n        if (currentLink) {\n          linkProvided = true;\n          this._handleNewLink(currentLink);\n          break;\n        }\n      }\n    }\n\n    return linkProvided;\n  }\n\n  private _handleMouseDown(): void {\n    this._mouseDownLink = this._currentLink;\n  }\n\n  private _handleMouseUp(event: MouseEvent): void {\n    if (!this._element || !this._mouseService || !this._currentLink) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n\n    if (this._mouseDownLink === this._currentLink && this._linkAtPosition(this._currentLink.link, position)) {\n      this._currentLink.link.activate(event, this._currentLink.link.text);\n    }\n  }\n\n  private _clearCurrentLink(startRow?: number, endRow?: number): void {\n    if (!this._element || !this._currentLink || !this._lastMouseEvent) {\n      return;\n    }\n\n    // If we have a start and end row, check that the link is within it\n    if (!startRow || !endRow || (this._currentLink.link.range.start.y >= startRow && this._currentLink.link.range.end.y <= endRow)) {\n      this._linkLeave(this._element, this._currentLink.link, this._lastMouseEvent);\n      this._currentLink = undefined;\n      disposeArray(this._linkCacheDisposables);\n    }\n  }\n\n  private _handleNewLink(linkWithState: ILinkWithState): void {\n    if (!this._element || !this._lastMouseEvent || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService);\n\n    if (!position) {\n      return;\n    }\n\n    // Trigger hover if the we have a link at the position\n    if (this._linkAtPosition(linkWithState.link, position)) {\n      this._currentLink = linkWithState;\n      this._currentLink.state = {\n        decorations: {\n          underline: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.underline,\n          pointerCursor: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.pointerCursor\n        },\n        isHovered: true\n      };\n      this._linkHover(this._element, linkWithState.link, this._lastMouseEvent);\n\n      // Add listener for tracking decorations changes\n      linkWithState.link.decorations = {} as ILinkDecorations;\n      Object.defineProperties(linkWithState.link.decorations, {\n        pointerCursor: {\n          get: () => this._currentLink?.state?.decorations.pointerCursor,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink.state.decorations.pointerCursor !== v) {\n              this._currentLink.state.decorations.pointerCursor = v;\n              if (this._currentLink.state.isHovered) {\n                this._element?.classList.toggle('xterm-cursor-pointer', v);\n              }\n            }\n          }\n        },\n        underline: {\n          get: () => this._currentLink?.state?.decorations.underline,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink?.state?.decorations.underline !== v) {\n              this._currentLink.state.decorations.underline = v;\n              if (this._currentLink.state.isHovered) {\n                this._fireUnderlineEvent(linkWithState.link, v);\n              }\n            }\n          }\n        }\n      });\n\n      // Add listener for rerendering\n      if (this._renderService) {\n        this._linkCacheDisposables.push(this._renderService.onRenderedViewportChange(e => {\n          // When start is 0 a scroll most likely occurred, make sure links above the fold also get\n          // cleared.\n          const start = e.start === 0 ? 0 : e.start + 1 + this._bufferService.buffer.ydisp;\n          this._clearCurrentLink(start, e.end + 1 + this._bufferService.buffer.ydisp);\n        }));\n      }\n    }\n  }\n\n  protected _linkHover(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = true;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, true);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.add('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.hover) {\n      link.hover(event, link.text);\n    }\n  }\n\n  private _fireUnderlineEvent(link: ILink, showEvent: boolean): void {\n    const range = link.range;\n    const scrollOffset = this._bufferService.buffer.ydisp;\n    const event = this._createLinkUnderlineEvent(range.start.x - 1, range.start.y - scrollOffset - 1, range.end.x, range.end.y - scrollOffset - 1, undefined);\n    const emitter = showEvent ? this._onShowLinkUnderline : this._onHideLinkUnderline;\n    emitter.fire(event);\n  }\n\n  protected _linkLeave(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = false;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, false);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.remove('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.leave) {\n      link.leave(event, link.text);\n    }\n  }\n\n  /**\n   * Check if the buffer position is within the link\n   * @param link\n   * @param position\n   */\n  private _linkAtPosition(link: ILink, position: IBufferCellPosition): boolean {\n    const sameLine = link.range.start.y === link.range.end.y;\n    const wrappedFromLeft = link.range.start.y < position.y;\n    const wrappedToRight = link.range.end.y > position.y;\n\n    // If the start and end have the same y, then the position must be between start and end x\n    // If not, then handle each case seperately, depending on which way it wraps\n    return ((sameLine && link.range.start.x <= position.x && link.range.end.x >= position.x) ||\n      (wrappedFromLeft && link.range.end.x >= position.x) ||\n      (wrappedToRight && link.range.start.x <= position.x) ||\n      (wrappedFromLeft && wrappedToRight)) &&\n      link.range.start.y <= position.y &&\n      link.range.end.y >= position.y;\n  }\n\n  /**\n   * Get the buffer position from a mouse event\n   * @param event\n   */\n  private _positionFromMouseEvent(event: MouseEvent, element: HTMLElement, mouseService: IMouseService): IBufferCellPosition | undefined {\n    const coords = mouseService.getCoords(event, element, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return;\n    }\n\n    return { x: coords[0], y: coords[1] + this._bufferService.buffer.ydisp };\n  }\n\n  private _createLinkUnderlineEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// eslint-disable-next-line prefer-const\nexport let promptLabel = 'Terminal input';\n\n// eslint-disable-next-line prefer-const\nexport let tooMuchOutput = 'Too much output to announce, navigate to rows manually to read';\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IMouseService, ISelectionService } from 'browser/services/Services';\nimport { IMouseZoneManager, IMouseZone } from 'browser/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\n/**\n * The MouseZoneManager allows components to register zones within the terminal\n * that trigger hover and click callbacks.\n *\n * This class was intentionally made not so robust initially as the only case it\n * needed to support was single-line links which never overlap. Improvements can\n * be made in the future.\n */\nexport class MouseZoneManager extends Disposable implements IMouseZoneManager {\n  private _zones: IMouseZone[] = [];\n\n  private _areZonesActive: boolean = false;\n  private _mouseMoveListener: (e: MouseEvent) => any;\n  private _mouseLeaveListener: (e: MouseEvent) => any;\n  private _clickListener: (e: MouseEvent) => any;\n\n  private _tooltipTimeout: number | undefined;\n  private _currentZone: IMouseZone | undefined;\n  private _lastHoverCoords: [number | undefined, number | undefined] = [undefined, undefined];\n  private _initialSelectionLength: number = 0;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @ISelectionService private readonly _selectionService: ISelectionService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n\n    this.register(addDisposableDomListener(this._element, 'mousedown', e => this._onMouseDown(e)));\n\n    // These events are expensive, only listen to it when mouse zones are active\n    this._mouseMoveListener = e => this._onMouseMove(e);\n    this._mouseLeaveListener = e => this._onMouseLeave(e);\n    this._clickListener = e => this._onClick(e);\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this._deactivate();\n  }\n\n  public add(zone: IMouseZone): void {\n    this._zones.push(zone);\n    if (this._zones.length === 1) {\n      this._activate();\n    }\n  }\n\n  public clearAll(start?: number, end?: number): void {\n    // Exit if there's nothing to clear\n    if (this._zones.length === 0) {\n      return;\n    }\n\n    // Clear all if start/end weren't set\n    if (!start || !end) {\n      start = 0;\n      end = this._bufferService.rows - 1;\n    }\n\n    // Iterate through zones and clear them out if they're within the range\n    for (let i = 0; i < this._zones.length; i++) {\n      const zone = this._zones[i];\n      if ((zone.y1 > start && zone.y1 <= end + 1) ||\n          (zone.y2 > start && zone.y2 <= end + 1) ||\n          (zone.y1 < start && zone.y2 > end + 1)) {\n        if (this._currentZone && this._currentZone === zone) {\n          this._currentZone.leaveCallback();\n          this._currentZone = undefined;\n        }\n        this._zones.splice(i--, 1);\n      }\n    }\n\n    // Deactivate the mouse zone manager if all the zones have been removed\n    if (this._zones.length === 0) {\n      this._deactivate();\n    }\n  }\n\n  private _activate(): void {\n    if (!this._areZonesActive) {\n      this._areZonesActive = true;\n      this._element.addEventListener('mousemove', this._mouseMoveListener);\n      this._element.addEventListener('mouseleave', this._mouseLeaveListener);\n      this._element.addEventListener('click', this._clickListener);\n    }\n  }\n\n  private _deactivate(): void {\n    if (this._areZonesActive) {\n      this._areZonesActive = false;\n      this._element.removeEventListener('mousemove', this._mouseMoveListener);\n      this._element.removeEventListener('mouseleave', this._mouseLeaveListener);\n      this._element.removeEventListener('click', this._clickListener);\n    }\n  }\n\n  private _onMouseMove(e: MouseEvent): void {\n    // TODO: Ideally this would only clear the hover state when the mouse moves\n    // outside of the mouse zone\n    if (this._lastHoverCoords[0] !== e.pageX || this._lastHoverCoords[1] !== e.pageY) {\n      this._onHover(e);\n      // Record the current coordinates\n      this._lastHoverCoords = [e.pageX, e.pageY];\n    }\n  }\n\n  private _onHover(e: MouseEvent): void {\n    const zone = this._findZoneEventAt(e);\n\n    // Do nothing if the zone is the same\n    if (zone === this._currentZone) {\n      return;\n    }\n\n    // Fire the hover end callback and cancel any existing timer if a new zone\n    // is being hovered\n    if (this._currentZone) {\n      this._currentZone.leaveCallback();\n      this._currentZone = undefined;\n      if (this._tooltipTimeout) {\n        clearTimeout(this._tooltipTimeout);\n      }\n    }\n\n    // Exit if there is not zone\n    if (!zone) {\n      return;\n    }\n    this._currentZone = zone;\n\n    // Trigger the hover callback\n    if (zone.hoverCallback) {\n      zone.hoverCallback(e);\n    }\n\n    // Restart the tooltip timeout\n    this._tooltipTimeout = window.setTimeout(() => this._onTooltip(e), this._optionsService.rawOptions.linkTooltipHoverDuration);\n  }\n\n  private _onTooltip(e: MouseEvent): void {\n    this._tooltipTimeout = undefined;\n    const zone = this._findZoneEventAt(e);\n    zone?.tooltipCallback(e);\n  }\n\n  private _onMouseDown(e: MouseEvent): void {\n    // Store current terminal selection length, to check if we're performing\n    // a selection operation\n    this._initialSelectionLength = this._getSelectionLength();\n\n    // Ignore the event if there are no zones active\n    if (!this._areZonesActive) {\n      return;\n    }\n\n    // Find the active zone, prevent event propagation if found to prevent other\n    // components from handling the mouse event.\n    const zone = this._findZoneEventAt(e);\n    if (zone?.willLinkActivate(e)) {\n      e.preventDefault();\n      e.stopImmediatePropagation();\n    }\n  }\n\n  private _onMouseLeave(e: MouseEvent): void {\n    // Fire the hover end callback and cancel any existing timer if the mouse\n    // leaves the terminal element\n    if (this._currentZone) {\n      this._currentZone.leaveCallback();\n      this._currentZone = undefined;\n      if (this._tooltipTimeout) {\n        clearTimeout(this._tooltipTimeout);\n      }\n    }\n  }\n\n  private _onClick(e: MouseEvent): void {\n    // Find the active zone and click it if found and no selection was\n    // being performed\n    const zone = this._findZoneEventAt(e);\n    const currentSelectionLength = this._getSelectionLength();\n\n    if (zone && currentSelectionLength === this._initialSelectionLength) {\n      zone.clickCallback(e);\n      e.preventDefault();\n      e.stopImmediatePropagation();\n    }\n  }\n\n  private _getSelectionLength(): number {\n    const selectionText = this._selectionService.selectionText;\n    return selectionText ? selectionText.length : 0;\n  }\n\n  private _findZoneEventAt(e: MouseEvent): IMouseZone | undefined {\n    const coords = this._mouseService.getCoords(e, this._screenElement, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return undefined;\n    }\n    const x = coords[0];\n    const y = coords[1];\n    for (let i = 0; i < this._zones.length; i++) {\n      const zone = this._zones[i];\n      if (zone.y1 === zone.y2) {\n        // Single line link\n        if (y === zone.y1 && x >= zone.x1 && x < zone.x2) {\n          return zone;\n        }\n      } else {\n        // Multi-line link\n        if ((y === zone.y1 && x >= zone.x1) ||\n            (y === zone.y2 && x < zone.x2) ||\n            (y > zone.y1 && y < zone.y2)) {\n          return zone;\n        }\n      }\n    }\n    return undefined;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDebouncerWithCallback } from 'browser/Types';\n\n/**\n * Debounces calls to render terminal rows using animation frames.\n */\nexport class RenderDebouncer implements IRenderDebouncerWithCallback {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n  private _animationFrame: number | undefined;\n  private _refreshCallbacks: FrameRequestCallback[] = [];\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public addRefreshCallback(callback: FrameRequestCallback): number {\n    this._refreshCallbacks.push(callback);\n    if (!this._animationFrame) {\n      this._animationFrame = window.requestAnimationFrame(() => this._innerRefresh());\n    }\n    return this._animationFrame;\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    if (this._animationFrame) {\n      return;\n    }\n\n    this._animationFrame = window.requestAnimationFrame(() => this._innerRefresh());\n  }\n\n  private _innerRefresh(): void {\n    this._animationFrame = undefined;\n\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      this._runRefreshCallbacks();\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n    this._runRefreshCallbacks();\n  }\n\n  private _runRefreshCallbacks(): void {\n    for (const callback of this._refreshCallbacks) {\n      callback(0);\n    }\n    this._refreshCallbacks = [];\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\n\nexport type ScreenDprListener = (newDevicePixelRatio?: number, oldDevicePixelRatio?: number) => void;\n\n/**\n * The screen device pixel ratio monitor allows listening for when the\n * window.devicePixelRatio value changes. This is done not with polling but with\n * the use of window.matchMedia to watch media queries. When the event fires,\n * the listener will be reattached using a different media query to ensure that\n * any further changes will register.\n *\n * The listener should fire on both window zoom changes and switching to a\n * monitor with a different DPI.\n */\nexport class ScreenDprMonitor extends Disposable {\n  private _currentDevicePixelRatio: number = window.devicePixelRatio;\n  private _outerListener: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | undefined;\n  private _listener: ScreenDprListener | undefined;\n  private _resolutionMediaMatchList: MediaQueryList | undefined;\n\n  public setListener(listener: ScreenDprListener): void {\n    if (this._listener) {\n      this.clearListener();\n    }\n    this._listener = listener;\n    this._outerListener = () => {\n      if (!this._listener) {\n        return;\n      }\n      this._listener(window.devicePixelRatio, this._currentDevicePixelRatio);\n      this._updateDpr();\n    };\n    this._updateDpr();\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this.clearListener();\n  }\n\n  private _updateDpr(): void {\n    if (!this._outerListener) {\n      return;\n    }\n\n    // Clear listeners for old DPR\n    this._resolutionMediaMatchList?.removeListener(this._outerListener);\n\n    // Add listeners for new DPR\n    this._currentDevicePixelRatio = window.devicePixelRatio;\n    this._resolutionMediaMatchList = window.matchMedia(`screen and (resolution: ${window.devicePixelRatio}dppx)`);\n    this._resolutionMediaMatchList.addListener(this._outerListener);\n  }\n\n  public clearListener(): void {\n    if (!this._resolutionMediaMatchList || !this._listener || !this._outerListener) {\n      return;\n    }\n    this._resolutionMediaMatchList.removeListener(this._outerListener);\n    this._resolutionMediaMatchList = undefined;\n    this._listener = undefined;\n    this._outerListener = undefined;\n  }\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { ICompositionHelper, ITerminal, IBrowser, CustomKeyEventHandler, ILinkifier, IMouseZoneManager, LinkMatcherHandler, ILinkMatcherOptions, IViewport, ILinkifier2, CharacterJoinerHandler } from 'browser/Types';\nimport { IRenderer } from 'browser/renderer/Types';\nimport { CompositionHelper } from 'browser/input/CompositionHelper';\nimport { Viewport } from 'browser/Viewport';\nimport { rightClickHandler, moveTextAreaUnderMouseCursor, handlePasteEvent, copyHandler, paste } from 'browser/Clipboard';\nimport { C0, C1_ESCAPED } from 'common/data/EscapeSequences';\nimport { WindowsOptionsReportType } from '../common/InputHandler';\nimport { Renderer } from 'browser/renderer/Renderer';\nimport { Linkifier } from 'browser/Linkifier';\nimport { SelectionService } from 'browser/services/SelectionService';\nimport * as Browser from 'common/Platform';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { SoundService } from 'browser/services/SoundService';\nimport { MouseZoneManager } from 'browser/MouseZoneManager';\nimport { AccessibilityManager } from './AccessibilityManager';\nimport { ITheme, IMarker, IDisposable, ISelectionPosition, ILinkProvider, IDecorationOptions, IDecoration } from 'xterm';\nimport { DomRenderer } from 'browser/renderer/dom/DomRenderer';\nimport { KeyboardResultType, CoreMouseEventType, CoreMouseButton, CoreMouseAction, ITerminalOptions, ScrollSource, IColorEvent, ColorIndex, ColorRequestType } from 'common/Types';\nimport { evaluateKeyboardEvent } from 'common/input/Keyboard';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { ColorManager } from 'browser/ColorManager';\nimport { RenderService } from 'browser/services/RenderService';\nimport { ICharSizeService, IRenderService, IMouseService, ISelectionService, ISoundService, ICoreBrowserService, ICharacterJoinerService } from 'browser/services/Services';\nimport { CharSizeService } from 'browser/services/CharSizeService';\nimport { IBuffer } from 'common/buffer/Types';\nimport { MouseService } from 'browser/services/MouseService';\nimport { Linkifier2 } from 'browser/Linkifier2';\nimport { CoreBrowserService } from 'browser/services/CoreBrowserService';\nimport { CoreTerminal } from 'common/CoreTerminal';\nimport { color, rgba } from 'common/Color';\nimport { CharacterJoinerService } from 'browser/services/CharacterJoinerService';\nimport { toRgbString } from 'common/input/XParseColor';\nimport { BufferDecorationRenderer } from 'browser/decorations/BufferDecorationRenderer';\nimport { OverviewRulerRenderer } from 'browser/decorations/OverviewRulerRenderer';\nimport { DecorationService } from 'common/services/DecorationService';\nimport { IDecorationService } from 'common/services/Services';\n\n// Let it work inside Node.js for automated testing purposes.\nconst document: Document = (typeof window !== 'undefined') ? window.document : null as any;\n\nexport class Terminal extends CoreTerminal implements ITerminal {\n  public textarea: HTMLTextAreaElement | undefined;\n  public element: HTMLElement | undefined;\n  public screenElement: HTMLElement | undefined;\n\n  private _document: Document | undefined;\n  private _viewportScrollArea: HTMLElement | undefined;\n  private _viewportElement: HTMLElement | undefined;\n  private _helperContainer: HTMLElement | undefined;\n  private _compositionView: HTMLElement | undefined;\n\n  private _overviewRulerRenderer: OverviewRulerRenderer | undefined;\n\n  // private _visualBellTimer: number;\n\n  public browser: IBrowser = Browser as any;\n\n  private _customKeyEventHandler: CustomKeyEventHandler | undefined;\n\n  // browser services\n  private _decorationService: DecorationService;\n  private _charSizeService: ICharSizeService | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _characterJoinerService: ICharacterJoinerService | undefined;\n  private _selectionService: ISelectionService | undefined;\n  private _soundService: ISoundService | undefined;\n\n  /**\n   * Records whether the keydown event has already been handled and triggered a data event, if so\n   * the keypress event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyDownHandled: boolean = false;\n\n  /**\n   * Records whether a keydown event has occured since the last keyup event, i.e. whether a key\n   * is currently \"pressed\".\n   */\n  private _keyDownSeen: boolean = false;\n\n  /**\n   * Records whether the keypress event has already been handled and triggered a data event, if so\n   * the input event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyPressHandled: boolean = false;\n\n  /**\n   * Records whether there has been a keydown event for a dead key without a corresponding keydown\n   * event for the composed/alternative character. If we cancel the keydown event for the dead key,\n   * no events will be emitted for the final character.\n   */\n  private _unprocessedDeadKey: boolean = false;\n\n  public linkifier: ILinkifier;\n  public linkifier2: ILinkifier2;\n  public viewport: IViewport | undefined;\n  private _compositionHelper: ICompositionHelper | undefined;\n  private _mouseZoneManager: IMouseZoneManager | undefined;\n  private _accessibilityManager: AccessibilityManager | undefined;\n  private _colorManager: ColorManager | undefined;\n  private _theme: ITheme | undefined;\n\n  private _onCursorMove = new EventEmitter<void>();\n  public get onCursorMove(): IEvent<void> { return this._onCursorMove.event; }\n  private _onKey = new EventEmitter<{ key: string, domEvent: KeyboardEvent }>();\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._onKey.event; }\n  private _onRender = new EventEmitter<{ start: number, end: number }>();\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._onRender.event; }\n  private _onSelectionChange = new EventEmitter<void>();\n  public get onSelectionChange(): IEvent<void> { return this._onSelectionChange.event; }\n  private _onTitleChange = new EventEmitter<string>();\n  public get onTitleChange(): IEvent<string> { return this._onTitleChange.event; }\n  private _onBell = new EventEmitter<void>();\n  public get onBell(): IEvent<void> { return this._onBell.event; }\n\n  private _onFocus = new EventEmitter<void>();\n  public get onFocus(): IEvent<void> { return this._onFocus.event; }\n  private _onBlur = new EventEmitter<void>();\n  public get onBlur(): IEvent<void> { return this._onBlur.event; }\n  private _onA11yCharEmitter = new EventEmitter<string>();\n  public get onA11yChar(): IEvent<string> { return this._onA11yCharEmitter.event; }\n  private _onA11yTabEmitter = new EventEmitter<number>();\n  public get onA11yTab(): IEvent<number> { return this._onA11yTabEmitter.event; }\n\n  /**\n   * Creates a new `Terminal` object.\n   *\n   * @param options An object containing a set of options, the available options are:\n   *   - `cursorBlink` (boolean): Whether the terminal cursor blinks\n   *   - `cols` (number): The number of columns of the terminal (horizontal size)\n   *   - `rows` (number): The number of rows of the terminal (vertical size)\n   *\n   * @public\n   * @class Xterm Xterm\n   * @alias module:xterm/src/xterm\n   */\n  constructor(\n    options: Partial<ITerminalOptions> = {}\n  ) {\n    super(options);\n\n    this._setup();\n\n    this.linkifier = this._instantiationService.createInstance(Linkifier);\n    this.linkifier2 = this.register(this._instantiationService.createInstance(Linkifier2));\n    this._decorationService = this._instantiationService.createInstance(DecorationService);\n    this._instantiationService.setService(IDecorationService, this._decorationService);\n\n    // Setup InputHandler listeners\n    this.register(this._inputHandler.onRequestBell(() => this.bell()));\n    this.register(this._inputHandler.onRequestRefreshRows((start, end) => this.refresh(start, end)));\n    this.register(this._inputHandler.onRequestSendFocus(() => this._reportFocus()));\n    this.register(this._inputHandler.onRequestReset(() => this.reset()));\n    this.register(this._inputHandler.onRequestWindowsOptionsReport(type => this._reportWindowsOptions(type)));\n    this.register(this._inputHandler.onColor((event) => this._handleColorEvent(event)));\n    this.register(forwardEvent(this._inputHandler.onCursorMove, this._onCursorMove));\n    this.register(forwardEvent(this._inputHandler.onTitleChange, this._onTitleChange));\n    this.register(forwardEvent(this._inputHandler.onA11yChar, this._onA11yCharEmitter));\n    this.register(forwardEvent(this._inputHandler.onA11yTab, this._onA11yTabEmitter));\n\n    // Setup listeners\n    this.register(this._bufferService.onResize(e => this._afterResize(e.cols, e.rows)));\n  }\n\n  /**\n   * Handle color event from inputhandler for OSC 4|104 | 10|110 | 11|111 | 12|112.\n   * An event from OSC 4|104 may contain multiple set or report requests, and multiple\n   * or none restore requests (resetting all),\n   * while an event from OSC 10|110 | 11|111 | 12|112 always contains a single request.\n   */\n  private _handleColorEvent(event: IColorEvent): void {\n    if (!this._colorManager) return;\n    for (const req of event) {\n      let acc: 'foreground' | 'background' | 'cursor' | 'ansi' | undefined = undefined;\n      let ident = '';\n      switch (req.index) {\n        case ColorIndex.FOREGROUND: // OSC 10 | 110\n          acc = 'foreground';\n          ident = '10';\n          break;\n        case ColorIndex.BACKGROUND: // OSC 11 | 111\n          acc = 'background';\n          ident = '11';\n          break;\n        case ColorIndex.CURSOR: // OSC 12 | 112\n          acc = 'cursor';\n          ident = '12';\n          break;\n        default: // OSC 4 | 104\n          // we can skip the [0..255] range check here (already done in inputhandler)\n          acc = 'ansi';\n          ident = '4;' + req.index;\n      }\n      if (acc) {\n        switch (req.type) {\n          case ColorRequestType.REPORT:\n            const channels = color.toColorRGB(acc === 'ansi'\n              ? this._colorManager.colors.ansi[req.index]\n              : this._colorManager.colors[acc]);\n            this.coreService.triggerDataEvent(`${C0.ESC}]${ident};${toRgbString(channels)}${C1_ESCAPED.ST}`);\n            break;\n          case ColorRequestType.SET:\n            if (acc === 'ansi') this._colorManager.colors.ansi[req.index] = rgba.toColor(...req.color);\n            else this._colorManager.colors[acc] = rgba.toColor(...req.color);\n            break;\n          case ColorRequestType.RESTORE:\n            this._colorManager.restoreColor(req.index);\n            break;\n        }\n      }\n    }\n    this._renderService?.setColors(this._colorManager.colors);\n    this.viewport?.onThemeChange(this._colorManager.colors);\n  }\n\n  public dispose(): void {\n    if (this._isDisposed) {\n      return;\n    }\n    super.dispose();\n    this._renderService?.dispose();\n    this._customKeyEventHandler = undefined;\n    this.write = () => { };\n    this.element?.parentNode?.removeChild(this.element);\n  }\n\n  protected _setup(): void {\n    super._setup();\n\n    this._customKeyEventHandler = undefined;\n  }\n\n  /**\n   * Convenience property to active buffer.\n   */\n  public get buffer(): IBuffer {\n    return this.buffers.active;\n  }\n\n  /**\n   * Focus the terminal. Delegates focus handling to the terminal's DOM element.\n   */\n  public focus(): void {\n    if (this.textarea) {\n      this.textarea.focus({ preventScroll: true });\n    }\n  }\n\n  protected _updateOptions(key: string): void {\n    super._updateOptions(key);\n\n    // TODO: These listeners should be owned by individual components\n    switch (key) {\n      case 'fontFamily':\n      case 'fontSize':\n        // When the font changes the size of the cells may change which requires a renderer clear\n        this._renderService?.clear();\n        this._charSizeService?.measure();\n        break;\n      case 'cursorBlink':\n      case 'cursorStyle':\n        // The DOM renderer needs a row refresh to update the cursor styles\n        this.refresh(this.buffer.y, this.buffer.y);\n        break;\n      case 'customGlyphs':\n      case 'drawBoldTextInBrightColors':\n      case 'letterSpacing':\n      case 'lineHeight':\n      case 'fontWeight':\n      case 'fontWeightBold':\n      case 'minimumContrastRatio':\n        // When the font changes the size of the cells may change which requires a renderer clear\n        if (this._renderService) {\n          this._renderService.clear();\n          this._renderService.onResize(this.cols, this.rows);\n          this.refresh(0, this.rows - 1);\n        }\n        break;\n      case 'rendererType':\n        if (this._renderService) {\n          this._renderService.setRenderer(this._createRenderer());\n          this._renderService.onResize(this.cols, this.rows);\n        }\n        break;\n      case 'scrollback':\n        this.viewport?.syncScrollArea();\n        break;\n      case 'screenReaderMode':\n        if (this.optionsService.rawOptions.screenReaderMode) {\n          if (!this._accessibilityManager && this._renderService) {\n            this._accessibilityManager = new AccessibilityManager(this, this._renderService);\n          }\n        } else {\n          this._accessibilityManager?.dispose();\n          this._accessibilityManager = undefined;\n        }\n        break;\n      case 'tabStopWidth': this.buffers.setupTabStops(); break;\n      case 'theme':\n        this._setTheme(this.optionsService.rawOptions.theme);\n        break;\n    }\n  }\n\n  /**\n   * Binds the desired focus behavior on a given terminal object.\n   */\n  private _onTextAreaFocus(ev: KeyboardEvent): void {\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    }\n    this.updateCursorStyle(ev);\n    this.element!.classList.add('focus');\n    this._showCursor();\n    this._onFocus.fire();\n  }\n\n  /**\n   * Blur the terminal, calling the blur function on the terminal's underlying\n   * textarea.\n   */\n  public blur(): void {\n    return this.textarea?.blur();\n  }\n\n  /**\n   * Binds the desired blur behavior on a given terminal object.\n   */\n  private _onTextAreaBlur(): void {\n    // Text can safely be removed on blur. Doing it earlier could interfere with\n    // screen readers reading it out.\n    this.textarea!.value = '';\n    this.refresh(this.buffer.y, this.buffer.y);\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n    this.element!.classList.remove('focus');\n    this._onBlur.fire();\n  }\n\n  private _syncTextArea(): void {\n    if (!this.textarea || !this.buffer.isCursorInViewport || this._compositionHelper!.isComposing || !this._renderService) {\n      return;\n    }\n    const cursorY = this.buffer.ybase + this.buffer.y;\n    const bufferLine = this.buffer.lines.get(cursorY);\n    if (!bufferLine) {\n      return;\n    }\n    const cursorX = Math.min(this.buffer.x, this.cols - 1);\n    const cellHeight = this._renderService.dimensions.actualCellHeight;\n    const width = bufferLine.getWidth(cursorX);\n    const cellWidth = this._renderService.dimensions.actualCellWidth * width;\n    const cursorTop = this.buffer.y * this._renderService.dimensions.actualCellHeight;\n    const cursorLeft = cursorX * this._renderService.dimensions.actualCellWidth;\n\n    // Sync the textarea to the exact position of the composition view so the IME knows where the\n    // text is.\n    this.textarea.style.left = cursorLeft + 'px';\n    this.textarea.style.top = cursorTop + 'px';\n    this.textarea.style.width = cellWidth + 'px';\n    this.textarea.style.height = cellHeight + 'px';\n    this.textarea.style.lineHeight = cellHeight + 'px';\n    this.textarea.style.zIndex = '-5';\n  }\n\n  /**\n   * Initialize default behavior\n   */\n  private _initGlobal(): void {\n    this._bindKeys();\n\n    // Bind clipboard functionality\n    this.register(addDisposableDomListener(this.element!, 'copy', (event: ClipboardEvent) => {\n      // If mouse events are active it means the selection manager is disabled and\n      // copy should be handled by the host program.\n      if (!this.hasSelection()) {\n        return;\n      }\n      copyHandler(event, this._selectionService!);\n    }));\n    const pasteHandlerWrapper = (event: ClipboardEvent): void => handlePasteEvent(event, this.textarea!, this.coreService);\n    this.register(addDisposableDomListener(this.textarea!, 'paste', pasteHandlerWrapper));\n    this.register(addDisposableDomListener(this.element!, 'paste', pasteHandlerWrapper));\n\n    // Handle right click context menus\n    if (Browser.isFirefox) {\n      // Firefox doesn't appear to fire the contextmenu event on right click\n      this.register(addDisposableDomListener(this.element!, 'mousedown', (event: MouseEvent) => {\n        if (event.button === 2) {\n          rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n        }\n      }));\n    } else {\n      this.register(addDisposableDomListener(this.element!, 'contextmenu', (event: MouseEvent) => {\n        rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n      }));\n    }\n\n    // Move the textarea under the cursor when middle clicking on Linux to ensure\n    // middle click to paste selection works. This only appears to work in Chrome\n    // at the time is writing.\n    if (Browser.isLinux) {\n      // Use auxclick event over mousedown the latter doesn't seem to work. Note\n      // that the regular click event doesn't fire for the middle mouse button.\n      this.register(addDisposableDomListener(this.element!, 'auxclick', (event: MouseEvent) => {\n        if (event.button === 1) {\n          moveTextAreaUnderMouseCursor(event, this.textarea!, this.screenElement!);\n        }\n      }));\n    }\n  }\n\n  /**\n   * Apply key handling to the terminal\n   */\n  private _bindKeys(): void {\n    this.register(addDisposableDomListener(this.textarea!, 'keyup', (ev: KeyboardEvent) => this._keyUp(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keydown', (ev: KeyboardEvent) => this._keyDown(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keypress', (ev: KeyboardEvent) => this._keyPress(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionstart', () => this._compositionHelper!.compositionstart()));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionupdate', (e: CompositionEvent) => this._compositionHelper!.compositionupdate(e)));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionend', () => this._compositionHelper!.compositionend()));\n    this.register(addDisposableDomListener(this.textarea!, 'input', (ev: InputEvent) => this._inputEvent(ev), true));\n    this.register(this.onRender(() => this._compositionHelper!.updateCompositionElements()));\n    this.register(this.onRender(e => this._queueLinkification(e.start, e.end)));\n  }\n\n  /**\n   * Opens the terminal within an element.\n   *\n   * @param parent The element to create the terminal within.\n   */\n  public open(parent: HTMLElement): void {\n    if (!parent) {\n      throw new Error('Terminal requires a parent element.');\n    }\n\n    if (!parent.isConnected) {\n      this._logService.debug('Terminal.open was called on an element that was not attached to the DOM');\n    }\n\n    this._document = parent.ownerDocument!;\n\n    // Create main element container\n    this.element = this._document.createElement('div');\n    this.element.dir = 'ltr';   // xterm.css assumes LTR\n    this.element.classList.add('terminal');\n    this.element.classList.add('xterm');\n    this.element.setAttribute('tabindex', '0');\n    parent.appendChild(this.element);\n\n    // Performance: Use a document fragment to build the terminal\n    // viewport and helper elements detached from the DOM\n    const fragment = document.createDocumentFragment();\n    this._viewportElement = document.createElement('div');\n    this._viewportElement.classList.add('xterm-viewport');\n    fragment.appendChild(this._viewportElement);\n\n    this._viewportScrollArea = document.createElement('div');\n    this._viewportScrollArea.classList.add('xterm-scroll-area');\n    this._viewportElement.appendChild(this._viewportScrollArea);\n\n    this.screenElement = document.createElement('div');\n    this.screenElement.classList.add('xterm-screen');\n    // Create the container that will hold helpers like the textarea for\n    // capturing DOM Events. Then produce the helpers.\n    this._helperContainer = document.createElement('div');\n    this._helperContainer.classList.add('xterm-helpers');\n    this.screenElement.appendChild(this._helperContainer);\n    fragment.appendChild(this.screenElement);\n\n    this.textarea = document.createElement('textarea');\n    this.textarea.classList.add('xterm-helper-textarea');\n    this.textarea.setAttribute('aria-label', Strings.promptLabel);\n    this.textarea.setAttribute('aria-multiline', 'false');\n    this.textarea.setAttribute('autocorrect', 'off');\n    this.textarea.setAttribute('autocapitalize', 'off');\n    this.textarea.setAttribute('spellcheck', 'false');\n    this.textarea.tabIndex = 0;\n    this.register(addDisposableDomListener(this.textarea, 'focus', (ev: KeyboardEvent) => this._onTextAreaFocus(ev)));\n    this.register(addDisposableDomListener(this.textarea, 'blur', () => this._onTextAreaBlur()));\n    this._helperContainer.appendChild(this.textarea);\n\n    const coreBrowserService = this._instantiationService.createInstance(CoreBrowserService, this.textarea);\n    this._instantiationService.setService(ICoreBrowserService, coreBrowserService);\n\n    this._charSizeService = this._instantiationService.createInstance(CharSizeService, this._document, this._helperContainer);\n    this._instantiationService.setService(ICharSizeService, this._charSizeService);\n\n    this._theme = this.options.theme || this._theme;\n    this._colorManager = new ColorManager(document, this.options.allowTransparency);\n    this.register(this.optionsService.onOptionChange(e => this._colorManager!.onOptionsChange(e)));\n    this._colorManager.setTheme(this._theme);\n\n    this._characterJoinerService = this._instantiationService.createInstance(CharacterJoinerService);\n    this._instantiationService.setService(ICharacterJoinerService, this._characterJoinerService);\n\n    const renderer = this._createRenderer();\n    this._renderService = this.register(this._instantiationService.createInstance(RenderService, renderer, this.rows, this.screenElement));\n    this._instantiationService.setService(IRenderService, this._renderService);\n    this.register(this._renderService.onRenderedViewportChange(e => this._onRender.fire(e)));\n    this.onResize(e => this._renderService!.resize(e.cols, e.rows));\n\n    this._compositionView = document.createElement('div');\n    this._compositionView.classList.add('composition-view');\n    this._compositionHelper = this._instantiationService.createInstance(CompositionHelper, this.textarea, this._compositionView);\n    this._helperContainer.appendChild(this._compositionView);\n\n    // Performance: Add viewport and helper elements from the fragment\n    this.element.appendChild(fragment);\n\n    this._soundService = this._instantiationService.createInstance(SoundService);\n    this._instantiationService.setService(ISoundService, this._soundService);\n    this._mouseService = this._instantiationService.createInstance(MouseService);\n    this._instantiationService.setService(IMouseService, this._mouseService);\n\n    this.viewport = this._instantiationService.createInstance(Viewport,\n      (amount: number) => this.scrollLines(amount, true, ScrollSource.VIEWPORT),\n      this._viewportElement,\n      this._viewportScrollArea,\n      this.element\n    );\n    this.viewport.onThemeChange(this._colorManager.colors);\n    this.register(this._inputHandler.onRequestSyncScrollBar(() => this.viewport!.syncScrollArea()));\n    this.register(this.viewport);\n\n    this.register(this.onCursorMove(() => {\n      this._renderService!.onCursorMove();\n      this._syncTextArea();\n    }));\n    this.register(this.onResize(() => this._renderService!.onResize(this.cols, this.rows)));\n    this.register(this.onBlur(() => this._renderService!.onBlur()));\n    this.register(this.onFocus(() => this._renderService!.onFocus()));\n    this.register(this._renderService.onDimensionsChange(() => this.viewport!.syncScrollArea()));\n\n    this._selectionService = this.register(this._instantiationService.createInstance(SelectionService,\n      this.element,\n      this.screenElement,\n      this.linkifier2\n    ));\n    this._instantiationService.setService(ISelectionService, this._selectionService);\n    this.register(this._selectionService.onRequestScrollLines(e => this.scrollLines(e.amount, e.suppressScrollEvent)));\n    this.register(this._selectionService.onSelectionChange(() => this._onSelectionChange.fire()));\n    this.register(this._selectionService.onRequestRedraw(e => this._renderService!.onSelectionChanged(e.start, e.end, e.columnSelectMode)));\n    this.register(this._selectionService.onLinuxMouseSelection(text => {\n      // If there's a new selection, put it into the textarea, focus and select it\n      // in order to register it as a selection on the OS. This event is fired\n      // only on Linux to enable middle click to paste selection.\n      this.textarea!.value = text;\n      this.textarea!.focus();\n      this.textarea!.select();\n    }));\n    this.register(this._onScroll.event(ev => {\n      this.viewport!.syncScrollArea();\n      this._selectionService!.refresh();\n    }));\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', () => this._selectionService!.refresh()));\n\n    this._mouseZoneManager = this._instantiationService.createInstance(MouseZoneManager, this.element, this.screenElement);\n    this.register(this._mouseZoneManager);\n    this.register(this.onScroll(() => this._mouseZoneManager!.clearAll()));\n    this.linkifier.attachToDom(this.element, this._mouseZoneManager);\n    this.linkifier2.attachToDom(this.screenElement, this._mouseService, this._renderService);\n    this.register(this._instantiationService.createInstance(BufferDecorationRenderer, this.screenElement));\n    // This event listener must be registered aftre MouseZoneManager is created\n    this.register(addDisposableDomListener(this.element, 'mousedown', (e: MouseEvent) => this._selectionService!.onMouseDown(e)));\n\n    // apply mouse event classes set by escape codes before terminal was attached\n    if (this.coreMouseService.areMouseEventsActive) {\n      this._selectionService.disable();\n      this.element.classList.add('enable-mouse-events');\n    } else {\n      this._selectionService.enable();\n    }\n\n    if (this.options.screenReaderMode) {\n      // Note that this must be done *after* the renderer is created in order to\n      // ensure the correct order of the dprchange event\n      this._accessibilityManager = new AccessibilityManager(this, this._renderService);\n    }\n\n    if (this.options.overviewRulerWidth) {\n      this._overviewRulerRenderer = this._instantiationService.createInstance(OverviewRulerRenderer, this._viewportElement, this.screenElement);\n    }\n    this.optionsService.onOptionChange(() => {\n      if (!this._overviewRulerRenderer && this.options.overviewRulerWidth && this._viewportElement && this.screenElement) {\n        this._overviewRulerRenderer = this._instantiationService.createInstance(OverviewRulerRenderer, this._viewportElement, this.screenElement);\n      }\n    });\n    // Measure the character size\n    this._charSizeService.measure();\n\n    // Setup loop that draws to screen\n    this.refresh(0, this.rows - 1);\n\n    // Initialize global actions that need to be taken on the document.\n    this._initGlobal();\n\n    // Listen for mouse events and translate\n    // them into terminal mouse protocols.\n    this.bindMouse();\n  }\n\n  private _createRenderer(): IRenderer {\n    switch (this.options.rendererType) {\n      case 'canvas': return this._instantiationService.createInstance(Renderer, this._colorManager!.colors, this.screenElement!, this.linkifier, this.linkifier2);\n      case 'dom': return this._instantiationService.createInstance(DomRenderer, this._colorManager!.colors, this.element!, this.screenElement!, this._viewportElement!, this.linkifier, this.linkifier2);\n      default: throw new Error(`Unrecognized rendererType \"${this.options.rendererType}\"`);\n    }\n  }\n\n  /**\n   * Sets the theme on the renderer. The renderer must have been initialized.\n   * @param theme The theme to set.\n   */\n  private _setTheme(theme: ITheme): void {\n    this._theme = theme;\n    this._colorManager?.setTheme(theme);\n    this._renderService?.setColors(this._colorManager!.colors);\n    this.viewport?.onThemeChange(this._colorManager!.colors);\n  }\n\n  /**\n   * Bind certain mouse events to the terminal.\n   * By default only 3 button + wheel up/down is ativated. For higher buttons\n   * no mouse report will be created. Typically the standard actions will be active.\n   *\n   * There are several reasons not to enable support for higher buttons/wheel:\n   * - Button 4 and 5 are typically used for history back and forward navigation,\n   *   there is no straight forward way to supress/intercept those standard actions.\n   * - Support for higher buttons does not work in some platform/browser combinations.\n   * - Left/right wheel was not tested.\n   * - Emulators vary in mouse button support, typically only 3 buttons and\n   *   wheel up/down work reliable.\n   *\n   * TODO: Move mouse event code into its own file.\n   */\n  public bindMouse(): void {\n    const self = this;\n    const el = this.element!;\n\n    // send event to CoreMouseService\n    function sendEvent(ev: MouseEvent | WheelEvent): boolean {\n      // get mouse coordinates\n      const pos = self._mouseService!.getRawByteCoords(ev, self.screenElement!, self.cols, self.rows);\n      if (!pos) {\n        return false;\n      }\n\n      let but: CoreMouseButton;\n      let action: CoreMouseAction | undefined;\n      switch ((ev as any).overrideType || ev.type) {\n        case 'mousemove':\n          action = CoreMouseAction.MOVE;\n          if (ev.buttons === undefined) {\n            // buttons is not supported on macOS, try to get a value from button instead\n            but = CoreMouseButton.NONE;\n            if (ev.button !== undefined) {\n              but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n            }\n          } else {\n            // according to MDN buttons only reports up to button 5 (AUX2)\n            but = ev.buttons & 1 ? CoreMouseButton.LEFT :\n              ev.buttons & 4 ? CoreMouseButton.MIDDLE :\n                ev.buttons & 2 ? CoreMouseButton.RIGHT :\n                  CoreMouseButton.NONE; // fallback to NONE\n          }\n          break;\n        case 'mouseup':\n          action = CoreMouseAction.UP;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'mousedown':\n          action = CoreMouseAction.DOWN;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'wheel':\n          const amount = self.viewport!.getLinesScrolled(ev as WheelEvent);\n\n          if (amount === 0) {\n            return false;\n          }\n\n          action = (ev as WheelEvent).deltaY < 0 ? CoreMouseAction.UP : CoreMouseAction.DOWN;\n          but = CoreMouseButton.WHEEL;\n          break;\n        default:\n          // dont handle other event types by accident\n          return false;\n      }\n\n      // exit if we cannot determine valid button/action values\n      // do nothing for higher buttons than wheel\n      if (action === undefined || but === undefined || but > CoreMouseButton.WHEEL) {\n        return false;\n      }\n\n      return self.coreMouseService.triggerMouseEvent({\n        col: pos.x - 33, // FIXME: why -33 here?\n        row: pos.y - 33,\n        button: but,\n        action,\n        ctrl: ev.ctrlKey,\n        alt: ev.altKey,\n        shift: ev.shiftKey\n      });\n    }\n\n    /**\n     * Event listener state handling.\n     * We listen to the onProtocolChange event of CoreMouseService and put\n     * requested listeners in `requestedEvents`. With this the listeners\n     * have all bits to do the event listener juggling.\n     * Note: 'mousedown' currently is \"always on\" and not managed\n     * by onProtocolChange.\n     */\n    const requestedEvents: { [key: string]: ((ev: Event) => void) | null } = {\n      mouseup: null,\n      wheel: null,\n      mousedrag: null,\n      mousemove: null\n    };\n    const eventListeners: { [key: string]: (ev: any) => void | boolean } = {\n      mouseup: (ev: MouseEvent) => {\n        sendEvent(ev);\n        if (!ev.buttons) {\n          // if no other button is held remove global handlers\n          this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n          if (requestedEvents.mousedrag) {\n            this._document!.removeEventListener('mousemove', requestedEvents.mousedrag);\n          }\n        }\n        return this.cancel(ev);\n      },\n      wheel: (ev: WheelEvent) => {\n        sendEvent(ev);\n        return this.cancel(ev, true);\n      },\n      mousedrag: (ev: MouseEvent) => {\n        // deal only with move while a button is held\n        if (ev.buttons) {\n          sendEvent(ev);\n        }\n      },\n      mousemove: (ev: MouseEvent) => {\n        // deal only with move without any button\n        if (!ev.buttons) {\n          sendEvent(ev);\n        }\n      }\n    };\n    this.register(this.coreMouseService.onProtocolChange(events => {\n      // apply global changes on events\n      if (events) {\n        if (this.optionsService.rawOptions.logLevel === 'debug') {\n          this._logService.debug('Binding to mouse events:', this.coreMouseService.explainEvents(events));\n        }\n        this.element!.classList.add('enable-mouse-events');\n        this._selectionService!.disable();\n      } else {\n        this._logService.debug('Unbinding from mouse events.');\n        this.element!.classList.remove('enable-mouse-events');\n        this._selectionService!.enable();\n      }\n\n      // add/remove handlers from requestedEvents\n\n      if (!(events & CoreMouseEventType.MOVE)) {\n        el.removeEventListener('mousemove', requestedEvents.mousemove!);\n        requestedEvents.mousemove = null;\n      } else if (!requestedEvents.mousemove) {\n        el.addEventListener('mousemove', eventListeners.mousemove);\n        requestedEvents.mousemove = eventListeners.mousemove;\n      }\n\n      if (!(events & CoreMouseEventType.WHEEL)) {\n        el.removeEventListener('wheel', requestedEvents.wheel!);\n        requestedEvents.wheel = null;\n      } else if (!requestedEvents.wheel) {\n        el.addEventListener('wheel', eventListeners.wheel, { passive: false });\n        requestedEvents.wheel = eventListeners.wheel;\n      }\n\n      if (!(events & CoreMouseEventType.UP)) {\n        this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n        requestedEvents.mouseup = null;\n      } else if (!requestedEvents.mouseup) {\n        requestedEvents.mouseup = eventListeners.mouseup;\n      }\n\n      if (!(events & CoreMouseEventType.DRAG)) {\n        this._document!.removeEventListener('mousemove', requestedEvents.mousedrag!);\n        requestedEvents.mousedrag = null;\n      } else if (!requestedEvents.mousedrag) {\n        requestedEvents.mousedrag = eventListeners.mousedrag;\n      }\n    }));\n    // force initial onProtocolChange so we dont miss early mouse requests\n    this.coreMouseService.activeProtocol = this.coreMouseService.activeProtocol;\n\n    /**\n     * \"Always on\" event listeners.\n     */\n    this.register(addDisposableDomListener(el, 'mousedown', (ev: MouseEvent) => {\n      ev.preventDefault();\n      this.focus();\n\n      // Don't send the mouse button to the pty if mouse events are disabled or\n      // if the selection manager is having selection forced (ie. a modifier is\n      // held).\n      if (!this.coreMouseService.areMouseEventsActive || this._selectionService!.shouldForceSelection(ev)) {\n        return;\n      }\n\n      sendEvent(ev);\n\n      // Register additional global handlers which should keep reporting outside\n      // of the terminal element.\n      // Note: Other emulators also do this for 'mousedown' while a button\n      // is held, we currently limit 'mousedown' to the terminal only.\n      if (requestedEvents.mouseup) {\n        this._document!.addEventListener('mouseup', requestedEvents.mouseup);\n      }\n      if (requestedEvents.mousedrag) {\n        this._document!.addEventListener('mousemove', requestedEvents.mousedrag);\n      }\n\n      return this.cancel(ev);\n    }));\n\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      // do nothing, if app side handles wheel itself\n      if (requestedEvents.wheel) return;\n\n      if (!this.buffer.hasScrollback) {\n        // Convert wheel events into up/down events when the buffer does not have scrollback, this\n        // enables scrolling in apps hosted in the alt buffer such as vim or tmux.\n        const amount = this.viewport!.getLinesScrolled(ev);\n\n        // Do nothing if there's no vertical scroll\n        if (amount === 0) {\n          return;\n        }\n\n        // Construct and send sequences\n        const sequence = C0.ESC + (this.coreService.decPrivateModes.applicationCursorKeys ? 'O' : '[') + (ev.deltaY < 0 ? 'A' : 'B');\n        let data = '';\n        for (let i = 0; i < Math.abs(amount); i++) {\n          data += sequence;\n        }\n        this.coreService.triggerDataEvent(data, true);\n        return this.cancel(ev, true);\n      }\n\n      // normal viewport scrolling\n      // conditionally stop event, if the viewport still had rows to scroll within\n      if (this.viewport!.onWheel(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n\n    this.register(addDisposableDomListener(el, 'touchstart', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      this.viewport!.onTouchStart(ev);\n      return this.cancel(ev);\n    }, { passive: true }));\n\n    this.register(addDisposableDomListener(el, 'touchmove', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      if (!this.viewport!.onTouchMove(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n  }\n\n\n  /**\n   * Tells the renderer to refresh terminal content between two rows (inclusive) at the next\n   * opportunity.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  public refresh(start: number, end: number): void {\n    this._renderService?.refreshRows(start, end);\n  }\n\n  /**\n   * Queues linkification for the specified rows.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  private _queueLinkification(start: number, end: number): void {\n    this.linkifier?.linkifyRows(start, end);\n  }\n\n  /**\n   * Change the cursor style for different selection modes\n   */\n  public updateCursorStyle(ev: KeyboardEvent): void {\n    if (this._selectionService?.shouldColumnSelect(ev)) {\n      this.element!.classList.add('column-select');\n    } else {\n      this.element!.classList.remove('column-select');\n    }\n  }\n\n  /**\n   * Display the cursor element\n   */\n  private _showCursor(): void {\n    if (!this.coreService.isCursorInitialized) {\n      this.coreService.isCursorInitialized = true;\n      this.refresh(this.buffer.y, this.buffer.y);\n    }\n  }\n\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source = ScrollSource.TERMINAL): void {\n    super.scrollLines(disp, suppressScrollEvent, source);\n    this.refresh(0, this.rows - 1);\n  }\n\n  public paste(data: string): void {\n    paste(data, this.textarea!, this.coreService);\n  }\n\n  /**\n   * Attaches a custom key event handler which is run before keys are processed,\n   * giving consumers of xterm.js ultimate control as to what keys should be\n   * processed by the terminal and what keys should not.\n   * @param customKeyEventHandler The custom KeyboardEvent handler to attach.\n   * This is a function that takes a KeyboardEvent, allowing consumers to stop\n   * propagation and/or prevent the default action. The function returns whether\n   * the event should be processed by xterm.js.\n   */\n  public attachCustomKeyEventHandler(customKeyEventHandler: CustomKeyEventHandler): void {\n    this._customKeyEventHandler = customKeyEventHandler;\n  }\n\n  /**\n   * Registers a link matcher, allowing custom link patterns to be matched and\n   * handled.\n   * @param regex The regular expression to search for, specifically\n   * this searches the textContent of the rows. You will want to use \\s to match\n   * a space ' ' character for example.\n   * @param handler The callback when the link is called.\n   * @param options Options for the link matcher.\n   * @return The ID of the new matcher, this can be used to deregister.\n   */\n  public registerLinkMatcher(regex: RegExp, handler: LinkMatcherHandler, options?: ILinkMatcherOptions): number {\n    const matcherId = this.linkifier.registerLinkMatcher(regex, handler, options);\n    this.refresh(0, this.rows - 1);\n    return matcherId;\n  }\n\n  /**\n   * Deregisters a link matcher if it has been registered.\n   * @param matcherId The link matcher's ID (returned after register)\n   */\n  public deregisterLinkMatcher(matcherId: number): void {\n    if (this.linkifier.deregisterLinkMatcher(matcherId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this.linkifier2.registerLinkProvider(linkProvider);\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    const joinerId = this._characterJoinerService.register(handler);\n    this.refresh(0, this.rows - 1);\n    return joinerId;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): void {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    if (this._characterJoinerService.deregister(joinerId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public get markers(): IMarker[] {\n    return this.buffer.markers;\n  }\n\n  public addMarker(cursorYOffset: number): IMarker | undefined {\n    // Disallow markers on the alt buffer\n    if (this.buffer !== this.buffers.normal) {\n      return;\n    }\n\n    return this.buffer.addMarker(this.buffer.ybase + this.buffer.y + cursorYOffset);\n  }\n\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    return this._decorationService.registerDecoration(decorationOptions);\n  }\n\n  /**\n   * Gets whether the terminal has an active selection.\n   */\n  public hasSelection(): boolean {\n    return this._selectionService ? this._selectionService.hasSelection : false;\n  }\n\n  /**\n   * Selects text within the terminal.\n   * @param column The column the selection starts at..\n   * @param row The row the selection starts at.\n   * @param length The length of the selection.\n   */\n  public select(column: number, row: number, length: number): void {\n    this._selectionService!.setSelection(column, row, length);\n  }\n\n  /**\n   * Gets the terminal's current selection, this is useful for implementing copy\n   * behavior outside of xterm.js.\n   */\n  public getSelection(): string {\n    return this._selectionService ? this._selectionService.selectionText : '';\n  }\n\n  public getSelectionPosition(): ISelectionPosition | undefined {\n    if (!this._selectionService || !this._selectionService.hasSelection) {\n      return undefined;\n    }\n\n    return {\n      startColumn: this._selectionService.selectionStart![0],\n      startRow: this._selectionService.selectionStart![1],\n      endColumn: this._selectionService.selectionEnd![0],\n      endRow: this._selectionService.selectionEnd![1]\n    };\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._selectionService?.clearSelection();\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._selectionService?.selectAll();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._selectionService?.selectLines(start, end);\n  }\n\n  /**\n   * Handle a keydown event\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keydown event to be handled.\n   */\n  protected _keyDown(event: KeyboardEvent): boolean | undefined {\n    this._keyDownHandled = false;\n    this._keyDownSeen = true;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(event) === false) {\n      return false;\n    }\n\n    // Ignore composing with Alt key on Mac when macOptionIsMeta is enabled\n    const shouldIgnoreComposition = this.browser.isMac && this.options.macOptionIsMeta && event.altKey;\n\n    if (!shouldIgnoreComposition && !this._compositionHelper!.keydown(event)) {\n      if (this.buffer.ybase !== this.buffer.ydisp) {\n        this._bufferService.scrollToBottom();\n      }\n      return false;\n    }\n\n    if (!shouldIgnoreComposition && (event.key === 'Dead' || event.key === 'AltGraph')) {\n      this._unprocessedDeadKey = true;\n    }\n\n    const result = evaluateKeyboardEvent(event, this.coreService.decPrivateModes.applicationCursorKeys, this.browser.isMac, this.options.macOptionIsMeta);\n\n    this.updateCursorStyle(event);\n\n    if (result.type === KeyboardResultType.PAGE_DOWN || result.type === KeyboardResultType.PAGE_UP) {\n      const scrollCount = this.rows - 1;\n      this.scrollLines(result.type === KeyboardResultType.PAGE_UP ? -scrollCount : scrollCount);\n      return this.cancel(event, true);\n    }\n\n    if (result.type === KeyboardResultType.SELECT_ALL) {\n      this.selectAll();\n    }\n\n    if (this._isThirdLevelShift(this.browser, event)) {\n      return true;\n    }\n\n    if (result.cancel) {\n      // The event is canceled at the end already, is this necessary?\n      this.cancel(event, true);\n    }\n\n    if (!result.key) {\n      return true;\n    }\n\n    // HACK: Process A-Z in the keypress event to fix an issue with macOS IMEs where lower case\n    // letters cannot be input while caps lock is on.\n    if (event.key && !event.ctrlKey && !event.altKey && !event.metaKey && event.key.length === 1) {\n      if (event.key.charCodeAt(0) >= 65 && event.key.charCodeAt(0) <= 90) {\n        return true;\n      }\n    }\n\n    if (this._unprocessedDeadKey) {\n      this._unprocessedDeadKey = false;\n      return true;\n    }\n\n    // If ctrl+c or enter is being sent, clear out the textarea. This is done so that screen readers\n    // will announce deleted characters. This will not work 100% of the time but it should cover\n    // most scenarios.\n    if (result.key === C0.ETX || result.key === C0.CR) {\n      this.textarea!.value = '';\n    }\n\n    this._onKey.fire({ key: result.key, domEvent: event });\n    this._showCursor();\n    this.coreService.triggerDataEvent(result.key, true);\n\n    // Cancel events when not in screen reader mode so events don't get bubbled up and handled by\n    // other listeners. When screen reader mode is enabled, this could cause issues if the event\n    // is handled at a higher level, this is a compromise in order to echo keys to the screen\n    // reader.\n    if (!this.optionsService.rawOptions.screenReaderMode) {\n      return this.cancel(event, true);\n    }\n\n    this._keyDownHandled = true;\n  }\n\n  private _isThirdLevelShift(browser: IBrowser, ev: KeyboardEvent): boolean {\n    const thirdLevelKey =\n      (browser.isMac && !this.options.macOptionIsMeta && ev.altKey && !ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.altKey && ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.getModifierState('AltGraph'));\n\n    if (ev.type === 'keypress') {\n      return thirdLevelKey;\n    }\n\n    // Don't invoke for arrows, pageDown, home, backspace, etc. (on non-keypress events)\n    return thirdLevelKey && (!ev.keyCode || ev.keyCode > 47);\n  }\n\n  protected _keyUp(ev: KeyboardEvent): void {\n    this._keyDownSeen = false;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return;\n    }\n\n    if (!wasModifierKeyOnlyEvent(ev)) {\n      this.focus();\n    }\n\n    this.updateCursorStyle(ev);\n    this._keyPressHandled = false;\n  }\n\n  /**\n   * Handle a keypress event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keypress event to be handled.\n   */\n  protected _keyPress(ev: KeyboardEvent): boolean {\n    let key;\n\n    this._keyPressHandled = false;\n\n    if (this._keyDownHandled) {\n      return false;\n    }\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return false;\n    }\n\n    this.cancel(ev);\n\n    if (ev.charCode) {\n      key = ev.charCode;\n    } else if (ev.which === null || ev.which === undefined) {\n      key = ev.keyCode;\n    } else if (ev.which !== 0 && ev.charCode !== 0) {\n      key = ev.which;\n    } else {\n      return false;\n    }\n\n    if (!key || (\n      (ev.altKey || ev.ctrlKey || ev.metaKey) && !this._isThirdLevelShift(this.browser, ev)\n    )) {\n      return false;\n    }\n\n    key = String.fromCharCode(key);\n\n    this._onKey.fire({ key, domEvent: ev });\n    this._showCursor();\n    this.coreService.triggerDataEvent(key, true);\n\n    this._keyPressHandled = true;\n\n    // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n    // keys could be ignored\n    this._unprocessedDeadKey = false;\n\n    return true;\n  }\n\n  /**\n   * Handle an input event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/Web/API/InputEvent\n   * @param ev The input event to be handled.\n   */\n  protected _inputEvent(ev: InputEvent): boolean {\n    // Only support emoji IMEs when screen reader mode is disabled as the event must bubble up to\n    // support reading out character input which can doubling up input characters\n    // Based on these event traces: https://github.com/xtermjs/xterm.js/issues/3679\n    if (ev.data && ev.inputType === 'insertText' && (!ev.composed || !this._keyDownSeen) && !this.optionsService.rawOptions.screenReaderMode) {\n      if (this._keyPressHandled) {\n        return false;\n      }\n\n      // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n      // keys could be ignored\n      this._unprocessedDeadKey = false;\n\n      const text = ev.data;\n      this.coreService.triggerDataEvent(text, true);\n\n      this.cancel(ev);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Ring the bell.\n   * Note: We could do sweet things with webaudio here\n   */\n  public bell(): void {\n    if (this._soundBell()) {\n      this._soundService?.playBellSound();\n    }\n\n    this._onBell.fire();\n\n    // if (this._visualBell()) {\n    //   this.element.classList.add('visual-bell-active');\n    //   clearTimeout(this._visualBellTimer);\n    //   this._visualBellTimer = window.setTimeout(() => {\n    //     this.element.classList.remove('visual-bell-active');\n    //   }, 200);\n    // }\n  }\n\n  /**\n   * Resizes the terminal.\n   *\n   * @param x The number of columns to resize to.\n   * @param y The number of rows to resize to.\n   */\n  public resize(x: number, y: number): void {\n    if (x === this.cols && y === this.rows) {\n      // Check if we still need to measure the char size (fixes #785).\n      if (this._charSizeService && !this._charSizeService.hasValidSize) {\n        this._charSizeService.measure();\n      }\n      return;\n    }\n\n    super.resize(x, y);\n  }\n\n  private _afterResize(x: number, y: number): void {\n    this._charSizeService?.measure();\n\n    // Sync the scroll area to make sure scroll events don't fire and scroll the viewport to an\n    // invalid location\n    this.viewport?.syncScrollArea(true);\n  }\n\n  /**\n   * Clear the entire buffer, making the prompt line the new first line.\n   */\n  public clear(): void {\n    if (this.buffer.ybase === 0 && this.buffer.y === 0) {\n      // Don't clear if it's already clear\n      return;\n    }\n    this.buffer.clearAllMarkers();\n    this.buffer.lines.set(0, this.buffer.lines.get(this.buffer.ybase + this.buffer.y)!);\n    this.buffer.lines.length = 1;\n    this.buffer.ydisp = 0;\n    this.buffer.ybase = 0;\n    this.buffer.y = 0;\n    for (let i = 1; i < this.rows; i++) {\n      this.buffer.lines.push(this.buffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this.refresh(0, this.rows - 1);\n    this._onScroll.fire({ position: this.buffer.ydisp, source: ScrollSource.TERMINAL });\n  }\n\n  /**\n   * Reset terminal.\n   * Note: Calling this directly from JS is synchronous but does not clear\n   * input buffers and does not reset the parser, thus the terminal will\n   * continue to apply pending input data.\n   * If you need in band reset (synchronous with input data) consider\n   * using DECSTR (soft reset, CSI ! p) or RIS instead (hard reset, ESC c).\n   */\n  public reset(): void {\n    /**\n     * Since _setup handles a full terminal creation, we have to carry forward\n     * a few things that should not reset.\n     */\n    this.options.rows = this.rows;\n    this.options.cols = this.cols;\n    const customKeyEventHandler = this._customKeyEventHandler;\n\n    this._setup();\n    super.reset();\n    this._selectionService?.reset();\n    this._decorationService.reset();\n\n    // reattach\n    this._customKeyEventHandler = customKeyEventHandler;\n\n    // do a full screen refresh\n    this.refresh(0, this.rows - 1);\n    this.viewport?.syncScrollArea();\n  }\n\n  public clearTextureAtlas(): void {\n    this._renderService?.clearTextureAtlas();\n  }\n\n  private _reportFocus(): void {\n    if (this.element?.classList.contains('focus')) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    } else {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n  }\n\n  private _reportWindowsOptions(type: WindowsOptionsReportType): void {\n    if (!this._renderService) {\n      return;\n    }\n\n    switch (type) {\n      case WindowsOptionsReportType.GET_WIN_SIZE_PIXELS:\n        const canvasWidth = this._renderService.dimensions.scaledCanvasWidth.toFixed(0);\n        const canvasHeight = this._renderService.dimensions.scaledCanvasHeight.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[4;${canvasHeight};${canvasWidth}t`);\n        break;\n      case WindowsOptionsReportType.GET_CELL_SIZE_PIXELS:\n        const cellWidth = this._renderService.dimensions.scaledCellWidth.toFixed(0);\n        const cellHeight = this._renderService.dimensions.scaledCellHeight.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[6;${cellHeight};${cellWidth}t`);\n        break;\n    }\n  }\n\n  // TODO: Remove cancel function and cancelEvents option\n  public cancel(ev: Event, force?: boolean): boolean | undefined {\n    if (!this.options.cancelEvents && !force) {\n      return;\n    }\n    ev.preventDefault();\n    ev.stopPropagation();\n    return false;\n  }\n\n  private _visualBell(): boolean {\n    return false;\n    // return this.options.bellStyle === 'visual' ||\n    //     this.options.bellStyle === 'both';\n  }\n\n  private _soundBell(): boolean {\n    return this.options.bellStyle === 'sound';\n    // return this.options.bellStyle === 'sound' ||\n    //     this.options.bellStyle === 'both';\n  }\n}\n\n/**\n * Helpers\n */\n\nfunction wasModifierKeyOnlyEvent(ev: KeyboardEvent): boolean {\n  return ev.keyCode === 16 || // Shift\n    ev.keyCode === 17 || // Ctrl\n    ev.keyCode === 18; // Alt\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nconst RENDER_DEBOUNCE_THRESHOLD_MS = 1000; // 1 Second\n\nimport { IRenderDebouncer } from 'browser/Types';\n\n/**\n * Debounces calls to update screen readers to update at most once configurable interval of time.\n */\nexport class TimeBasedDebouncer implements IRenderDebouncer {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n\n  // The last moment that the Terminal was refreshed at\n  private _lastRefreshMs = 0;\n  // Whether a trailing refresh should be triggered due to a refresh request that was throttled\n  private _additionalRefreshRequested = false;\n\n  private _refreshTimeoutID: number | undefined;\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void,\n    private readonly _debounceThresholdMS = RENDER_DEBOUNCE_THRESHOLD_MS\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._refreshTimeoutID) {\n      clearTimeout(this._refreshTimeoutID);\n    }\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    // Only refresh if the time since last refresh is above a threshold, otherwise wait for\n    // enough time to pass before refreshing again.\n    const refreshRequestTime: number = Date.now();\n    if (refreshRequestTime - this._lastRefreshMs >= this._debounceThresholdMS) {\n      // Enough time has lapsed since the last refresh; refresh immediately\n      this._lastRefreshMs = refreshRequestTime;\n      this._innerRefresh();\n    } else if (!this._additionalRefreshRequested) {\n      // This is the first additional request throttled; set up trailing refresh\n      const elapsed = refreshRequestTime - this._lastRefreshMs;\n      const waitPeriodBeforeTrailingRefresh = this._debounceThresholdMS - elapsed;\n      this._additionalRefreshRequested = true;\n\n      this._refreshTimeoutID = window.setTimeout(() => {\n        this._lastRefreshMs = Date.now();\n        this._innerRefresh();\n        this._additionalRefreshRequested = false;\n        this._refreshTimeoutID = undefined; // No longer need to clear the timeout\n      }, waitPeriodBeforeTrailingRefresh);\n    }\n  }\n\n  private _innerRefresh(): void {\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n  }\n}\n\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet, IViewport } from 'browser/Types';\nimport { ICharSizeService, IRenderService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IRenderDimensions } from 'browser/renderer/Types';\n\nconst FALLBACK_SCROLL_BAR_WIDTH = 15;\n\n/**\n * Represents the viewport of a terminal, the visible area within the larger buffer of output.\n * Logic for the virtual scroll bar is included in this object.\n */\nexport class Viewport extends Disposable implements IViewport {\n  public scrollBarWidth: number = 0;\n  private _currentRowHeight: number = 0;\n  private _currentScaledCellHeight: number = 0;\n  private _lastRecordedBufferLength: number = 0;\n  private _lastRecordedViewportHeight: number = 0;\n  private _lastRecordedBufferHeight: number = 0;\n  private _lastTouchY: number = 0;\n  private _lastScrollTop: number = 0;\n  private _activeBuffer: IBuffer;\n  private _renderDimensions: IRenderDimensions;\n\n  // Stores a partial line amount when scrolling, this is used to keep track of how much of a line\n  // is scrolled so we can \"scroll\" over partial lines and feel natural on touchpads. This is a\n  // quick fix and could have a more robust solution in place that reset the value when needed.\n  private _wheelPartialScroll: number = 0;\n\n  private _refreshAnimationFrame: number | null = null;\n  private _ignoreNextScrollEvent: boolean = false;\n\n  constructor(\n    private readonly _scrollLines: (amount: number) => void,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _scrollArea: HTMLElement,\n    private readonly _element: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    // Measure the width of the scrollbar. If it is 0 we can assume it's an OSX overlay scrollbar.\n    // Unfortunately the overlay scrollbar would be hidden underneath the screen element in that case,\n    // therefore we account for a standard amount to make it visible\n    this.scrollBarWidth = (this._viewportElement.offsetWidth - this._scrollArea.offsetWidth) || FALLBACK_SCROLL_BAR_WIDTH;\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', this._onScroll.bind(this)));\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n    this._renderDimensions = this._renderService.dimensions;\n    this.register(this._renderService.onDimensionsChange(e => this._renderDimensions = e));\n\n    // Perform this async to ensure the ICharSizeService is ready.\n    setTimeout(() => this.syncScrollArea(), 0);\n  }\n\n  public onThemeChange(colors: IColorSet): void {\n    this._viewportElement.style.backgroundColor = colors.background.css;\n  }\n\n  /**\n   * Refreshes row height, setting line-height, viewport height and scroll area height if\n   * necessary.\n   */\n  private _refresh(immediate: boolean): void {\n    if (immediate) {\n      this._innerRefresh();\n      if (this._refreshAnimationFrame !== null) {\n        cancelAnimationFrame(this._refreshAnimationFrame);\n      }\n      return;\n    }\n    if (this._refreshAnimationFrame === null) {\n      this._refreshAnimationFrame = requestAnimationFrame(() => this._innerRefresh());\n    }\n  }\n\n  private _innerRefresh(): void {\n    if (this._charSizeService.height > 0) {\n      this._currentRowHeight = this._renderService.dimensions.scaledCellHeight / window.devicePixelRatio;\n      this._currentScaledCellHeight = this._renderService.dimensions.scaledCellHeight;\n      this._lastRecordedViewportHeight = this._viewportElement.offsetHeight;\n      const newBufferHeight = Math.round(this._currentRowHeight * this._lastRecordedBufferLength) + (this._lastRecordedViewportHeight - this._renderService.dimensions.canvasHeight);\n      if (this._lastRecordedBufferHeight !== newBufferHeight) {\n        this._lastRecordedBufferHeight = newBufferHeight;\n        this._scrollArea.style.height = this._lastRecordedBufferHeight + 'px';\n      }\n    }\n\n    // Sync scrollTop\n    const scrollTop = this._bufferService.buffer.ydisp * this._currentRowHeight;\n    if (this._viewportElement.scrollTop !== scrollTop) {\n      // Ignore the next scroll event which will be triggered by setting the scrollTop as we do not\n      // want this event to scroll the terminal\n      this._ignoreNextScrollEvent = true;\n      this._viewportElement.scrollTop = scrollTop;\n    }\n\n    this._refreshAnimationFrame = null;\n  }\n\n  /**\n   * Updates dimensions and synchronizes the scroll area if necessary.\n   */\n  public syncScrollArea(immediate: boolean = false): void {\n    // If buffer height changed\n    if (this._lastRecordedBufferLength !== this._bufferService.buffer.lines.length) {\n      this._lastRecordedBufferLength = this._bufferService.buffer.lines.length;\n      this._refresh(immediate);\n      return;\n    }\n\n    // If viewport height changed\n    if (this._lastRecordedViewportHeight !== this._renderService.dimensions.canvasHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If the buffer position doesn't match last scroll top\n    if (this._lastScrollTop !== this._activeBuffer.ydisp * this._currentRowHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If row height changed\n    if (this._renderDimensions.scaledCellHeight !== this._currentScaledCellHeight) {\n      this._refresh(immediate);\n      return;\n    }\n  }\n\n  /**\n   * Handles scroll events on the viewport, calculating the new viewport and requesting the\n   * terminal to scroll to it.\n   * @param ev The scroll event.\n   */\n  private _onScroll(ev: Event): void {\n    // Record current scroll top position\n    this._lastScrollTop = this._viewportElement.scrollTop;\n\n    // Don't attempt to scroll if the element is not visible, otherwise scrollTop will be corrupt\n    // which causes the terminal to scroll the buffer to the top\n    if (!this._viewportElement.offsetParent) {\n      return;\n    }\n\n    // Ignore the event if it was flagged to ignore (when the source of the event is from Viewport)\n    if (this._ignoreNextScrollEvent) {\n      this._ignoreNextScrollEvent = false;\n      // Still trigger the scroll so lines get refreshed\n      this._scrollLines(0);\n      return;\n    }\n\n    const newRow = Math.round(this._lastScrollTop / this._currentRowHeight);\n    const diff = newRow - this._bufferService.buffer.ydisp;\n    this._scrollLines(diff);\n  }\n\n  /**\n   * Handles bubbling of scroll event in case the viewport has reached top or bottom\n   * @param ev The scroll event.\n   * @param amount The amount scrolled\n   */\n  private _bubbleScroll(ev: Event, amount: number): boolean {\n    const scrollPosFromTop = this._viewportElement.scrollTop + this._lastRecordedViewportHeight;\n    if ((amount < 0 && this._viewportElement.scrollTop !== 0) ||\n      (amount > 0 && scrollPosFromTop < this._lastRecordedBufferHeight)) {\n      if (ev.cancelable) {\n        ev.preventDefault();\n      }\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handles mouse wheel events by adjusting the viewport's scrollTop and delegating the actual\n   * scrolling to `onScroll`, this event needs to be attached manually by the consumer of\n   * `Viewport`.\n   * @param ev The mouse wheel event.\n   */\n  public onWheel(ev: WheelEvent): boolean {\n    const amount = this._getPixelsScrolled(ev);\n    if (amount === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += amount;\n    return this._bubbleScroll(ev, amount);\n  }\n\n  private _getPixelsScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_PIXEL\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      amount *= this._currentRowHeight;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._currentRowHeight * this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  /**\n   * Gets the number of pixels scrolled by the mouse event taking into account what type of delta\n   * is being used.\n   * @param ev The mouse wheel event.\n   */\n  public getLinesScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_LINE\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      amount /= this._currentRowHeight + 0.0; // Prevent integer division\n      this._wheelPartialScroll += amount;\n      amount = Math.floor(Math.abs(this._wheelPartialScroll)) * (this._wheelPartialScroll > 0 ? 1 : -1);\n      this._wheelPartialScroll %= 1;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  private _applyScrollModifier(amount: number, ev: WheelEvent): number {\n    const modifier = this._optionsService.rawOptions.fastScrollModifier;\n    // Multiply the scroll speed when the modifier is down\n    if ((modifier === 'alt' && ev.altKey) ||\n      (modifier === 'ctrl' && ev.ctrlKey) ||\n      (modifier === 'shift' && ev.shiftKey)) {\n      return amount * this._optionsService.rawOptions.fastScrollSensitivity * this._optionsService.rawOptions.scrollSensitivity;\n    }\n\n    return amount * this._optionsService.rawOptions.scrollSensitivity;\n  }\n\n  /**\n   * Handles the touchstart event, recording the touch occurred.\n   * @param ev The touch event.\n   */\n  public onTouchStart(ev: TouchEvent): void {\n    this._lastTouchY = ev.touches[0].pageY;\n  }\n\n  /**\n   * Handles the touchmove event, scrolling the viewport if the position shifted.\n   * @param ev The touch event.\n   */\n  public onTouchMove(ev: TouchEvent): boolean {\n    const deltaY = this._lastTouchY - ev.touches[0].pageY;\n    this._lastTouchY = ev.touches[0].pageY;\n    if (deltaY === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += deltaY;\n    return this._bubbleScroll(ev, deltaY);\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IRenderService } from 'browser/services/Services';\nimport { Disposable } from 'common/Lifecycle';\nimport { IBufferService, IDecorationService, IInternalDecoration } from 'common/services/Services';\n\nexport class BufferDecorationRenderer extends Disposable {\n  private readonly _container: HTMLElement;\n  private readonly _decorationElements: Map<IInternalDecoration, HTMLElement> = new Map();\n\n  private _animationFrame: number | undefined;\n  private _altBufferIsActive: boolean = false;\n  private _dimensionsChanged: boolean = false;\n\n  constructor(\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    this._container = document.createElement('div');\n    this._container.classList.add('xterm-decoration-container');\n    this._screenElement.appendChild(this._container);\n\n    this.register(this._renderService.onRenderedViewportChange(() => this._queueRefresh()));\n    this.register(this._renderService.onDimensionsChange(() => {\n      this._dimensionsChanged = true;\n      this._queueRefresh();\n    }));\n    this.register(addDisposableDomListener(window, 'resize', () => this._queueRefresh()));\n    this.register(this._bufferService.buffers.onBufferActivate(() => {\n      this._altBufferIsActive = this._bufferService.buffer === this._bufferService.buffers.alt;\n    }));\n    this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh()));\n    this.register(this._decorationService.onDecorationRemoved(decoration => this._removeDecoration(decoration)));\n  }\n\n  public override dispose(): void {\n    this._container.remove();\n    this._decorationElements.clear();\n    super.dispose();\n  }\n\n  private _queueRefresh(): void {\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = this._renderService.addRefreshCallback(() => {\n      this.refreshDecorations();\n      this._animationFrame = undefined;\n    });\n  }\n\n  public refreshDecorations(): void {\n    for (const decoration of this._decorationService.decorations) {\n      this._renderDecoration(decoration);\n    }\n    this._dimensionsChanged = false;\n  }\n\n  private _renderDecoration(decoration: IInternalDecoration): void {\n    this._refreshStyle(decoration);\n    if (this._dimensionsChanged) {\n      this._refreshXPosition(decoration);\n    }\n  }\n\n  private _createElement(decoration: IInternalDecoration): HTMLElement {\n    const element = document.createElement('div');\n    element.classList.add('xterm-decoration');\n    element.style.width = `${Math.round((decoration.options.width || 1) * this._renderService.dimensions.actualCellWidth)}px`;\n    element.style.height = `${(decoration.options.height || 1) * this._renderService.dimensions.actualCellHeight}px`;\n    element.style.top = `${(decoration.marker.line - this._bufferService.buffers.active.ydisp) * this._renderService.dimensions.actualCellHeight}px`;\n    element.style.lineHeight = `${this._renderService.dimensions.actualCellHeight}px`;\n\n    const x = decoration.options.x ?? 0;\n    if (x && x > this._bufferService.cols) {\n      // exceeded the container width, so hide\n      element.style.display = 'none';\n    }\n    this._refreshXPosition(decoration, element);\n\n    return element;\n  }\n\n  private _refreshStyle(decoration: IInternalDecoration): void {\n    const line = decoration.marker.line - this._bufferService.buffers.active.ydisp;\n    if (line < 0 || line >= this._bufferService.rows) {\n      // outside of viewport\n      if (decoration.element) {\n        decoration.element.style.display = 'none';\n        decoration.onRenderEmitter.fire(decoration.element);\n      }\n    } else {\n      let element = this._decorationElements.get(decoration);\n      if (!element) {\n        decoration.onDispose(() => this._removeDecoration(decoration));\n        element = this._createElement(decoration);\n        decoration.element = element;\n        this._decorationElements.set(decoration, element);\n        this._container.appendChild(element);\n      }\n      element.style.top = `${line * this._renderService.dimensions.actualCellHeight}px`;\n      element.style.display = this._altBufferIsActive ? 'none' : 'block';\n      decoration.onRenderEmitter.fire(element);\n    }\n  }\n\n  private _refreshXPosition(decoration: IInternalDecoration, element: HTMLElement | undefined = decoration.element): void {\n    if (!element) {\n      return;\n    }\n    const x = decoration.options.x ?? 0;\n    if ((decoration.options.anchor || 'left') === 'right') {\n      element.style.right = x ? `${x * this._renderService.dimensions.actualCellWidth}px` : '';\n    } else {\n      element.style.left = x ? `${x * this._renderService.dimensions.actualCellWidth}px` : '';\n    }\n  }\n\n  private _removeDecoration(decoration: IInternalDecoration): void {\n    this._decorationElements.get(decoration)?.remove();\n    this._decorationElements.delete(decoration);\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInternalDecoration } from 'common/services/Services';\n\nexport interface IColorZoneStore {\n  readonly zones: IColorZone[];\n  clear(): void;\n  addDecoration(decoration: IInternalDecoration): void;\n  /**\n   * Sets the amount of padding in lines that will be added between zones, if new lines intersect\n   * the padding they will be merged into the same zone.\n   */\n  setPadding(padding: { [position: string]: number }): void;\n}\n\nexport interface IColorZone {\n  /** Color in a format supported by canvas' fillStyle. */\n  color: string;\n  position: 'full' | 'left' | 'center' | 'right' | undefined;\n  startBufferLine: number;\n  endBufferLine: number;\n}\n\ninterface IMinimalDecorationForColorZone {\n  marker: Pick<IInternalDecoration['marker'], 'line'>;\n  options: Pick<IInternalDecoration['options'], 'overviewRulerOptions'>;\n}\n\nexport class ColorZoneStore implements IColorZoneStore {\n  private _zones: IColorZone[] = [];\n\n  // The zone pool is used to keep zone objects from being freed between clearing the color zone\n  // store and fetching the zones. This helps reduce GC pressure since the color zones are\n  // accumulated on potentially every scroll event.\n  private _zonePool: IColorZone[] = [];\n  private _zonePoolIndex = 0;\n\n  private _linePadding: { [position: string]: number } = {\n    full: 0,\n    left: 0,\n    center: 0,\n    right: 0\n  };\n\n  public get zones(): IColorZone[] {\n    // Trim the zone pool to free unused memory\n    this._zonePool.length = Math.min(this._zonePool.length, this._zones.length);\n    return this._zones;\n  }\n\n  public clear(): void {\n    this._zones.length = 0;\n    this._zonePoolIndex = 0;\n  }\n\n  public addDecoration(decoration: IMinimalDecorationForColorZone): void {\n    if (!decoration.options.overviewRulerOptions) {\n      return;\n    }\n    for (const z of this._zones) {\n      if (z.color === decoration.options.overviewRulerOptions.color &&\n          z.position === decoration.options.overviewRulerOptions.position) {\n        if (this._lineIntersectsZone(z, decoration.marker.line)) {\n          return;\n        }\n        if (this._lineAdjacentToZone(z, decoration.marker.line, decoration.options.overviewRulerOptions.position)) {\n          this._addLineToZone(z, decoration.marker.line);\n          return;\n        }\n      }\n    }\n    // Create using zone pool if possible\n    if (this._zonePoolIndex < this._zonePool.length) {\n      this._zonePool[this._zonePoolIndex].color = decoration.options.overviewRulerOptions.color;\n      this._zonePool[this._zonePoolIndex].position = decoration.options.overviewRulerOptions.position;\n      this._zonePool[this._zonePoolIndex].startBufferLine = decoration.marker.line;\n      this._zonePool[this._zonePoolIndex].endBufferLine = decoration.marker.line;\n      this._zones.push(this._zonePool[this._zonePoolIndex++]);\n      return;\n    }\n    // Create\n    this._zones.push({\n      color: decoration.options.overviewRulerOptions.color,\n      position: decoration.options.overviewRulerOptions.position,\n      startBufferLine: decoration.marker.line,\n      endBufferLine: decoration.marker.line\n    });\n    this._zonePool.push(this._zones[this._zones.length - 1]);\n    this._zonePoolIndex++;\n  }\n\n  public setPadding(padding: { [position: string]: number }): void {\n    this._linePadding = padding;\n  }\n\n  private _lineIntersectsZone(zone: IColorZone, line: number): boolean {\n    return (\n      line >= zone.startBufferLine &&\n      line <= zone.endBufferLine\n    );\n  }\n\n  private _lineAdjacentToZone(zone: IColorZone, line: number, position: IColorZone['position']): boolean {\n    return (\n      (line >= zone.startBufferLine - this._linePadding[position || 'full']) &&\n      (line <= zone.endBufferLine + this._linePadding[position || 'full'])\n    );\n  }\n\n  private _addLineToZone(zone: IColorZone, line: number): void {\n    zone.startBufferLine = Math.min(zone.startBufferLine, line);\n    zone.endBufferLine = Math.max(zone.endBufferLine, line);\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ColorZoneStore, IColorZone, IColorZoneStore } from 'browser/decorations/ColorZoneStore';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IRenderService } from 'browser/services/Services';\nimport { Disposable } from 'common/Lifecycle';\nimport { IBufferService, IDecorationService, IInternalDecoration, IOptionsService } from 'common/services/Services';\n\n// Helper objects to avoid excessive calculation and garbage collection during rendering. These are\n// static values for each render and can be accessed using the decoration position as the key.\nconst drawHeight = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\nconst drawWidth = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\nconst drawX = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\n\nexport class OverviewRulerRenderer extends Disposable {\n  private readonly _canvas: HTMLCanvasElement;\n  private readonly _ctx: CanvasRenderingContext2D;\n  private readonly _colorZoneStore: IColorZoneStore = new ColorZoneStore();\n  private get _width(): number {\n    return this._optionsService.options.overviewRulerWidth || 0;\n  }\n  private _animationFrame: number | undefined;\n\n  private _shouldUpdateDimensions: boolean | undefined = true;\n  private _shouldUpdateAnchor: boolean | undefined = true;\n  private _lastKnownBufferLength: number = 0;\n\n  private _containerHeight: number | undefined;\n\n  constructor(\n    private readonly _viewportElement: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._canvas = document.createElement('canvas');\n    this._canvas.classList.add('xterm-decoration-overview-ruler');\n    this._refreshCanvasDimensions();\n    this._viewportElement.parentElement?.insertBefore(this._canvas, this._viewportElement);\n    const ctx = this._canvas.getContext('2d');\n    if (!ctx) {\n      throw new Error('Ctx cannot be null');\n    } else {\n      this._ctx = ctx;\n    }\n    this._registerDecorationListeners();\n    this._registerBufferChangeListeners();\n    this._registerDimensionChangeListeners();\n  }\n\n  /**\n   * On decoration add or remove, redraw\n   */\n  private _registerDecorationListeners(): void {\n    this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh(undefined, true)));\n    this.register(this._decorationService.onDecorationRemoved(() => this._queueRefresh(undefined, true)));\n  }\n\n  /**\n   * On buffer change, redraw\n   * and hide the canvas if the alt buffer is active\n   */\n  private _registerBufferChangeListeners(): void {\n    this.register(this._renderService.onRenderedViewportChange(() => this._queueRefresh()));\n    this.register(this._bufferService.buffers.onBufferActivate(() => {\n      this._canvas!.style.display = this._bufferService.buffer === this._bufferService.buffers.alt ? 'none' : 'block';\n    }));\n    this.register(this._bufferService.onScroll(() => {\n      if (this._lastKnownBufferLength !== this._bufferService.buffers.normal.lines.length) {\n        this._refreshDrawHeightConstants();\n        this._refreshColorZonePadding();\n      }\n    }));\n  }\n  /**\n   * On dimension change, update canvas dimensions\n   * and then redraw\n   */\n  private _registerDimensionChangeListeners(): void {\n    // container height changed\n    this.register(this._renderService.onRender((): void => {\n      if (!this._containerHeight || this._containerHeight !== this._screenElement.clientHeight) {\n        this._queueRefresh(true);\n        this._containerHeight = this._screenElement.clientHeight;\n      }\n    }));\n    // overview ruler width changed\n    this.register(this._optionsService.onOptionChange(o => {\n      if (o === 'overviewRulerWidth') {\n        this._queueRefresh(true);\n      }\n    }));\n    // device pixel ratio changed\n    this.register(addDisposableDomListener(window, 'resize', () => {\n      this._queueRefresh(true);\n    }));\n    // set the canvas dimensions\n    this._queueRefresh(true);\n  }\n\n  public override dispose(): void {\n    this._canvas?.remove();\n    super.dispose();\n  }\n\n  private _refreshDrawConstants(): void {\n    // width\n    const outerWidth = Math.floor(this._canvas.width / 3);\n    const innerWidth = Math.ceil(this._canvas.width / 3);\n    drawWidth.full = this._canvas.width;\n    drawWidth.left = outerWidth;\n    drawWidth.center = innerWidth;\n    drawWidth.right = outerWidth;\n    // height\n    this._refreshDrawHeightConstants();\n    // x\n    drawX.full = 0;\n    drawX.left = 0;\n    drawX.center = drawWidth.left;\n    drawX.right = drawWidth.left + drawWidth.center;\n  }\n\n  private _refreshDrawHeightConstants(): void {\n    drawHeight.full = Math.round(2 * window.devicePixelRatio);\n    // Calculate actual pixels per line\n    const pixelsPerLine = this._canvas.height / this._bufferService.buffer.lines.length;\n    // Clamp actual pixels within a range\n    const nonFullHeight = Math.round(Math.max(Math.min(pixelsPerLine, 12), 6) * window.devicePixelRatio);\n    drawHeight.left = nonFullHeight;\n    drawHeight.center = nonFullHeight;\n    drawHeight.right = nonFullHeight;\n  }\n\n  private _refreshColorZonePadding(): void {\n    this._colorZoneStore.setPadding({\n      full: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.full),\n      left: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.left),\n      center: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.center),\n      right: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.right)\n    });\n    this._lastKnownBufferLength = this._bufferService.buffers.normal.lines.length;\n  }\n\n  private _refreshCanvasDimensions(): void {\n    this._canvas.style.width = `${this._width}px`;\n    this._canvas.width = Math.round(this._width * window.devicePixelRatio);\n    this._canvas.style.height = `${this._screenElement.clientHeight}px`;\n    this._canvas.height = Math.round(this._screenElement.clientHeight * window.devicePixelRatio);\n    this._refreshDrawConstants();\n    this._refreshColorZonePadding();\n  }\n\n  private _refreshDecorations(): void {\n    if (this._shouldUpdateDimensions) {\n      this._refreshCanvasDimensions();\n    }\n    this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    this._colorZoneStore.clear();\n    for (const decoration of this._decorationService.decorations) {\n      this._colorZoneStore.addDecoration(decoration);\n    }\n    this._ctx.lineWidth = 1;\n    const zones = this._colorZoneStore.zones;\n    for (const zone of zones) {\n      if (zone.position !== 'full') {\n        this._renderColorZone(zone);\n      }\n    }\n    for (const zone of zones) {\n      if (zone.position === 'full') {\n        this._renderColorZone(zone);\n      }\n    }\n    this._shouldUpdateDimensions = false;\n    this._shouldUpdateAnchor = false;\n  }\n\n  private _renderColorZone(zone: IColorZone): void {\n    // TODO: Is _decorationElements needed?\n\n    this._ctx.fillStyle = zone.color;\n    this._ctx.fillRect(\n      /* x */ drawX[zone.position || 'full'],\n      /* y */ Math.round(\n        (this._canvas.height - 1) * // -1 to ensure at least 2px are allowed for decoration on last line\n        (zone.startBufferLine / this._bufferService.buffers.active.lines.length) - drawHeight[zone.position || 'full'] / 2\n      ),\n      /* w */ drawWidth[zone.position || 'full'],\n      /* h */ Math.round(\n        (this._canvas.height - 1) * // -1 to ensure at least 2px are allowed for decoration on last line\n        ((zone.endBufferLine - zone.startBufferLine) / this._bufferService.buffers.active.lines.length) + drawHeight[zone.position || 'full']\n      )\n    );\n  }\n\n  private _queueRefresh(updateCanvasDimensions?: boolean, updateAnchor?: boolean): void {\n    this._shouldUpdateDimensions = updateCanvasDimensions || this._shouldUpdateDimensions;\n    this._shouldUpdateAnchor = updateAnchor || this._shouldUpdateAnchor;\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = window.requestAnimationFrame(() => {\n      this._refreshDecorations();\n      this._animationFrame = undefined;\n    });\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderService } from 'browser/services/Services';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\n\ninterface IPosition {\n  start: number;\n  end: number;\n}\n\n/**\n * Encapsulates the logic for handling compositionstart, compositionupdate and compositionend\n * events, displaying the in-progress composition to the UI and forwarding the final composition\n * to the handler.\n */\nexport class CompositionHelper {\n  /**\n   * Whether input composition is currently happening, eg. via a mobile keyboard, speech input or\n   * IME. This variable determines whether the compositionText should be displayed on the UI.\n   */\n  private _isComposing: boolean;\n  public get isComposing(): boolean { return this._isComposing; }\n\n  /**\n   * The position within the input textarea's value of the current composition.\n   */\n  private _compositionPosition: IPosition;\n\n  /**\n   * Whether a composition is in the process of being sent, setting this to false will cancel any\n   * in-progress composition.\n   */\n  private _isSendingComposition: boolean;\n\n  /**\n   * Data already sent due to keydown event.\n   */\n  private _dataAlreadySent: string;\n\n  constructor(\n    private readonly _textarea: HTMLTextAreaElement,\n    private readonly _compositionView: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    this._isComposing = false;\n    this._isSendingComposition = false;\n    this._compositionPosition = { start: 0, end: 0 };\n    this._dataAlreadySent = '';\n  }\n\n  /**\n   * Handles the compositionstart event, activating the composition view.\n   */\n  public compositionstart(): void {\n    this._isComposing = true;\n    this._compositionPosition.start = this._textarea.value.length;\n    this._compositionView.textContent = '';\n    this._dataAlreadySent = '';\n    this._compositionView.classList.add('active');\n  }\n\n  /**\n   * Handles the compositionupdate event, updating the composition view.\n   * @param ev The event.\n   */\n  public compositionupdate(ev: Pick<CompositionEvent, 'data'>): void {\n    this._compositionView.textContent = ev.data;\n    this.updateCompositionElements();\n    setTimeout(() => {\n      this._compositionPosition.end = this._textarea.value.length;\n    }, 0);\n  }\n\n  /**\n   * Handles the compositionend event, hiding the composition view and sending the composition to\n   * the handler.\n   */\n  public compositionend(): void {\n    this._finalizeComposition(true);\n  }\n\n  /**\n   * Handles the keydown event, routing any necessary events to the CompositionHelper functions.\n   * @param ev The keydown event.\n   * @return Whether the Terminal should continue processing the keydown event.\n   */\n  public keydown(ev: KeyboardEvent): boolean {\n    if (this._isComposing || this._isSendingComposition) {\n      if (ev.keyCode === 229) {\n        // Continue composing if the keyCode is the \"composition character\"\n        return false;\n      }\n      if (ev.keyCode === 16 || ev.keyCode === 17 || ev.keyCode === 18) {\n        // Continue composing if the keyCode is a modifier key\n        return false;\n      }\n      // Finish composition immediately. This is mainly here for the case where enter is\n      // pressed and the handler needs to be triggered before the command is executed.\n      this._finalizeComposition(false);\n    }\n\n    if (ev.keyCode === 229) {\n      // If the \"composition character\" is used but gets to this point it means a non-composition\n      // character (eg. numbers and punctuation) was pressed when the IME was active.\n      this._handleAnyTextareaChanges();\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Finalizes the composition, resuming regular input actions. This is called when a composition\n   * is ending.\n   * @param waitForPropagation Whether to wait for events to propagate before sending\n   *   the input. This should be false if a non-composition keystroke is entered before the\n   *   compositionend event is triggered, such as enter, so that the composition is sent before\n   *   the command is executed.\n   */\n  private _finalizeComposition(waitForPropagation: boolean): void {\n    this._compositionView.classList.remove('active');\n    this._isComposing = false;\n\n    if (!waitForPropagation) {\n      // Cancel any delayed composition send requests and send the input immediately.\n      this._isSendingComposition = false;\n      const input = this._textarea.value.substring(this._compositionPosition.start, this._compositionPosition.end);\n      this._coreService.triggerDataEvent(input, true);\n    } else {\n      // Make a deep copy of the composition position here as a new compositionstart event may\n      // fire before the setTimeout executes.\n      const currentCompositionPosition = {\n        start: this._compositionPosition.start,\n        end: this._compositionPosition.end\n      };\n\n      // Since composition* events happen before the changes take place in the textarea on most\n      // browsers, use a setTimeout with 0ms time to allow the native compositionend event to\n      // complete. This ensures the correct character is retrieved.\n      // This solution was used because:\n      // - The compositionend event's data property is unreliable, at least on Chromium\n      // - The last compositionupdate event's data property does not always accurately describe\n      //   the character, a counter example being Korean where an ending consonsant can move to\n      //   the following character if the following input is a vowel.\n      this._isSendingComposition = true;\n      setTimeout(() => {\n        // Ensure that the input has not already been sent\n        if (this._isSendingComposition) {\n          this._isSendingComposition = false;\n          let input;\n          // Add length of data already sent due to keydown event,\n          // otherwise input characters can be duplicated. (Issue #3191)\n          currentCompositionPosition.start += this._dataAlreadySent.length;\n          if (this._isComposing) {\n            // Use the end position to get the string if a new composition has started.\n            input = this._textarea.value.substring(currentCompositionPosition.start, currentCompositionPosition.end);\n          } else {\n            // Don't use the end position here in order to pick up any characters after the\n            // composition has finished, for example when typing a non-composition character\n            // (eg. 2) after a composition character.\n            input = this._textarea.value.substring(currentCompositionPosition.start);\n          }\n          if (input.length > 0) {\n            this._coreService.triggerDataEvent(input, true);\n          }\n        }\n      }, 0);\n    }\n  }\n\n  /**\n   * Apply any changes made to the textarea after the current event chain is allowed to complete.\n   * This should be called when not currently composing but a keydown event with the \"composition\n   * character\" (229) is triggered, in order to allow non-composition text to be entered when an\n   * IME is active.\n   */\n  private _handleAnyTextareaChanges(): void {\n    const oldValue = this._textarea.value;\n    setTimeout(() => {\n      // Ignore if a composition has started since the timeout\n      if (!this._isComposing) {\n        const newValue = this._textarea.value;\n        const diff = newValue.replace(oldValue, '');\n        if (diff.length > 0) {\n          this._dataAlreadySent = diff;\n          this._coreService.triggerDataEvent(diff, true);\n        }\n      }\n    }, 0);\n  }\n\n  /**\n   * Positions the composition view on top of the cursor and the textarea just below it (so the\n   * IME helper dialog is positioned correctly).\n   * @param dontRecurse Whether to use setTimeout to recursively trigger another update, this is\n   *   necessary as the IME events across browsers are not consistently triggered.\n   */\n  public updateCompositionElements(dontRecurse?: boolean): void {\n    if (!this._isComposing) {\n      return;\n    }\n\n    if (this._bufferService.buffer.isCursorInViewport) {\n      const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n\n      const cellHeight = this._renderService.dimensions.actualCellHeight;\n      const cursorTop = this._bufferService.buffer.y * this._renderService.dimensions.actualCellHeight;\n      const cursorLeft = cursorX * this._renderService.dimensions.actualCellWidth;\n\n      this._compositionView.style.left = cursorLeft + 'px';\n      this._compositionView.style.top = cursorTop + 'px';\n      this._compositionView.style.height = cellHeight + 'px';\n      this._compositionView.style.lineHeight = cellHeight + 'px';\n      this._compositionView.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n      this._compositionView.style.fontSize = this._optionsService.rawOptions.fontSize + 'px';\n      // Sync the textarea to the exact position of the composition view so the IME knows where the\n      // text is.\n      const compositionViewBounds = this._compositionView.getBoundingClientRect();\n      this._textarea.style.left = cursorLeft + 'px';\n      this._textarea.style.top = cursorTop + 'px';\n      // Ensure the text area is at least 1x1, otherwise certain IMEs may break\n      this._textarea.style.width = Math.max(compositionViewBounds.width, 1) + 'px';\n      this._textarea.style.height = Math.max(compositionViewBounds.height, 1) + 'px';\n      this._textarea.style.lineHeight = compositionViewBounds.height + 'px';\n    }\n\n    if (!dontRecurse) {\n      setTimeout(() => this.updateCompositionElements(true), 0);\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function getCoordsRelativeToElement(window: Pick<Window, 'getComputedStyle'>, event: {clientX: number, clientY: number}, element: HTMLElement): [number, number] {\n  const rect = element.getBoundingClientRect();\n  const elementStyle = window.getComputedStyle(element);\n  const leftPadding = parseInt(elementStyle.getPropertyValue('padding-left'));\n  const topPadding = parseInt(elementStyle.getPropertyValue('padding-top'));\n  return [\n    event.clientX - rect.left - leftPadding,\n    event.clientY - rect.top - topPadding\n  ];\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event. The result\n * is returned as an array in the form [x, y] instead of an object as it's a\n * little faster and this function is used in some low level code.\n * @param event The mouse event.\n * @param element The terminal's container element.\n * @param colCount The number of columns in the terminal.\n * @param rowCount The number of rows n the terminal.\n * @param isSelection Whether the request is for the selection or not. This will\n * apply an offset to the x value such that the left half of the cell will\n * select that cell and the right half will select the next cell.\n */\nexport function getCoords(window: Pick<Window, 'getComputedStyle'>, event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, hasValidCharSize: boolean, actualCellWidth: number, actualCellHeight: number, isSelection?: boolean): [number, number] | undefined {\n  // Coordinates cannot be measured if there are no valid\n  if (!hasValidCharSize) {\n    return undefined;\n  }\n\n  const coords = getCoordsRelativeToElement(window, event, element);\n  if (!coords) {\n    return undefined;\n  }\n\n  coords[0] = Math.ceil((coords[0] + (isSelection ? actualCellWidth / 2 : 0)) / actualCellWidth);\n  coords[1] = Math.ceil(coords[1] / actualCellHeight);\n\n  // Ensure coordinates are within the terminal viewport. Note that selections\n  // need an addition point of precision to cover the end point (as characters\n  // cover half of one char and half of the next).\n  coords[0] = Math.min(Math.max(coords[0], 1), colCount + (isSelection ? 1 : 0));\n  coords[1] = Math.min(Math.max(coords[1], 1), rowCount);\n\n  return coords;\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event, wrapping\n * them to the bounds of the terminal and adding 32 to both the x and y values\n * as expected by xterm.\n */\nexport function getRawByteCoords(coords: [number, number] | undefined): { x: number, y: number } | undefined {\n  if (!coords) {\n    return undefined;\n  }\n\n  // xterm sends raw bytes and starts at 32 (SP) for each.\n  return { x: coords[0] + 32, y: coords[1] + 32 };\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { C0 } from 'common/data/EscapeSequences';\nimport { IBufferService } from 'common/services/Services';\n\nconst enum Direction {\n  UP = 'A',\n  DOWN = 'B',\n  RIGHT = 'C',\n  LEFT = 'D'\n}\n\n/**\n * Concatenates all the arrow sequences together.\n * Resets the starting row to an unwrapped row, moves to the requested row,\n * then moves to requested col.\n */\nexport function moveToCellSequence(targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startX = bufferService.buffer.x;\n  const startY = bufferService.buffer.y;\n\n  // The alt buffer should try to navigate between rows\n  if (!bufferService.buffer.hasScrollback) {\n    return resetStartingRow(startX, startY, targetX, targetY, bufferService, applicationCursor) +\n      moveToRequestedRow(startY, targetY, bufferService, applicationCursor) +\n      moveToRequestedCol(startX, startY, targetX, targetY, bufferService, applicationCursor);\n  }\n\n  // Only move horizontally for the normal buffer\n  let direction;\n  if (startY === targetY) {\n    direction = startX > targetX ? Direction.LEFT : Direction.RIGHT;\n    return repeat(Math.abs(startX - targetX), sequence(direction, applicationCursor));\n  }\n  direction = startY > targetY ? Direction.LEFT : Direction.RIGHT;\n  const rowDifference = Math.abs(startY - targetY);\n  const cellsToMove = colsFromRowEnd(startY > targetY ? targetX : startX, bufferService) +\n    (rowDifference - 1) * bufferService.cols + 1 /* wrap around 1 row */ +\n    colsFromRowBeginning(startY > targetY ? startX : targetX, bufferService);\n  return repeat(cellsToMove, sequence(direction, applicationCursor));\n}\n\n/**\n * Find the number of cols from a row beginning to a col.\n */\nfunction colsFromRowBeginning(currX: number, bufferService: IBufferService): number {\n  return currX - 1;\n}\n\n/**\n * Find the number of cols from a col to row end.\n */\nfunction colsFromRowEnd(currX: number, bufferService: IBufferService): number {\n  return bufferService.cols - currX;\n}\n\n/**\n * If the initial position of the cursor is on a row that is wrapped, move the\n * cursor up to the first row that is not wrapped to have accurate vertical\n * positioning.\n */\nfunction resetStartingRow(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length === 0) {\n    return '';\n  }\n  return repeat(bufferLine(\n    startX, startY, startX,\n    startY - wrappedRowsForRow(bufferService, startY), false, bufferService\n  ).length, sequence(Direction.LEFT, applicationCursor));\n}\n\n/**\n * Using the reset starting and ending row, move to the requested row,\n * ignoring wrapped rows\n */\nfunction moveToRequestedRow(startY: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startRow = startY - wrappedRowsForRow(bufferService, startY);\n  const endRow = targetY - wrappedRowsForRow(bufferService, targetY);\n\n  const rowsToMove = Math.abs(startRow - endRow) - wrappedRowsCount(startY, targetY, bufferService);\n\n  return repeat(rowsToMove, sequence(verticalDirection(startY, targetY), applicationCursor));\n}\n\n/**\n * Move to the requested col on the ending row\n */\nfunction moveToRequestedCol(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  let startRow;\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(bufferService, targetY);\n  } else {\n    startRow = startY;\n  }\n\n  const endRow = targetY;\n  const direction = horizontalDirection(startX, startY, targetX, targetY, bufferService, applicationCursor);\n\n  return repeat(bufferLine(\n    startX, startRow, targetX, endRow,\n    direction === Direction.RIGHT, bufferService\n  ).length, sequence(direction, applicationCursor));\n}\n\n/**\n * Utility functions\n */\n\n/**\n * Calculates the number of wrapped rows between the unwrapped starting and\n * ending rows. These rows need to ignored since the cursor skips over them.\n */\nfunction wrappedRowsCount(startY: number, targetY: number, bufferService: IBufferService): number {\n  let wrappedRows = 0;\n  const startRow = startY - wrappedRowsForRow(bufferService, startY);\n  const endRow = targetY - wrappedRowsForRow(bufferService, targetY);\n\n  for (let i = 0; i < Math.abs(startRow - endRow); i++) {\n    const direction = verticalDirection(startY, targetY) === Direction.UP ? -1 : 1;\n    const line = bufferService.buffer.lines.get(startRow + (direction * i));\n    if (line?.isWrapped) {\n      wrappedRows++;\n    }\n  }\n\n  return wrappedRows;\n}\n\n/**\n * Calculates the number of wrapped rows that make up a given row.\n * @param currentRow The row to determine how many wrapped rows make it up\n */\nfunction wrappedRowsForRow(bufferService: IBufferService, currentRow: number): number {\n  let rowCount = 0;\n  let line = bufferService.buffer.lines.get(currentRow);\n  let lineWraps = line?.isWrapped;\n\n  while (lineWraps && currentRow >= 0 && currentRow < bufferService.rows) {\n    rowCount++;\n    line = bufferService.buffer.lines.get(--currentRow);\n    lineWraps = line?.isWrapped;\n  }\n\n  return rowCount;\n}\n\n/**\n * Direction determiners\n */\n\n/**\n * Determines if the right or left arrow is needed\n */\nfunction horizontalDirection(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): Direction {\n  let startRow;\n  if (moveToRequestedRow(targetX, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(bufferService, targetY);\n  } else {\n    startRow = startY;\n  }\n\n  if ((startX < targetX &&\n    startRow <= targetY) || // down/right or same y/right\n    (startX >= targetX &&\n    startRow < targetY)) {  // down/left or same y/left\n    return Direction.RIGHT;\n  }\n  return Direction.LEFT;\n}\n\n/**\n * Determines if the up or down arrow is needed\n */\nfunction verticalDirection(startY: number, targetY: number): Direction {\n  return startY > targetY ? Direction.UP : Direction.DOWN;\n}\n\n/**\n * Constructs the string of chars in the buffer from a starting row and col\n * to an ending row and col\n * @param startCol The starting column position\n * @param startRow The starting row position\n * @param endCol The ending column position\n * @param endRow The ending row position\n * @param forward Direction to move\n */\nfunction bufferLine(\n  startCol: number,\n  startRow: number,\n  endCol: number,\n  endRow: number,\n  forward: boolean,\n  bufferService: IBufferService\n): string {\n  let currentCol = startCol;\n  let currentRow = startRow;\n  let bufferStr = '';\n\n  while (currentCol !== endCol || currentRow !== endRow) {\n    currentCol += forward ? 1 : -1;\n\n    if (forward && currentCol > bufferService.cols - 1) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, startCol, currentCol\n      );\n      currentCol = 0;\n      startCol = 0;\n      currentRow++;\n    } else if (!forward && currentCol < 0) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, 0, startCol + 1\n      );\n      currentCol = bufferService.cols - 1;\n      startCol = currentCol;\n      currentRow--;\n    }\n  }\n\n  return bufferStr + bufferService.buffer.translateBufferLineToString(\n    currentRow, false, startCol, currentCol\n  );\n}\n\n/**\n * Constructs the escape sequence for clicking an arrow\n * @param direction The direction to move\n */\nfunction sequence(direction: Direction, applicationCursor: boolean): string {\n  const mod =  applicationCursor ? 'O' : '[';\n  return C0.ESC + mod + direction;\n}\n\n/**\n * Returns a string repeated a given number of times\n * Polyfill from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n * @param count The number of times to repeat the string\n * @param string The string that is to be repeated\n */\nfunction repeat(count: number, str: string): string {\n  count = Math.floor(count);\n  let rpt = '';\n  for (let i = 0; i < count; i++) {\n    rpt += str;\n  }\n  return rpt;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal as ITerminalApi, IMarker, IDisposable, ILinkMatcherOptions, ITheme, ILocalizableStrings, ITerminalAddon, ISelectionPosition, IBufferNamespace as IBufferNamespaceApi, IParser, ILinkProvider, IUnicodeHandling, FontWeight, IModes, IDecorationOptions, IDecoration } from 'xterm';\nimport { ITerminal } from 'browser/Types';\nimport { Terminal as TerminalCore } from 'browser/Terminal';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { IEvent } from 'common/EventEmitter';\nimport { ParserApi } from 'common/public/ParserApi';\nimport { UnicodeApi } from 'common/public/UnicodeApi';\nimport { AddonManager } from 'common/public/AddonManager';\nimport { BufferNamespaceApi } from 'common/public/BufferNamespaceApi';\nimport { ITerminalOptions } from 'common/Types';\n\n/**\n * The set of options that only have an effect when set in the Terminal constructor.\n */\nconst CONSTRUCTOR_ONLY_OPTIONS = ['cols', 'rows'];\n\nexport class Terminal implements ITerminalApi {\n  private _core: ITerminal;\n  private _addonManager: AddonManager;\n  private _parser: IParser | undefined;\n  private _buffer: BufferNamespaceApi | undefined;\n  private _publicOptions: ITerminalOptions;\n\n  constructor(options?: ITerminalOptions) {\n    this._core = new TerminalCore(options);\n    this._addonManager = new AddonManager();\n\n    this._publicOptions = { ... this._core.options };\n    const getter = (propName: string): any => {\n      return this._core.options[propName];\n    };\n    const setter = (propName: string, value: any): void => {\n      this._checkReadonlyOptions(propName);\n      this._core.options[propName] = value;\n    };\n\n    for (const propName in this._core.options) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this._publicOptions, propName, desc);\n    }\n  }\n\n  private _checkReadonlyOptions(propName: string): void {\n    // Throw an error if any constructor only option is modified\n    // from terminal.options\n    // Modifications from anywhere else are allowed\n    if (CONSTRUCTOR_ONLY_OPTIONS.includes(propName)) {\n      throw new Error(`Option \"${propName}\" can only be set in the constructor`);\n    }\n  }\n\n  private _checkProposedApi(): void {\n    if (!this._core.optionsService.rawOptions.allowProposedApi) {\n      throw new Error('You must set the allowProposedApi option to true to use proposed API');\n    }\n  }\n\n  public get onBell(): IEvent<void> { return this._core.onBell; }\n  public get onBinary(): IEvent<string> { return this._core.onBinary; }\n  public get onCursorMove(): IEvent<void> { return this._core.onCursorMove; }\n  public get onData(): IEvent<string> { return this._core.onData; }\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._core.onKey; }\n  public get onLineFeed(): IEvent<void> { return this._core.onLineFeed; }\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._core.onRender; }\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._core.onResize; }\n  public get onScroll(): IEvent<number> { return this._core.onScroll; }\n  public get onSelectionChange(): IEvent<void> { return this._core.onSelectionChange; }\n  public get onTitleChange(): IEvent<string> { return this._core.onTitleChange; }\n  public get onWriteParsed(): IEvent<void> { return this._core.onWriteParsed; }\n\n  public get element(): HTMLElement | undefined { return this._core.element; }\n  public get parser(): IParser {\n    this._checkProposedApi();\n    if (!this._parser) {\n      this._parser = new ParserApi(this._core);\n    }\n    return this._parser;\n  }\n  public get unicode(): IUnicodeHandling {\n    this._checkProposedApi();\n    return new UnicodeApi(this._core);\n  }\n  public get textarea(): HTMLTextAreaElement | undefined { return this._core.textarea; }\n  public get rows(): number { return this._core.rows; }\n  public get cols(): number { return this._core.cols; }\n  public get buffer(): IBufferNamespaceApi {\n    this._checkProposedApi();\n    if (!this._buffer) {\n      this._buffer = new BufferNamespaceApi(this._core);\n    }\n    return this._buffer;\n  }\n  public get markers(): ReadonlyArray<IMarker> {\n    this._checkProposedApi();\n    return this._core.markers;\n  }\n  public get modes(): IModes {\n    const m = this._core.coreService.decPrivateModes;\n    let mouseTrackingMode: 'none' | 'x10' | 'vt200' | 'drag' | 'any' = 'none';\n    switch (this._core.coreMouseService.activeProtocol) {\n      case 'X10': mouseTrackingMode = 'x10'; break;\n      case 'VT200': mouseTrackingMode = 'vt200'; break;\n      case 'DRAG': mouseTrackingMode = 'drag'; break;\n      case 'ANY': mouseTrackingMode = 'any'; break;\n    }\n    return {\n      applicationCursorKeysMode: m.applicationCursorKeys,\n      applicationKeypadMode: m.applicationKeypad,\n      bracketedPasteMode: m.bracketedPasteMode,\n      insertMode: this._core.coreService.modes.insertMode,\n      mouseTrackingMode: mouseTrackingMode,\n      originMode: m.origin,\n      reverseWraparoundMode: m.reverseWraparound,\n      sendFocusMode: m.sendFocus,\n      wraparoundMode: m.wraparound\n    };\n  }\n  public get options(): ITerminalOptions {\n    return this._publicOptions;\n  }\n  public set options(options: ITerminalOptions) {\n    for (const propName in options) {\n      this._publicOptions[propName] = options[propName];\n    }\n  }\n  public blur(): void {\n    this._core.blur();\n  }\n  public focus(): void {\n    this._core.focus();\n  }\n  public resize(columns: number, rows: number): void {\n    this._verifyIntegers(columns, rows);\n    this._core.resize(columns, rows);\n  }\n  public open(parent: HTMLElement): void {\n    this._core.open(parent);\n  }\n  public attachCustomKeyEventHandler(customKeyEventHandler: (event: KeyboardEvent) => boolean): void {\n    this._core.attachCustomKeyEventHandler(customKeyEventHandler);\n  }\n  public registerLinkMatcher(regex: RegExp, handler: (event: MouseEvent, uri: string) => void, options?: ILinkMatcherOptions): number {\n    this._checkProposedApi();\n    return this._core.registerLinkMatcher(regex, handler, options);\n  }\n  public deregisterLinkMatcher(matcherId: number): void {\n    this._checkProposedApi();\n    this._core.deregisterLinkMatcher(matcherId);\n  }\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    this._checkProposedApi();\n    return this._core.registerLinkProvider(linkProvider);\n  }\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    this._checkProposedApi();\n    return this._core.registerCharacterJoiner(handler);\n  }\n  public deregisterCharacterJoiner(joinerId: number): void {\n    this._checkProposedApi();\n    this._core.deregisterCharacterJoiner(joinerId);\n  }\n  public registerMarker(cursorYOffset: number = 0): IMarker | undefined {\n    this._checkProposedApi();\n    this._verifyIntegers(cursorYOffset);\n    return this._core.addMarker(cursorYOffset);\n  }\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    this._checkProposedApi();\n    this._verifyPositiveIntegers(decorationOptions.x ?? 0, decorationOptions.width ?? 0, decorationOptions.height ?? 0);\n    return this._core.registerDecoration(decorationOptions);\n  }\n  public addMarker(cursorYOffset: number): IMarker | undefined {\n    return this.registerMarker(cursorYOffset);\n  }\n  public hasSelection(): boolean {\n    return this._core.hasSelection();\n  }\n  public select(column: number, row: number, length: number): void {\n    this._verifyIntegers(column, row, length);\n    this._core.select(column, row, length);\n  }\n  public getSelection(): string {\n    return this._core.getSelection();\n  }\n  public getSelectionPosition(): ISelectionPosition | undefined {\n    return this._core.getSelectionPosition();\n  }\n  public clearSelection(): void {\n    this._core.clearSelection();\n  }\n  public selectAll(): void {\n    this._core.selectAll();\n  }\n  public selectLines(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.selectLines(start, end);\n  }\n  public dispose(): void {\n    this._addonManager.dispose();\n    this._core.dispose();\n  }\n  public scrollLines(amount: number): void {\n    this._verifyIntegers(amount);\n    this._core.scrollLines(amount);\n  }\n  public scrollPages(pageCount: number): void {\n    this._verifyIntegers(pageCount);\n    this._core.scrollPages(pageCount);\n  }\n  public scrollToTop(): void {\n    this._core.scrollToTop();\n  }\n  public scrollToBottom(): void {\n    this._core.scrollToBottom();\n  }\n  public scrollToLine(line: number): void {\n    this._verifyIntegers(line);\n    this._core.scrollToLine(line);\n  }\n  public clear(): void {\n    this._core.clear();\n  }\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeUtf8(data: Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeln(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data);\n    this._core.write('\\r\\n', callback);\n  }\n  public paste(data: string): void {\n    this._core.paste(data);\n  }\n  public getOption(key: 'bellSound' | 'bellStyle' | 'cursorStyle' | 'fontFamily' | 'logLevel' | 'rendererType' | 'termName' | 'wordSeparator'): string;\n  public getOption(key: 'allowTransparency' | 'altClickMovesCursor' | 'cancelEvents' | 'convertEol' | 'cursorBlink' | 'disableStdin' | 'macOptionIsMeta' | 'rightClickSelectsWord' | 'popOnBell' | 'visualBell'): boolean;\n  public getOption(key: 'cols' | 'fontSize' | 'letterSpacing' | 'lineHeight' | 'rows' | 'tabStopWidth' | 'scrollback'): number;\n  public getOption(key: 'fontWeight' | 'fontWeightBold'): FontWeight;\n  public getOption(key: string): any;\n  public getOption(key: any): any {\n    return this._core.optionsService.getOption(key);\n  }\n  public setOption(key: 'bellSound' | 'fontFamily' | 'termName' | 'wordSeparator', value: string): void;\n  public setOption(key: 'fontWeight' | 'fontWeightBold', value: 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | number): void;\n  public setOption(key: 'logLevel', value: 'debug' | 'info' | 'warn' | 'error' | 'off'): void;\n  public setOption(key: 'bellStyle', value: 'none' | 'visual' | 'sound' | 'both'): void;\n  public setOption(key: 'cursorStyle', value: 'block' | 'underline' | 'bar'): void;\n  public setOption(key: 'allowTransparency' | 'altClickMovesCursor' | 'cancelEvents' | 'convertEol' | 'cursorBlink' | 'disableStdin' | 'macOptionIsMeta' | 'rightClickSelectsWord' | 'popOnBell' | 'visualBell', value: boolean): void;\n  public setOption(key: 'fontSize' | 'letterSpacing' | 'lineHeight' | 'tabStopWidth' | 'scrollback', value: number): void;\n  public setOption(key: 'theme', value: ITheme): void;\n  public setOption(key: 'cols' | 'rows', value: number): void;\n  public setOption(key: string, value: any): void;\n  public setOption(key: any, value: any): void {\n    this._checkReadonlyOptions(key);\n    this._core.optionsService.setOption(key, value);\n  }\n  public refresh(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.refresh(start, end);\n  }\n  public reset(): void {\n    this._core.reset();\n  }\n  public clearTextureAtlas(): void {\n    this._core.clearTextureAtlas();\n  }\n  public loadAddon(addon: ITerminalAddon): void {\n    return this._addonManager.loadAddon(this, addon);\n  }\n  public static get strings(): ILocalizableStrings {\n    return Strings;\n  }\n\n  private _verifyIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value === Infinity || isNaN(value) || value % 1 !== 0) {\n        throw new Error('This API only accepts integers');\n      }\n    }\n  }\n\n  private _verifyPositiveIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value && (value === Infinity || isNaN(value) || value % 1 !== 0 || value < 0)) {\n        throw new Error('This API only accepts positive integers');\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions, IRenderLayer } from 'browser/renderer/Types';\nimport { ICellData, IColor } from 'common/Types';\nimport { DEFAULT_COLOR, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_CODE, Attributes } from 'common/buffer/Constants';\nimport { IGlyphIdentifier } from 'browser/renderer/atlas/Types';\nimport { DIM_OPACITY, INVERTED_DEFAULT_COLOR, TEXT_BASELINE } from 'browser/renderer/atlas/Constants';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { acquireCharAtlas } from 'browser/renderer/atlas/CharAtlasCache';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { IColorSet } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService, IDecorationService, IOptionsService } from 'common/services/Services';\nimport { excludeFromContrastRatioDemands, throwIfFalsy } from 'browser/renderer/RendererUtils';\nimport { channels, color, rgba } from 'common/Color';\nimport { removeElementFromParent } from 'browser/Dom';\nimport { tryDrawCustomChar } from 'browser/renderer/CustomGlyphs';\n\nexport abstract class BaseRenderLayer implements IRenderLayer {\n  private _canvas: HTMLCanvasElement;\n  protected _ctx!: CanvasRenderingContext2D;\n  private _scaledCharWidth: number = 0;\n  private _scaledCharHeight: number = 0;\n  private _scaledCellWidth: number = 0;\n  private _scaledCellHeight: number = 0;\n  private _scaledCharLeft: number = 0;\n  private _scaledCharTop: number = 0;\n\n  private _selectionStart: [number, number] | undefined;\n  private _selectionEnd: [number, number] | undefined;\n  private _columnSelectMode: boolean = false;\n\n  protected _charAtlas: BaseCharAtlas | undefined;\n\n  /**\n   * An object that's reused when drawing glyphs in order to reduce GC.\n   */\n  private _currentGlyphIdentifier: IGlyphIdentifier = {\n    chars: '',\n    code: 0,\n    bg: 0,\n    fg: 0,\n    bold: false,\n    dim: false,\n    italic: false\n  };\n\n  constructor(\n    private _container: HTMLElement,\n    id: string,\n    zIndex: number,\n    private _alpha: boolean,\n    protected _colors: IColorSet,\n    private _rendererId: number,\n    protected readonly _bufferService: IBufferService,\n    protected readonly _optionsService: IOptionsService,\n    protected readonly _decorationService: IDecorationService\n  ) {\n    this._canvas = document.createElement('canvas');\n    this._canvas.classList.add(`xterm-${id}-layer`);\n    this._canvas.style.zIndex = zIndex.toString();\n    this._initCanvas();\n    this._container.appendChild(this._canvas);\n  }\n\n  public dispose(): void {\n    removeElementFromParent(this._canvas);\n    this._charAtlas?.dispose();\n  }\n\n  private _initCanvas(): void {\n    this._ctx = throwIfFalsy(this._canvas.getContext('2d', { alpha: this._alpha }));\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this._clearAll();\n    }\n  }\n\n  public onOptionsChanged(): void {}\n  public onBlur(): void {}\n  public onFocus(): void {}\n  public onCursorMove(): void {}\n  public onGridChanged(startRow: number, endRow: number): void {}\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean = false): void {\n    this._selectionStart = start;\n    this._selectionEnd = end;\n    this._columnSelectMode = columnSelectMode;\n  }\n\n  public setColors(colorSet: IColorSet): void {\n    this._refreshCharAtlas(colorSet);\n  }\n\n  protected _setTransparency(alpha: boolean): void {\n    // Do nothing when alpha doesn't change\n    if (alpha === this._alpha) {\n      return;\n    }\n\n    // Create new canvas and replace old one\n    const oldCanvas = this._canvas;\n    this._alpha = alpha;\n    // Cloning preserves properties\n    this._canvas = this._canvas.cloneNode() as HTMLCanvasElement;\n    this._initCanvas();\n    this._container.replaceChild(this._canvas, oldCanvas);\n\n    // Regenerate char atlas and force a full redraw\n    this._refreshCharAtlas(this._colors);\n    this.onGridChanged(0, this._bufferService.rows - 1);\n  }\n\n  /**\n   * Refreshes the char atlas, aquiring a new one if necessary.\n   * @param colorSet The color set to use for the char atlas.\n   */\n  private _refreshCharAtlas(colorSet: IColorSet): void {\n    if (this._scaledCharWidth <= 0 && this._scaledCharHeight <= 0) {\n      return;\n    }\n    this._charAtlas = acquireCharAtlas(this._optionsService.rawOptions, this._rendererId, colorSet, this._scaledCharWidth, this._scaledCharHeight);\n    this._charAtlas.warmUp();\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    this._scaledCellWidth = dim.scaledCellWidth;\n    this._scaledCellHeight = dim.scaledCellHeight;\n    this._scaledCharWidth = dim.scaledCharWidth;\n    this._scaledCharHeight = dim.scaledCharHeight;\n    this._scaledCharLeft = dim.scaledCharLeft;\n    this._scaledCharTop = dim.scaledCharTop;\n    this._canvas.width = dim.scaledCanvasWidth;\n    this._canvas.height = dim.scaledCanvasHeight;\n    this._canvas.style.width = `${dim.canvasWidth}px`;\n    this._canvas.style.height = `${dim.canvasHeight}px`;\n\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this._clearAll();\n    }\n\n    this._refreshCharAtlas(this._colors);\n  }\n\n  public abstract reset(): void;\n\n  public clearTextureAtlas(): void {\n    this._charAtlas?.clear();\n  }\n\n  /**\n   * Fills 1+ cells completely. This uses the existing fillStyle on the context.\n   * @param x The column to start at.\n   * @param y The row to start at\n   * @param width The number of columns to fill.\n   * @param height The number of rows to fill.\n   */\n  protected _fillCells(x: number, y: number, width: number, height: number): void {\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      y * this._scaledCellHeight,\n      width * this._scaledCellWidth,\n      height * this._scaledCellHeight);\n  }\n\n  /**\n     * Fills a 1px line (2px on HDPI) at the middle of the cell. This uses the\n     * existing fillStyle on the context.\n     * @param x The column to fill.\n     * @param y The row to fill.\n     */\n  protected _fillMiddleLineAtCells(x: number, y: number, width: number = 1): void {\n    const cellOffset = Math.ceil(this._scaledCellHeight * 0.5);\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      (y + 1) * this._scaledCellHeight - cellOffset - window.devicePixelRatio,\n      width * this._scaledCellWidth,\n      window.devicePixelRatio);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the bottom of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _fillBottomLineAtCells(x: number, y: number, width: number = 1): void {\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      (y + 1) * this._scaledCellHeight - window.devicePixelRatio - 1 /* Ensure it's drawn within the cell */,\n      width * this._scaledCellWidth,\n      window.devicePixelRatio);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the left of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _fillLeftLineAtCell(x: number, y: number, width: number): void {\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      y * this._scaledCellHeight,\n      window.devicePixelRatio * width,\n      this._scaledCellHeight);\n  }\n\n  /**\n   * Strokes a 1px rectangle (2px on HDPI) around a cell. This uses the existing\n   * strokeStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _strokeRectAtCell(x: number, y: number, width: number, height: number): void {\n    this._ctx.lineWidth = window.devicePixelRatio;\n    this._ctx.strokeRect(\n      x * this._scaledCellWidth + window.devicePixelRatio / 2,\n      y * this._scaledCellHeight + (window.devicePixelRatio / 2),\n      width * this._scaledCellWidth - window.devicePixelRatio,\n      (height * this._scaledCellHeight) - window.devicePixelRatio);\n  }\n\n  /**\n   * Clears the entire canvas.\n   */\n  protected _clearAll(): void {\n    if (this._alpha) {\n      this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    } else {\n      this._ctx.fillStyle = this._colors.background.css;\n      this._ctx.fillRect(0, 0, this._canvas.width, this._canvas.height);\n    }\n  }\n\n  /**\n   * Clears 1+ cells completely.\n   * @param x The column to start at.\n   * @param y The row to start at.\n   * @param width The number of columns to clear.\n   * @param height The number of rows to clear.\n   */\n  protected _clearCells(x: number, y: number, width: number, height: number): void {\n    if (this._alpha) {\n      this._ctx.clearRect(\n        x * this._scaledCellWidth,\n        y * this._scaledCellHeight,\n        width * this._scaledCellWidth,\n        height * this._scaledCellHeight);\n    } else {\n      this._ctx.fillStyle = this._colors.background.css;\n      this._ctx.fillRect(\n        x * this._scaledCellWidth,\n        y * this._scaledCellHeight,\n        width * this._scaledCellWidth,\n        height * this._scaledCellHeight);\n    }\n  }\n\n  /**\n   * Draws a truecolor character at the cell. The character will be clipped to\n   * ensure that it fits with the cell, including the cell to the right if it's\n   * a wide character. This uses the existing fillStyle on the context.\n   * @param cell The cell data for the character to draw.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   * @param color The color of the character.\n   */\n  protected _fillCharTrueColor(cell: CellData, x: number, y: number): void {\n    this._ctx.font = this._getFont(false, false);\n    this._ctx.textBaseline = TEXT_BASELINE;\n    this._clipRow(y);\n\n    // Draw custom characters if applicable\n    let drawSuccess = false;\n    if (this._optionsService.rawOptions.customGlyphs !== false) {\n      drawSuccess = tryDrawCustomChar(this._ctx, cell.getChars(), x * this._scaledCellWidth, y * this._scaledCellHeight, this._scaledCellWidth, this._scaledCellHeight);\n    }\n\n    // Draw the character\n    if (!drawSuccess) {\n      this._ctx.fillText(\n        cell.getChars(),\n        x * this._scaledCellWidth + this._scaledCharLeft,\n        y * this._scaledCellHeight + this._scaledCharTop + this._scaledCharHeight);\n    }\n  }\n\n  /**\n   * Draws one or more characters at a cell. If possible this will draw using\n   * the character atlas to reduce draw time.\n   * @param chars The character or characters.\n   * @param code The character code.\n   * @param width The width of the characters.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   * @param fg The foreground color, in the format stored within the attributes.\n   * @param bg The background color, in the format stored within the attributes.\n   * This is used to validate whether a cached image can be used.\n   * @param bold Whether the text is bold.\n   */\n  protected _drawChars(cell: ICellData, x: number, y: number): void {\n    const contrastColor = this._getContrastColor(cell, x, y);\n\n    // skip cache right away if we draw in RGB\n    // Note: to avoid bad runtime JoinedCellData will be skipped\n    //       in the cache handler itself (atlasDidDraw == false) and\n    //       fall through to uncached later down below\n    if (contrastColor || cell.isFgRGB() || cell.isBgRGB()) {\n      this._drawUncachedChars(cell, x, y, contrastColor);\n      return;\n    }\n\n    let fg;\n    let bg;\n    if (cell.isInverse()) {\n      fg = (cell.isBgDefault()) ? INVERTED_DEFAULT_COLOR : cell.getBgColor();\n      bg = (cell.isFgDefault()) ? INVERTED_DEFAULT_COLOR : cell.getFgColor();\n    } else {\n      bg = (cell.isBgDefault()) ? DEFAULT_COLOR : cell.getBgColor();\n      fg = (cell.isFgDefault()) ? DEFAULT_COLOR : cell.getFgColor();\n    }\n\n    const drawInBrightColor = this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && fg < 8;\n\n    fg += drawInBrightColor ? 8 : 0;\n    this._currentGlyphIdentifier.chars = cell.getChars() || WHITESPACE_CELL_CHAR;\n    this._currentGlyphIdentifier.code = cell.getCode() || WHITESPACE_CELL_CODE;\n    this._currentGlyphIdentifier.bg = bg;\n    this._currentGlyphIdentifier.fg = fg;\n    this._currentGlyphIdentifier.bold = !!cell.isBold();\n    this._currentGlyphIdentifier.dim = !!cell.isDim();\n    this._currentGlyphIdentifier.italic = !!cell.isItalic();\n\n    // Don't try cache the glyph if it uses any decoration foreground/background override.\n    let hasOverrides = false;\n    for (const d of this._decorationService.getDecorationsAtCell(x, y)) {\n      if (d.backgroundColorRGB || d.foregroundColorRGB) {\n        hasOverrides = true;\n        break;\n      }\n    }\n\n    const atlasDidDraw = hasOverrides ? false : this._charAtlas?.draw(this._ctx, this._currentGlyphIdentifier, x * this._scaledCellWidth + this._scaledCharLeft, y * this._scaledCellHeight + this._scaledCharTop);\n\n    if (!atlasDidDraw) {\n      this._drawUncachedChars(cell, x, y);\n    }\n  }\n\n  /**\n   * Draws one or more characters at one or more cells. The character(s) will be\n   * clipped to ensure that they fit with the cell(s), including the cell to the\n   * right if the last character is a wide character.\n   * @param chars The character.\n   * @param width The width of the character.\n   * @param fg The foreground color, in the format stored within the attributes.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   */\n  private _drawUncachedChars(cell: ICellData, x: number, y: number, fgOverride?: IColor): void {\n    this._ctx.save();\n    this._ctx.font = this._getFont(!!cell.isBold(), !!cell.isItalic());\n    this._ctx.textBaseline = TEXT_BASELINE;\n\n    if (cell.isInverse()) {\n      if (fgOverride) {\n        this._ctx.fillStyle = fgOverride.css;\n      } else if (cell.isBgDefault()) {\n        this._ctx.fillStyle = color.opaque(this._colors.background).css;\n      } else if (cell.isBgRGB()) {\n        this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n      } else {\n        let bg = cell.getBgColor();\n        if (this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && bg < 8) {\n          bg += 8;\n        }\n        this._ctx.fillStyle = this._colors.ansi[bg].css;\n      }\n    } else {\n      if (fgOverride) {\n        this._ctx.fillStyle = fgOverride.css;\n      } else if (cell.isFgDefault()) {\n        this._ctx.fillStyle = this._colors.foreground.css;\n      } else if (cell.isFgRGB()) {\n        this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n      } else {\n        let fg = cell.getFgColor();\n        if (this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n          fg += 8;\n        }\n        this._ctx.fillStyle = this._colors.ansi[fg].css;\n      }\n    }\n\n    this._clipRow(y);\n\n    // Apply alpha to dim the character\n    if (cell.isDim()) {\n      this._ctx.globalAlpha = DIM_OPACITY;\n    }\n\n    // Draw custom characters if applicable\n    let drawSuccess = false;\n    if (this._optionsService.rawOptions.customGlyphs !== false) {\n      drawSuccess = tryDrawCustomChar(this._ctx, cell.getChars(), x * this._scaledCellWidth, y * this._scaledCellHeight, this._scaledCellWidth, this._scaledCellHeight);\n    }\n\n    // Draw the character\n    if (!drawSuccess) {\n      this._ctx.fillText(\n        cell.getChars(),\n        x * this._scaledCellWidth + this._scaledCharLeft,\n        y * this._scaledCellHeight + this._scaledCharTop + this._scaledCharHeight);\n    }\n\n    this._ctx.restore();\n  }\n\n\n  /**\n   * Clips a row to ensure no pixels will be drawn outside the cells in the row.\n   * @param y The row to clip.\n   */\n  private _clipRow(y: number): void {\n    this._ctx.beginPath();\n    this._ctx.rect(\n      0,\n      y * this._scaledCellHeight,\n      this._bufferService.cols * this._scaledCellWidth,\n      this._scaledCellHeight);\n    this._ctx.clip();\n  }\n\n  /**\n   * Gets the current font.\n   * @param isBold If we should use the bold fontWeight.\n   */\n  protected _getFont(isBold: boolean, isItalic: boolean): string {\n    const fontWeight = isBold ? this._optionsService.rawOptions.fontWeightBold : this._optionsService.rawOptions.fontWeight;\n    const fontStyle = isItalic ? 'italic' : '';\n\n    return `${fontStyle} ${fontWeight} ${this._optionsService.rawOptions.fontSize * window.devicePixelRatio}px ${this._optionsService.rawOptions.fontFamily}`;\n  }\n\n  private _getContrastColor(cell: CellData, x: number, y: number): IColor | undefined {\n    // Get any decoration foreground/background overrides, this must be fetched before the early\n    // exist but applied after inverse\n    let bgOverride: number | undefined;\n    let fgOverride: number | undefined;\n    let isTop = false;\n    for (const d of this._decorationService.getDecorationsAtCell(x, y)) {\n      if (d.options.layer !== 'top' && isTop) {\n        continue;\n      }\n      if (d.backgroundColorRGB) {\n        bgOverride = d.backgroundColorRGB.rgba;\n      }\n      if (d.foregroundColorRGB) {\n        fgOverride = d.foregroundColorRGB.rgba;\n      }\n      isTop = d.options.layer === 'top';\n    }\n\n    // Apply selection foreground if applicable\n    if (!isTop) {\n      if (this._colors.selectionForeground && this._isCellInSelection(x, y)) {\n        fgOverride = this._colors.selectionForeground.rgba;\n      }\n    }\n\n    if (!bgOverride && !fgOverride && (this._optionsService.rawOptions.minimumContrastRatio === 1 || excludeFromContrastRatioDemands(cell.getCode()))) {\n      return undefined;\n    }\n\n    if (!bgOverride && !fgOverride) {\n      // Try get from cache\n      const adjustedColor = this._colors.contrastCache.getColor(cell.bg, cell.fg);\n      if (adjustedColor !== undefined) {\n        return adjustedColor || undefined;\n      }\n    }\n\n    let fgColor = cell.getFgColor();\n    let fgColorMode = cell.getFgColorMode();\n    let bgColor = cell.getBgColor();\n    let bgColorMode = cell.getBgColorMode();\n    const isInverse = !!cell.isInverse();\n    const isBold = !!cell.isInverse();\n    if (isInverse) {\n      const temp = fgColor;\n      fgColor = bgColor;\n      bgColor = temp;\n      const temp2 = fgColorMode;\n      fgColorMode = bgColorMode;\n      bgColorMode = temp2;\n    }\n\n    const bgRgba = this._resolveBackgroundRgba(bgOverride !== undefined ? Attributes.CM_RGB : bgColorMode, bgOverride ?? bgColor, isInverse);\n    const fgRgba = this._resolveForegroundRgba(fgColorMode, fgColor, isInverse, isBold);\n    let result = rgba.ensureContrastRatio(bgOverride ?? bgRgba, fgOverride ?? fgRgba, this._optionsService.rawOptions.minimumContrastRatio);\n\n    if (!result) {\n      if (!fgOverride) {\n        this._colors.contrastCache.setColor(cell.bg, cell.fg, null);\n        return undefined;\n      }\n      // If it was an override and there was no contrast change, set as the result\n      result = fgOverride;\n    }\n\n    const color: IColor = {\n      css: channels.toCss(\n        (result >> 24) & 0xFF,\n        (result >> 16) & 0xFF,\n        (result >> 8) & 0xFF\n      ),\n      rgba: result\n    };\n    if (!bgOverride && !fgOverride) {\n      this._colors.contrastCache.setColor(cell.bg, cell.fg, color);\n    }\n\n    return color;\n  }\n\n  private _resolveBackgroundRgba(bgColorMode: number, bgColor: number, inverse: boolean): number {\n    switch (bgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        return this._colors.ansi[bgColor].rgba;\n      case Attributes.CM_RGB:\n        return bgColor << 8;\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          return this._colors.foreground.rgba;\n        }\n        return this._colors.background.rgba;\n    }\n  }\n\n  private _resolveForegroundRgba(fgColorMode: number, fgColor: number, inverse: boolean, bold: boolean): number {\n    switch (fgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        if (this._optionsService.rawOptions.drawBoldTextInBrightColors && bold && fgColor < 8) {\n          fgColor += 8;\n        }\n        return this._colors.ansi[fgColor].rgba;\n      case Attributes.CM_RGB:\n        return fgColor << 8;\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          return this._colors.background.rgba;\n        }\n        return this._colors.foreground.rgba;\n    }\n  }\n\n  private _isCellInSelection(x: number, y: number): boolean {\n    const start = this._selectionStart;\n    const end = this._selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    if (this._columnSelectMode) {\n      return x >= start[0] && y >= start[1] &&\n        x < end[0] && y < end[1];\n    }\n    return (y > start[1] && y < end[1]) ||\n        (start[1] === end[1] && y === start[1] && x >= start[0] && x < end[0]) ||\n        (start[1] < end[1] && y === end[1] && x < end[0]) ||\n        (start[1] < end[1] && y === start[1] && x >= start[0]);\n  }\n}\n\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions, IRequestRedrawEvent } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from 'browser/renderer/BaseRenderLayer';\nimport { ICellData } from 'common/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IColorSet } from 'browser/Types';\nimport { IBufferService, IOptionsService, ICoreService, IDecorationService } from 'common/services/Services';\nimport { IEventEmitter } from 'common/EventEmitter';\nimport { ICoreBrowserService } from 'browser/services/Services';\n\ninterface ICursorState {\n  x: number;\n  y: number;\n  isFocused: boolean;\n  style: string;\n  width: number;\n}\n\n/**\n * The time between cursor blinks.\n */\nconst BLINK_INTERVAL = 600;\n\nexport class CursorRenderLayer extends BaseRenderLayer {\n  private _state: ICursorState;\n  private _cursorRenderers: {[key: string]: (x: number, y: number, cell: ICellData) => void};\n  private _cursorBlinkStateManager: CursorBlinkStateManager | undefined;\n  private _cell: ICellData = new CellData();\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    rendererId: number,\n    private _onRequestRedraw: IEventEmitter<IRequestRedrawEvent>,\n    @IBufferService bufferService: IBufferService,\n    @IOptionsService optionsService: IOptionsService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IDecorationService decorationService: IDecorationService\n  ) {\n    super(container, 'cursor', zIndex, true, colors, rendererId, bufferService, optionsService, decorationService);\n    this._state = {\n      x: 0,\n      y: 0,\n      isFocused: false,\n      style: '',\n      width: 0\n    };\n    this._cursorRenderers = {\n      'bar': this._renderBarCursor.bind(this),\n      'block': this._renderBlockCursor.bind(this),\n      'underline': this._renderUnderlineCursor.bind(this)\n    };\n  }\n\n  public dispose(): void {\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.dispose();\n      this._cursorBlinkStateManager = undefined;\n    }\n    super.dispose();\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = {\n      x: 0,\n      y: 0,\n      isFocused: false,\n      style: '',\n      width: 0\n    };\n  }\n\n  public reset(): void {\n    this._clearCursor();\n    this._cursorBlinkStateManager?.restartBlinkAnimation();\n    this.onOptionsChanged();\n  }\n\n  public onBlur(): void {\n    this._cursorBlinkStateManager?.pause();\n    this._onRequestRedraw.fire({ start: this._bufferService.buffer.y, end: this._bufferService.buffer.y });\n  }\n\n  public onFocus(): void {\n    this._cursorBlinkStateManager?.resume();\n    this._onRequestRedraw.fire({ start: this._bufferService.buffer.y, end: this._bufferService.buffer.y });\n  }\n\n  public onOptionsChanged(): void {\n    if (this._optionsService.rawOptions.cursorBlink) {\n      if (!this._cursorBlinkStateManager) {\n        this._cursorBlinkStateManager = new CursorBlinkStateManager(this._coreBrowserService.isFocused, () => {\n          this._render(true);\n        });\n      }\n    } else {\n      this._cursorBlinkStateManager?.dispose();\n      this._cursorBlinkStateManager = undefined;\n    }\n    // Request a refresh from the terminal as management of rendering is being\n    // moved back to the terminal\n    this._onRequestRedraw.fire({ start: this._bufferService.buffer.y, end: this._bufferService.buffer.y });\n  }\n\n  public onCursorMove(): void {\n    this._cursorBlinkStateManager?.restartBlinkAnimation();\n  }\n\n  public onGridChanged(startRow: number, endRow: number): void {\n    if (!this._cursorBlinkStateManager || this._cursorBlinkStateManager.isPaused) {\n      this._render(false);\n    } else {\n      this._cursorBlinkStateManager.restartBlinkAnimation();\n    }\n  }\n\n  private _render(triggeredByAnimationFrame: boolean): void {\n    // Don't draw the cursor if it's hidden\n    if (!this._coreService.isCursorInitialized || this._coreService.isCursorHidden) {\n      this._clearCursor();\n      return;\n    }\n\n    const cursorY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    const viewportRelativeCursorY = cursorY - this._bufferService.buffer.ydisp;\n\n    // Don't draw the cursor if it's off-screen\n    if (viewportRelativeCursorY < 0 || viewportRelativeCursorY >= this._bufferService.rows) {\n      this._clearCursor();\n      return;\n    }\n\n    // in case cursor.x == cols adjust visual cursor to cols - 1\n    const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n    this._bufferService.buffer.lines.get(cursorY)!.loadCell(cursorX, this._cell);\n    if (this._cell.content === undefined) {\n      return;\n    }\n\n    if (!this._coreBrowserService.isFocused) {\n      this._clearCursor();\n      this._ctx.save();\n      this._ctx.fillStyle = this._colors.cursor.css;\n      const cursorStyle = this._optionsService.rawOptions.cursorStyle;\n      if (cursorStyle && cursorStyle !== 'block') {\n        this._cursorRenderers[cursorStyle](cursorX, viewportRelativeCursorY, this._cell);\n      } else {\n        this._renderBlurCursor(cursorX, viewportRelativeCursorY, this._cell);\n      }\n      this._ctx.restore();\n      this._state.x = cursorX;\n      this._state.y = viewportRelativeCursorY;\n      this._state.isFocused = false;\n      this._state.style = cursorStyle;\n      this._state.width = this._cell.getWidth();\n      return;\n    }\n\n    // Don't draw the cursor if it's blinking\n    if (this._cursorBlinkStateManager && !this._cursorBlinkStateManager.isCursorVisible) {\n      this._clearCursor();\n      return;\n    }\n\n    if (this._state) {\n      // The cursor is already in the correct spot, don't redraw\n      if (this._state.x === cursorX &&\n          this._state.y === viewportRelativeCursorY &&\n          this._state.isFocused === this._coreBrowserService.isFocused &&\n          this._state.style === this._optionsService.rawOptions.cursorStyle &&\n          this._state.width === this._cell.getWidth()) {\n        return;\n      }\n      this._clearCursor();\n    }\n\n    this._ctx.save();\n    this._cursorRenderers[this._optionsService.rawOptions.cursorStyle || 'block'](cursorX, viewportRelativeCursorY, this._cell);\n    this._ctx.restore();\n\n    this._state.x = cursorX;\n    this._state.y = viewportRelativeCursorY;\n    this._state.isFocused = false;\n    this._state.style = this._optionsService.rawOptions.cursorStyle;\n    this._state.width = this._cell.getWidth();\n  }\n\n  private _clearCursor(): void {\n    if (this._state) {\n      // Avoid potential rounding errors when device pixel ratio is less than 1\n      if (window.devicePixelRatio < 1) {\n        this._clearAll();\n      } else {\n        this._clearCells(this._state.x, this._state.y, this._state.width, 1);\n      }\n      this._state = {\n        x: 0,\n        y: 0,\n        isFocused: false,\n        style: '',\n        width: 0\n      };\n    }\n  }\n\n  private _renderBarCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillLeftLineAtCell(x, y, this._optionsService.rawOptions.cursorWidth);\n    this._ctx.restore();\n  }\n\n  private _renderBlockCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillCells(x, y, cell.getWidth(), 1);\n    this._ctx.fillStyle = this._colors.cursorAccent.css;\n    this._fillCharTrueColor(cell, x, y);\n    this._ctx.restore();\n  }\n\n  private _renderUnderlineCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillBottomLineAtCells(x, y);\n    this._ctx.restore();\n  }\n\n  private _renderBlurCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.strokeStyle = this._colors.cursor.css;\n    this._strokeRectAtCell(x, y, cell.getWidth(), 1);\n    this._ctx.restore();\n  }\n}\n\nclass CursorBlinkStateManager {\n  public isCursorVisible: boolean;\n\n  private _animationFrame: number | undefined;\n  private _blinkStartTimeout: number | undefined;\n  private _blinkInterval: number | undefined;\n\n  /**\n   * The time at which the animation frame was restarted, this is used on the\n   * next render to restart the timers so they don't need to restart the timers\n   * multiple times over a short period.\n   */\n  private _animationTimeRestarted: number | undefined;\n\n  constructor(\n    isFocused: boolean,\n    private _renderCallback: () => void\n  ) {\n    this.isCursorVisible = true;\n    if (isFocused) {\n      this._restartInterval();\n    }\n  }\n\n  public get isPaused(): boolean { return !(this._blinkStartTimeout || this._blinkInterval); }\n\n  public dispose(): void {\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n    if (this._blinkStartTimeout) {\n      window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = undefined;\n    }\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public restartBlinkAnimation(): void {\n    if (this.isPaused) {\n      return;\n    }\n    // Save a timestamp so that the restart can be done on the next interval\n    this._animationTimeRestarted = Date.now();\n    // Force a cursor render to ensure it's visible and in the correct position\n    this.isCursorVisible = true;\n    if (!this._animationFrame) {\n      this._animationFrame = window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = undefined;\n      });\n    }\n  }\n\n  private _restartInterval(timeToStart: number = BLINK_INTERVAL): void {\n    // Clear any existing interval\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n\n    // Setup the initial timeout which will hide the cursor, this is done before\n    // the regular interval is setup in order to support restarting the blink\n    // animation in a lightweight way (without thrashing clearInterval and\n    // setInterval).\n    this._blinkStartTimeout = window.setTimeout(() => {\n      // Check if another animation restart was requested while this was being\n      // started\n      if (this._animationTimeRestarted) {\n        const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n        this._animationTimeRestarted = undefined;\n        if (time > 0) {\n          this._restartInterval(time);\n          return;\n        }\n      }\n\n      // Hide the cursor\n      this.isCursorVisible = false;\n      this._animationFrame = window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = undefined;\n      });\n\n      // Setup the blink interval\n      this._blinkInterval = window.setInterval(() => {\n        // Adjust the animation time if it was restarted\n        if (this._animationTimeRestarted) {\n          // calc time diff\n          // Make restart interval do a setTimeout initially?\n          const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n          this._animationTimeRestarted = undefined;\n          this._restartInterval(time);\n          return;\n        }\n\n        // Invert visibility and render\n        this.isCursorVisible = !this.isCursorVisible;\n        this._animationFrame = window.requestAnimationFrame(() => {\n          this._renderCallback();\n          this._animationFrame = undefined;\n        });\n      }, BLINK_INTERVAL);\n    }, timeToStart);\n  }\n\n  public pause(): void {\n    this.isCursorVisible = true;\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n    if (this._blinkStartTimeout) {\n      window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = undefined;\n    }\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public resume(): void {\n    // Clear out any existing timers just in case\n    this.pause();\n\n    this._animationTimeRestarted = undefined;\n    this._restartInterval();\n    this.restartBlinkAnimation();\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { throwIfFalsy } from 'browser/renderer/RendererUtils';\n\ninterface IBlockVector {\n  x: number;\n  y: number;\n  w: number;\n  h: number;\n}\n\nexport const blockElementDefinitions: { [index: string]: IBlockVector[] | undefined } = {\n  // Block elements (0x2580-0x2590)\n  '▀': [{ x: 0, y: 0, w: 8, h: 4 }], // UPPER HALF BLOCK\n  '▁': [{ x: 0, y: 7, w: 8, h: 1 }], // LOWER ONE EIGHTH BLOCK\n  '▂': [{ x: 0, y: 6, w: 8, h: 2 }], // LOWER ONE QUARTER BLOCK\n  '▃': [{ x: 0, y: 5, w: 8, h: 3 }], // LOWER THREE EIGHTHS BLOCK\n  '▄': [{ x: 0, y: 4, w: 8, h: 4 }], // LOWER HALF BLOCK\n  '▅': [{ x: 0, y: 3, w: 8, h: 5 }], // LOWER FIVE EIGHTHS BLOCK\n  '▆': [{ x: 0, y: 2, w: 8, h: 6 }], // LOWER THREE QUARTERS BLOCK\n  '▇': [{ x: 0, y: 1, w: 8, h: 7 }], // LOWER SEVEN EIGHTHS BLOCK\n  '█': [{ x: 0, y: 0, w: 8, h: 8 }], // FULL BLOCK\n  '▉': [{ x: 0, y: 0, w: 7, h: 8 }], // LEFT SEVEN EIGHTHS BLOCK\n  '▊': [{ x: 0, y: 0, w: 6, h: 8 }], // LEFT THREE QUARTERS BLOCK\n  '▋': [{ x: 0, y: 0, w: 5, h: 8 }], // LEFT FIVE EIGHTHS BLOCK\n  '▌': [{ x: 0, y: 0, w: 4, h: 8 }], // LEFT HALF BLOCK\n  '▍': [{ x: 0, y: 0, w: 3, h: 8 }], // LEFT THREE EIGHTHS BLOCK\n  '▎': [{ x: 0, y: 0, w: 2, h: 8 }], // LEFT ONE QUARTER BLOCK\n  '▏': [{ x: 0, y: 0, w: 1, h: 8 }], // LEFT ONE EIGHTH BLOCK\n  '▐': [{ x: 4, y: 0, w: 4, h: 8 }], // RIGHT HALF BLOCK\n\n  // Block elements (0x2594-0x2595)\n  '▔': [{ x: 0, y: 0, w: 9, h: 1 }], // UPPER ONE EIGHTH BLOCK\n  '▕': [{ x: 7, y: 0, w: 1, h: 8 }], // RIGHT ONE EIGHTH BLOCK\n\n  // Terminal graphic characters (0x2596-0x259F)\n  '▖': [{ x: 0, y: 4, w: 4, h: 4 }],                             // QUADRANT LOWER LEFT\n  '▗': [{ x: 4, y: 4, w: 4, h: 4 }],                             // QUADRANT LOWER RIGHT\n  '▘': [{ x: 0, y: 0, w: 4, h: 4 }],                             // QUADRANT UPPER LEFT\n  '▙': [{ x: 0, y: 0, w: 4, h: 8 }, { x: 0, y: 4, w: 8, h: 4 }], // QUADRANT UPPER LEFT AND LOWER LEFT AND LOWER RIGHT\n  '▚': [{ x: 0, y: 0, w: 4, h: 4 }, { x: 4, y: 4, w: 4, h: 4 }], // QUADRANT UPPER LEFT AND LOWER RIGHT\n  '▛': [{ x: 0, y: 0, w: 4, h: 8 }, { x: 0, y: 0, w: 4, h: 8 }], // QUADRANT UPPER LEFT AND UPPER RIGHT AND LOWER LEFT\n  '▜': [{ x: 0, y: 0, w: 8, h: 4 }, { x: 4, y: 0, w: 4, h: 8 }], // QUADRANT UPPER LEFT AND UPPER RIGHT AND LOWER RIGHT\n  '▝': [{ x: 4, y: 0, w: 4, h: 4 }],                             // QUADRANT UPPER RIGHT\n  '▞': [{ x: 4, y: 0, w: 4, h: 4 }, { x: 0, y: 4, w: 4, h: 4 }], // QUADRANT UPPER RIGHT AND LOWER LEFT\n  '▟': [{ x: 4, y: 0, w: 4, h: 8 }, { x: 0, y: 4, w: 8, h: 4 }], // QUADRANT UPPER RIGHT AND LOWER LEFT AND LOWER RIGHT\n\n  // VERTICAL ONE EIGHTH BLOCK-2 through VERTICAL ONE EIGHTH BLOCK-7\n  '\\u{1FB70}': [{ x: 1, y: 0, w: 1, h: 8 }],\n  '\\u{1FB71}': [{ x: 2, y: 0, w: 1, h: 8 }],\n  '\\u{1FB72}': [{ x: 3, y: 0, w: 1, h: 8 }],\n  '\\u{1FB73}': [{ x: 4, y: 0, w: 1, h: 8 }],\n  '\\u{1FB74}': [{ x: 5, y: 0, w: 1, h: 8 }],\n  '\\u{1FB75}': [{ x: 6, y: 0, w: 1, h: 8 }],\n\n  // HORIZONTAL ONE EIGHTH BLOCK-2 through HORIZONTAL ONE EIGHTH BLOCK-7\n  '\\u{1FB76}': [{ x: 0, y: 1, w: 8, h: 1 }],\n  '\\u{1FB77}': [{ x: 0, y: 2, w: 8, h: 1 }],\n  '\\u{1FB78}': [{ x: 0, y: 3, w: 8, h: 1 }],\n  '\\u{1FB79}': [{ x: 0, y: 4, w: 8, h: 1 }],\n  '\\u{1FB7A}': [{ x: 0, y: 5, w: 8, h: 1 }],\n  '\\u{1FB7B}': [{ x: 0, y: 6, w: 8, h: 1 }],\n\n  // LEFT AND LOWER ONE EIGHTH BLOCK\n  '\\u{1FB7C}': [{ x: 0, y: 0, w: 1, h: 8 }, { x: 0, y: 7, w: 8, h: 1 }],\n  // LEFT AND UPPER ONE EIGHTH BLOCK\n  '\\u{1FB7D}': [{ x: 0, y: 0, w: 1, h: 8 }, { x: 0, y: 0, w: 8, h: 1 }],\n  // RIGHT AND UPPER ONE EIGHTH BLOCK\n  '\\u{1FB7E}': [{ x: 7, y: 0, w: 1, h: 8 }, { x: 0, y: 0, w: 8, h: 1 }],\n  // RIGHT AND LOWER ONE EIGHTH BLOCK\n  '\\u{1FB7F}': [{ x: 7, y: 0, w: 1, h: 8 }, { x: 0, y: 7, w: 8, h: 1 }],\n  // UPPER AND LOWER ONE EIGHTH BLOCK\n  '\\u{1FB80}': [{ x: 0, y: 0, w: 8, h: 1 }, { x: 0, y: 7, w: 8, h: 1 }],\n  // HORIZONTAL ONE EIGHTH BLOCK-1358\n  '\\u{1FB81}': [{ x: 0, y: 0, w: 8, h: 1 }, { x: 0, y: 2, w: 8, h: 1 }, { x: 0, y: 4, w: 8, h: 1 }, { x: 0, y: 7, w: 8, h: 1 }],\n\n  // UPPER ONE QUARTER BLOCK\n  '\\u{1FB82}': [{ x: 0, y: 0, w: 8, h: 2 }],\n  // UPPER THREE EIGHTHS BLOCK\n  '\\u{1FB83}': [{ x: 0, y: 0, w: 8, h: 3 }],\n  // UPPER FIVE EIGHTHS BLOCK\n  '\\u{1FB84}': [{ x: 0, y: 0, w: 8, h: 5 }],\n  // UPPER THREE QUARTERS BLOCK\n  '\\u{1FB85}': [{ x: 0, y: 0, w: 8, h: 6 }],\n  // UPPER SEVEN EIGHTHS BLOCK\n  '\\u{1FB86}': [{ x: 0, y: 0, w: 8, h: 7 }],\n\n  // RIGHT ONE QUARTER BLOCK\n  '\\u{1FB87}': [{ x: 6, y: 0, w: 2, h: 8 }],\n  // RIGHT THREE EIGHTHS B0OCK\n  '\\u{1FB88}': [{ x: 5, y: 0, w: 3, h: 8 }],\n  // RIGHT FIVE EIGHTHS BL0CK\n  '\\u{1FB89}': [{ x: 3, y: 0, w: 5, h: 8 }],\n  // RIGHT THREE QUARTERS 0LOCK\n  '\\u{1FB8A}': [{ x: 2, y: 0, w: 6, h: 8 }],\n  // RIGHT SEVEN EIGHTHS B0OCK\n  '\\u{1FB8B}': [{ x: 1, y: 0, w: 7, h: 8 }],\n\n  // CHECKER BOARD FILL\n  '\\u{1FB95}': [\n    { x: 0, y: 0, w: 2, h: 2 }, { x: 4, y: 0, w: 2, h: 2 },\n    { x: 2, y: 2, w: 2, h: 2 }, { x: 6, y: 2, w: 2, h: 2 },\n    { x: 0, y: 4, w: 2, h: 2 }, { x: 4, y: 4, w: 2, h: 2 },\n    { x: 2, y: 6, w: 2, h: 2 }, { x: 6, y: 6, w: 2, h: 2 }\n  ],\n  // INVERSE CHECKER BOARD FILL\n  '\\u{1FB96}': [\n    { x: 2, y: 0, w: 2, h: 2 }, { x: 6, y: 0, w: 2, h: 2 },\n    { x: 0, y: 2, w: 2, h: 2 }, { x: 4, y: 2, w: 2, h: 2 },\n    { x: 2, y: 4, w: 2, h: 2 }, { x: 6, y: 4, w: 2, h: 2 },\n    { x: 0, y: 6, w: 2, h: 2 }, { x: 4, y: 6, w: 2, h: 2 }\n  ],\n  // HEAVY HORIZONTAL FILL (upper middle and lower one quarter block)\n  '\\u{1FB97}': [{ x: 0, y: 2, w: 8, h: 2 }, { x: 0, y: 6, w: 8, h: 2 }]\n};\n\ntype PatternDefinition = number[][];\n\n/**\n * Defines the repeating pattern used by special characters, the pattern is made up of a 2d array of\n * pixel values to be filled (1) or not filled (0).\n */\nconst patternCharacterDefinitions: { [key: string]: PatternDefinition | undefined } = {\n  // Shade characters (0x2591-0x2593)\n  '░': [ // LIGHT SHADE (25%)\n    [1, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 1, 0],\n    [0, 0, 0, 0]\n  ],\n  '▒': [ // MEDIUM SHADE (50%)\n    [1, 0],\n    [0, 0],\n    [0, 1],\n    [0, 0]\n  ],\n  '▓': [ // DARK SHADE (75%)\n    [0, 1],\n    [1, 1],\n    [1, 0],\n    [1, 1]\n  ]\n};\n\nconst enum Shapes {\n  /** │ */ TOP_TO_BOTTOM = 'M.5,0 L.5,1',\n  /** ─ */ LEFT_TO_RIGHT = 'M0,.5 L1,.5',\n\n  /** └ */ TOP_TO_RIGHT = 'M.5,0 L.5,.5 L1,.5',\n  /** ┘ */ TOP_TO_LEFT = 'M.5,0 L.5,.5 L0,.5',\n  /** ┐ */ LEFT_TO_BOTTOM = 'M0,.5 L.5,.5 L.5,1',\n  /** ┌ */ RIGHT_TO_BOTTOM = 'M0.5,1 L.5,.5 L1,.5',\n\n  /** ╵ */ MIDDLE_TO_TOP = 'M.5,.5 L.5,0',\n  /** ╴ */ MIDDLE_TO_LEFT = 'M.5,.5 L0,.5',\n  /** ╶ */ MIDDLE_TO_RIGHT = 'M.5,.5 L1,.5',\n  /** ╷ */ MIDDLE_TO_BOTTOM = 'M.5,.5 L.5,1',\n\n  /** ┴ */ T_TOP = 'M0,.5 L1,.5 M.5,.5 L.5,0',\n  /** ┤ */ T_LEFT = 'M.5,0 L.5,1 M.5,.5 L0,.5',\n  /** ├ */ T_RIGHT = 'M.5,0 L.5,1 M.5,.5 L1,.5',\n  /** ┬ */ T_BOTTOM = 'M0,.5 L1,.5 M.5,.5 L.5,1',\n\n  /** ┼ */ CROSS = 'M0,.5 L1,.5 M.5,0 L.5,1',\n\n  /** ╌ */ TWO_DASHES_HORIZONTAL = 'M.1,.5 L.4,.5 M.6,.5 L.9,.5', // .2 empty, .3 filled\n  /** ┄ */ THREE_DASHES_HORIZONTAL = 'M.0667,.5 L.2667,.5 M.4,.5 L.6,.5 M.7333,.5 L.9333,.5', // .1333 empty, .2 filled\n  /** ┉ */ FOUR_DASHES_HORIZONTAL = 'M.05,.5 L.2,.5 M.3,.5 L.45,.5 M.55,.5 L.7,.5 M.8,.5 L.95,.5', // .1 empty, .15 filled\n  /** ╎ */ TWO_DASHES_VERTICAL = 'M.5,.1 L.5,.4 M.5,.6 L.5,.9',\n  /** ┆ */ THREE_DASHES_VERTICAL = 'M.5,.0667 L.5,.2667 M.5,.4 L.5,.6 M.5,.7333 L.5,.9333',\n  /** ┊ */ FOUR_DASHES_VERTICAL = 'M.5,.05 L.5,.2 M.5,.3 L.5,.45 L.5,.55 M.5,.7 L.5,.95',\n}\n\nconst enum Style {\n  NORMAL = 1,\n  BOLD = 3\n}\n\n/**\n * This contains the definitions of all box drawing characters in the format of SVG paths (ie. the\n * svg d attribute).\n */\nexport const boxDrawingDefinitions: { [character: string]: { [fontWeight: number]: string | ((xp: number, yp: number) => string) } | undefined } = {\n  // Uniform normal and bold\n  '─': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT },\n  '━': { [Style.BOLD]:   Shapes.LEFT_TO_RIGHT },\n  '│': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM },\n  '┃': { [Style.BOLD]:   Shapes.TOP_TO_BOTTOM },\n  '┌': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM },\n  '┏': { [Style.BOLD]:   Shapes.RIGHT_TO_BOTTOM },\n  '┐': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM },\n  '┓': { [Style.BOLD]:   Shapes.LEFT_TO_BOTTOM },\n  '└': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT },\n  '┗': { [Style.BOLD]:   Shapes.TOP_TO_RIGHT },\n  '┘': { [Style.NORMAL]: Shapes.TOP_TO_LEFT },\n  '┛': { [Style.BOLD]:   Shapes.TOP_TO_LEFT },\n  '├': { [Style.NORMAL]: Shapes.T_RIGHT },\n  '┣': { [Style.BOLD]:   Shapes.T_RIGHT },\n  '┤': { [Style.NORMAL]: Shapes.T_LEFT },\n  '┫': { [Style.BOLD]:   Shapes.T_LEFT },\n  '┬': { [Style.NORMAL]: Shapes.T_BOTTOM },\n  '┳': { [Style.BOLD]:   Shapes.T_BOTTOM },\n  '┴': { [Style.NORMAL]: Shapes.T_TOP },\n  '┻': { [Style.BOLD]:   Shapes.T_TOP },\n  '┼': { [Style.NORMAL]: Shapes.CROSS },\n  '╋': { [Style.BOLD]:   Shapes.CROSS },\n  '╴': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT },\n  '╸': { [Style.BOLD]:   Shapes.MIDDLE_TO_LEFT },\n  '╵': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP },\n  '╹': { [Style.BOLD]:   Shapes.MIDDLE_TO_TOP },\n  '╶': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT },\n  '╺': { [Style.BOLD]:   Shapes.MIDDLE_TO_RIGHT },\n  '╷': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM },\n  '╻': { [Style.BOLD]:   Shapes.MIDDLE_TO_BOTTOM },\n\n  // Double border\n  '═': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp}` },\n  '║': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1` },\n  '╒': { [Style.NORMAL]: (xp, yp) => `M.5,1 L.5,${.5 - yp} L1,${.5 - yp} M.5,${.5 + yp} L1,${.5 + yp}` },\n  '╓': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},1 L${.5 - xp},.5 L1,.5 M${.5 + xp},.5 L${.5 + xp},1` },\n  '╔': { [Style.NORMAL]: (xp, yp) => `M1,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1` },\n  '╕': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L.5,${.5 - yp} L.5,1 M0,${.5 + yp} L.5,${.5 + yp}` },\n  '╖': { [Style.NORMAL]: (xp, yp) => `M${.5 + xp},1 L${.5 + xp},.5 L0,.5 M${.5 - xp},.5 L${.5 - xp},1` },\n  '╗': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M0,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},1` },\n  '╘': { [Style.NORMAL]: (xp, yp) => `M.5,0 L.5,${.5 + yp} L1,${.5 + yp} M.5,${.5 - yp} L1,${.5 - yp}` },\n  '╙': { [Style.NORMAL]: (xp, yp) => `M1,.5 L${.5 - xp},.5 L${.5 - xp},0 M${.5 + xp},.5 L${.5 + xp},0` },\n  '╚': { [Style.NORMAL]: (xp, yp) => `M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0 M1,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},0` },\n  '╛': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L.5,${.5 + yp} L.5,0 M0,${.5 - yp} L.5,${.5 - yp}` },\n  '╜': { [Style.NORMAL]: (xp, yp) => `M0,.5 L${.5 + xp},.5 L${.5 + xp},0 M${.5 - xp},.5 L${.5 - xp},0` },\n  '╝': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0 M0,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},0` },\n  '╞': { [Style.NORMAL]: (xp, yp) => `${Shapes.TOP_TO_BOTTOM} M.5,${.5 - yp} L1,${.5 - yp} M.5,${.5 + yp} L1,${.5 + yp}` },\n  '╟': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1 M${.5 + xp},.5 L1,.5` },\n  '╠': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},0 L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1 M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0` },\n  '╡': { [Style.NORMAL]: (xp, yp) => `${Shapes.TOP_TO_BOTTOM} M0,${.5 - yp} L.5,${.5 - yp} M0,${.5 + yp} L.5,${.5 + yp}` },\n  '╢': { [Style.NORMAL]: (xp, yp) => `M0,.5 L${.5 - xp},.5 M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1` },\n  '╣': { [Style.NORMAL]: (xp, yp) => `M${.5 + xp},0 L${.5 + xp},1 M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0` },\n  '╤': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp} M.5,${.5 + yp} L.5,1` },\n  '╥': { [Style.NORMAL]: (xp, yp) => `${Shapes.LEFT_TO_RIGHT} M${.5 - xp},.5 L${.5 - xp},1 M${.5 + xp},.5 L${.5 + xp},1` },\n  '╦': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1` },\n  '╧': { [Style.NORMAL]: (xp, yp) => `M.5,0 L.5,${.5 - yp} M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp}` },\n  '╨': { [Style.NORMAL]: (xp, yp) => `${Shapes.LEFT_TO_RIGHT} M${.5 - xp},.5 L${.5 - xp},0 M${.5 + xp},.5 L${.5 + xp},0` },\n  '╩': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L1,${.5 + yp} M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0 M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0` },\n  '╪': { [Style.NORMAL]: (xp, yp) => `${Shapes.TOP_TO_BOTTOM} M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp}` },\n  '╫': { [Style.NORMAL]: (xp, yp) => `${Shapes.LEFT_TO_RIGHT} M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1` },\n  '╬': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1 M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0 M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0` },\n\n  // Diagonal\n  '╱': { [Style.NORMAL]: 'M1,0 L0,1' },\n  '╲': { [Style.NORMAL]: 'M0,0 L1,1' },\n  '╳': { [Style.NORMAL]: 'M1,0 L0,1 M0,0 L1,1' },\n\n  // Mixed weight\n  '╼': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '╽': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '╾': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '╿': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┍': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┎': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┑': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┒': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┕': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┖': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┙': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┚': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┝': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM,                                 [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┞': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM,                               [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┟': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT,                                  [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┠': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.TOP_TO_BOTTOM },\n  '┡': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.TOP_TO_RIGHT },\n  '┢': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.RIGHT_TO_BOTTOM },\n  '┥': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM,                                 [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┦': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM,                                [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┧': { [Style.NORMAL]: Shapes.TOP_TO_LEFT,                                   [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┨': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.TOP_TO_BOTTOM },\n  '┩': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.TOP_TO_LEFT },\n  '┪': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.LEFT_TO_BOTTOM },\n  '┭': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM,                               [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┮': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM,                                [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┯': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.LEFT_TO_RIGHT },\n  '┰': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT,                                 [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┱': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.LEFT_TO_BOTTOM },\n  '┲': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.RIGHT_TO_BOTTOM },\n  '┵': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT,                                  [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┶': { [Style.NORMAL]: Shapes.TOP_TO_LEFT,                                   [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┷': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.LEFT_TO_RIGHT },\n  '┸': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT,                                 [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┹': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.TOP_TO_LEFT },\n  '┺': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.TOP_TO_RIGHT },\n  '┽': { [Style.NORMAL]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_RIGHT}`,  [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┾': { [Style.NORMAL]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_LEFT}`,   [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┿': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM,                                 [Style.BOLD]: Shapes.LEFT_TO_RIGHT },\n  '╀': { [Style.NORMAL]: `${Shapes.LEFT_TO_RIGHT} ${Shapes.MIDDLE_TO_BOTTOM}`, [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '╁': { [Style.NORMAL]: `${Shapes.MIDDLE_TO_TOP} ${Shapes.LEFT_TO_RIGHT}`,    [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '╂': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT,                                 [Style.BOLD]: Shapes.TOP_TO_BOTTOM },\n  '╃': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM,                               [Style.BOLD]: Shapes.TOP_TO_LEFT },\n  '╄': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM,                                [Style.BOLD]: Shapes.TOP_TO_RIGHT },\n  '╅': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT,                                  [Style.BOLD]: Shapes.LEFT_TO_BOTTOM },\n  '╆': { [Style.NORMAL]: Shapes.TOP_TO_LEFT,                                   [Style.BOLD]: Shapes.RIGHT_TO_BOTTOM },\n  '╇': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: `${Shapes.MIDDLE_TO_TOP} ${Shapes.LEFT_TO_RIGHT}` },\n  '╈': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: `${Shapes.LEFT_TO_RIGHT} ${Shapes.MIDDLE_TO_BOTTOM}` },\n  '╉': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_LEFT}` },\n  '╊': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_RIGHT}` },\n\n  // Dashed\n  '╌': { [Style.NORMAL]: Shapes.TWO_DASHES_HORIZONTAL },\n  '╍': { [Style.BOLD]:   Shapes.TWO_DASHES_HORIZONTAL },\n  '┄': { [Style.NORMAL]: Shapes.THREE_DASHES_HORIZONTAL },\n  '┅': { [Style.BOLD]:   Shapes.THREE_DASHES_HORIZONTAL },\n  '┈': { [Style.NORMAL]: Shapes.FOUR_DASHES_HORIZONTAL },\n  '┉': { [Style.BOLD]:   Shapes.FOUR_DASHES_HORIZONTAL },\n  '╎': { [Style.NORMAL]: Shapes.TWO_DASHES_VERTICAL },\n  '╏': { [Style.BOLD]:   Shapes.TWO_DASHES_VERTICAL },\n  '┆': { [Style.NORMAL]: Shapes.THREE_DASHES_VERTICAL  },\n  '┇': { [Style.BOLD]:   Shapes.THREE_DASHES_VERTICAL },\n  '┊': { [Style.NORMAL]: Shapes.FOUR_DASHES_VERTICAL },\n  '┋': { [Style.BOLD]:   Shapes.FOUR_DASHES_VERTICAL },\n\n  // Curved\n  '╭': { [Style.NORMAL]: 'C.5,1,.5,.5,1,.5' },\n  '╮': { [Style.NORMAL]: 'C.5,1,.5,.5,0,.5' },\n  '╯': { [Style.NORMAL]: 'C.5,0,.5,.5,0,.5' },\n  '╰': { [Style.NORMAL]: 'C.5,0,.5,.5,1,.5' }\n};\n\ninterface IVectorShape {\n  d: string;\n  type: VectorType;\n  /** Padding to apply to the vector's x axis in CSS pixels. */\n  horizontalPadding?: number;\n}\n\nconst enum VectorType {\n  FILL,\n  STROKE\n}\n\n/**\n * This contains the definitions of the primarily used box drawing characters as vector shapes. The\n * reason these characters are defined specially is to avoid common problems if a user's font has\n * not been patched with powerline characters and also to get pixel perfect rendering as rendering\n * issues can occur around AA/SPAA.\n *\n * Original symbols defined in https://github.com/powerline/fontpatcher\n */\nexport const powerlineDefinitions: { [index: string]: IVectorShape } = {\n  // Right triangle solid\n  '\\u{E0B0}': { d: 'M0,0 L1,.5 L0,1', type: VectorType.FILL },\n  // Right triangle line\n  '\\u{E0B1}': { d: 'M0,0 L1,.5 L0,1', type: VectorType.STROKE, horizontalPadding: 0.5 },\n  // Left triangle solid\n  '\\u{E0B2}': { d: 'M1,0 L0,.5 L1,1', type: VectorType.FILL },\n  // Left triangle line\n  '\\u{E0B3}': { d: 'M1,0 L0,.5 L1,1', type: VectorType.STROKE, horizontalPadding: 0.5 }\n};\n\n/**\n * Try drawing a custom block element or box drawing character, returning whether it was\n * successfully drawn.\n */\nexport function tryDrawCustomChar(\n  ctx: CanvasRenderingContext2D,\n  c: string,\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number\n): boolean {\n  const blockElementDefinition = blockElementDefinitions[c];\n  if (blockElementDefinition) {\n    drawBlockElementChar(ctx, blockElementDefinition, xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n    return true;\n  }\n\n  const patternDefinition = patternCharacterDefinitions[c];\n  if (patternDefinition) {\n    drawPatternChar(ctx, patternDefinition, xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n    return true;\n  }\n\n  const boxDrawingDefinition = boxDrawingDefinitions[c];\n  if (boxDrawingDefinition) {\n    drawBoxDrawingChar(ctx, boxDrawingDefinition, xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n    return true;\n  }\n\n  const powerlineDefinition = powerlineDefinitions[c];\n  if (powerlineDefinition) {\n    drawPowerlineChar(ctx, powerlineDefinition, xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n    return true;\n  }\n\n  return false;\n}\n\nfunction drawBlockElementChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: IBlockVector[],\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number\n): void {\n  for (let i = 0; i < charDefinition.length; i++) {\n    const box = charDefinition[i];\n    const xEighth = scaledCellWidth / 8;\n    const yEighth = scaledCellHeight / 8;\n    ctx.fillRect(\n      xOffset + box.x * xEighth,\n      yOffset + box.y * yEighth,\n      box.w * xEighth,\n      box.h * yEighth\n    );\n  }\n}\n\nconst cachedPatterns: Map<PatternDefinition, Map</* fillStyle */string, CanvasPattern>> = new Map();\n\nfunction drawPatternChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: number[][],\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number\n): void {\n  let patternSet = cachedPatterns.get(charDefinition);\n  if (!patternSet) {\n    patternSet = new Map();\n    cachedPatterns.set(charDefinition, patternSet);\n  }\n  const fillStyle = ctx.fillStyle;\n  if (typeof fillStyle !== 'string') {\n    throw new Error(`Unexpected fillStyle type \"${fillStyle}\"`);\n  }\n  let pattern = patternSet.get(fillStyle);\n  if (!pattern) {\n    const width = charDefinition[0].length;\n    const height = charDefinition.length;\n    const tmpCanvas = document.createElement('canvas');\n    tmpCanvas.width = width;\n    tmpCanvas.height = height;\n    const tmpCtx = throwIfFalsy(tmpCanvas.getContext('2d'));\n    const imageData = new ImageData(width, height);\n\n    // Extract rgba from fillStyle\n    let r: number;\n    let g: number;\n    let b: number;\n    let a: number;\n    if (fillStyle.startsWith('#')) {\n      r = parseInt(fillStyle.slice(1, 3), 16);\n      g = parseInt(fillStyle.slice(3, 5), 16);\n      b = parseInt(fillStyle.slice(5, 7), 16);\n      a = fillStyle.length > 7 && parseInt(fillStyle.slice(7, 9), 16) || 1;\n    } else if (fillStyle.startsWith('rgba')) {\n      ([r, g, b, a] = fillStyle.substring(5, fillStyle.length - 1).split(',').map(e => parseFloat(e)));\n    } else {\n      throw new Error(`Unexpected fillStyle color format \"${fillStyle}\" when drawing pattern glyph`);\n    }\n\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        imageData.data[(y * width + x) * 4    ] = r;\n        imageData.data[(y * width + x) * 4 + 1] = g;\n        imageData.data[(y * width + x) * 4 + 2] = b;\n        imageData.data[(y * width + x) * 4 + 3] = charDefinition[y][x] * (a * 255);\n      }\n    }\n    tmpCtx.putImageData(imageData, 0, 0);\n    pattern = throwIfFalsy(ctx.createPattern(tmpCanvas, null));\n    patternSet.set(fillStyle, pattern);\n  }\n  ctx.fillStyle = pattern;\n  ctx.fillRect(xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n}\n\n/**\n * Draws the following box drawing characters by mapping a subset of SVG d attribute instructions to\n * canvas draw calls.\n *\n * Box styles:       ┎┰┒┍┯┑╓╥╖╒╤╕ ┏┳┓┌┲┓┌┬┐┏┱┐\n * ┌─┬─┐ ┏━┳━┓ ╔═╦═╗ ┠╂┨┝┿┥╟╫╢╞╪╡ ┡╇┩├╊┫┢╈┪┣╉┤\n * │ │ │ ┃ ┃ ┃ ║ ║ ║ ┖┸┚┕┷┙╙╨╜╘╧╛ └┴┘└┺┛┗┻┛┗┹┘\n * ├─┼─┤ ┣━╋━┫ ╠═╬═╣ ┏┱┐┌┲┓┌┬┐┌┬┐ ┏┳┓┌┮┓┌┬┐┏┭┐\n * │ │ │ ┃ ┃ ┃ ║ ║ ║ ┡╃┤├╄┩├╆┪┢╅┤ ┞╀┦├┾┫┟╁┧┣┽┤\n * └─┴─┘ ┗━┻━┛ ╚═╩═╝ └┴┘└┴┘└┺┛┗┹┘ └┴┘└┶┛┗┻┛┗┵┘\n *\n * Other:\n * ╭─╮ ╲ ╱ ╷╻╎╏┆┇┊┋ ╺╾╴ ╌╌╌ ┄┄┄ ┈┈┈\n * │ │  ╳  ╽╿╎╏┆┇┊┋ ╶╼╸ ╍╍╍ ┅┅┅ ┉┉┉\n * ╰─╯ ╱ ╲ ╹╵╎╏┆┇┊┋\n *\n * All box drawing characters:\n * ─ ━ │ ┃ ┄ ┅ ┆ ┇ ┈ ┉ ┊ ┋ ┌ ┍ ┎ ┏\n * ┐ ┑ ┒ ┓ └ ┕ ┖ ┗ ┘ ┙ ┚ ┛ ├ ┝ ┞ ┟\n * ┠ ┡ ┢ ┣ ┤ ┥ ┦ ┧ ┨ ┩ ┪ ┫ ┬ ┭ ┮ ┯\n * ┰ ┱ ┲ ┳ ┴ ┵ ┶ ┷ ┸ ┹ ┺ ┻ ┼ ┽ ┾ ┿\n * ╀ ╁ ╂ ╃ ╄ ╅ ╆ ╇ ╈ ╉ ╊ ╋ ╌ ╍ ╎ ╏\n * ═ ║ ╒ ╓ ╔ ╕ ╖ ╗ ╘ ╙ ╚ ╛ ╜ ╝ ╞ ╟\n * ╠ ╡ ╢ ╣ ╤ ╥ ╦ ╧ ╨ ╩ ╪ ╫ ╬ ╭ ╮ ╯\n * ╰ ╱ ╲ ╳ ╴ ╵ ╶ ╷ ╸ ╹ ╺ ╻ ╼ ╽ ╾ ╿\n *\n * ---\n *\n * Box drawing alignment tests:                                          █\n *                                                                       ▉\n *   ╔══╦══╗  ┌──┬──┐  ╭──┬──╮  ╭──┬──╮  ┏━━┳━━┓  ┎┒┏┑   ╷  ╻ ┏┯┓ ┌┰┐    ▊ ╱╲╱╲╳╳╳\n *   ║┌─╨─┐║  │╔═╧═╗│  │╒═╪═╕│  │╓─╁─╖│  ┃┌─╂─┐┃  ┗╃╄┙  ╶┼╴╺╋╸┠┼┨ ┝╋┥    ▋ ╲╱╲╱╳╳╳\n *   ║│╲ ╱│║  │║   ║│  ││ │ ││  │║ ┃ ║│  ┃│ ╿ │┃  ┍╅╆┓   ╵  ╹ ┗┷┛ └┸┘    ▌ ╱╲╱╲╳╳╳\n *   ╠╡ ╳ ╞╣  ├╢   ╟┤  ├┼─┼─┼┤  ├╫─╂─╫┤  ┣┿╾┼╼┿┫  ┕┛┖┚     ┌┄┄┐ ╎ ┏┅┅┓ ┋ ▍ ╲╱╲╱╳╳╳\n *   ║│╱ ╲│║  │║   ║│  ││ │ ││  │║ ┃ ║│  ┃│ ╽ │┃  ░░▒▒▓▓██ ┊  ┆ ╎ ╏  ┇ ┋ ▎\n *   ║└─╥─┘║  │╚═╤═╝│  │╘═╪═╛│  │╙─╀─╜│  ┃└─╂─┘┃  ░░▒▒▓▓██ ┊  ┆ ╎ ╏  ┇ ┋ ▏\n *   ╚══╩══╝  └──┴──┘  ╰──┴──╯  ╰──┴──╯  ┗━━┻━━┛           └╌╌┘ ╎ ┗╍╍┛ ┋  ▁▂▃▄▅▆▇█\n *\n * Source: https://www.w3.org/2001/06/utf-8-test/UTF-8-demo.html\n */\nfunction drawBoxDrawingChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: { [fontWeight: number]: string | ((xp: number, yp: number) => string) },\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number\n): void {\n  ctx.strokeStyle = ctx.fillStyle;\n  for (const [fontWeight, instructions] of Object.entries(charDefinition)) {\n    ctx.beginPath();\n    ctx.lineWidth = window.devicePixelRatio * Number.parseInt(fontWeight);\n    let actualInstructions: string;\n    if (typeof instructions === 'function') {\n      const xp = .15;\n      const yp = .15 / scaledCellHeight * scaledCellWidth;\n      actualInstructions = instructions(xp, yp);\n    } else {\n      actualInstructions = instructions;\n    }\n    for (const instruction of actualInstructions.split(' ')) {\n      const type = instruction[0];\n      const f = svgToCanvasInstructionMap[type];\n      if (!f) {\n        console.error(`Could not find drawing instructions for \"${type}\"`);\n        continue;\n      }\n      const args: string[] = instruction.substring(1).split(',');\n      if (!args[0] || !args[1]) {\n        continue;\n      }\n      f(ctx, translateArgs(args, scaledCellWidth, scaledCellHeight, xOffset, yOffset));\n    }\n    ctx.stroke();\n    ctx.closePath();\n  }\n}\n\nfunction drawPowerlineChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: IVectorShape,\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number\n): void {\n  ctx.beginPath();\n  ctx.lineWidth = window.devicePixelRatio;\n  for (const instruction of charDefinition.d.split(' ')) {\n    const type = instruction[0];\n    const f = svgToCanvasInstructionMap[type];\n    if (!f) {\n      console.error(`Could not find drawing instructions for \"${type}\"`);\n      continue;\n    }\n    const args: string[] = instruction.substring(1).split(',');\n    if (!args[0] || !args[1]) {\n      continue;\n    }\n    f(ctx, translateArgs(args, scaledCellWidth, scaledCellHeight, xOffset, yOffset, charDefinition.horizontalPadding));\n  }\n  if (charDefinition.type === VectorType.STROKE) {\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.stroke();\n  } else {\n    ctx.fill();\n  }\n  ctx.closePath();\n}\n\nfunction clamp(value: number, max: number, min: number = 0): number {\n  return Math.max(Math.min(value, max), min);\n}\n\nconst svgToCanvasInstructionMap: { [index: string]: any } = {\n  'C': (ctx: CanvasRenderingContext2D, args: number[]) => ctx.bezierCurveTo(args[0], args[1], args[2], args[3], args[4], args[5]),\n  'L': (ctx: CanvasRenderingContext2D, args: number[]) => ctx.lineTo(args[0], args[1]),\n  'M': (ctx: CanvasRenderingContext2D, args: number[]) => ctx.moveTo(args[0], args[1])\n};\n\nfunction translateArgs(args: string[], cellWidth: number, cellHeight: number, xOffset: number, yOffset: number, horizontalPadding: number = 0): number[] {\n  const result = args.map(e => parseFloat(e) || parseInt(e));\n\n  if (result.length < 2) {\n    throw new Error('Too few arguments for instruction');\n  }\n\n  for (let x = 0; x < result.length; x += 2) {\n    // Translate from 0-1 to 0-cellWidth\n    result[x] *= cellWidth - (horizontalPadding * 2 * window.devicePixelRatio);\n    // Ensure coordinate doesn't escape cell bounds and round to the nearest 0.5 to ensure a crisp\n    // line at 100% devicePixelRatio\n    if (result[x] !== 0) {\n      result[x] = clamp(Math.round(result[x] + 0.5) - 0.5, cellWidth, 0);\n    }\n    // Apply the cell's offset (ie. x*cellWidth)\n    result[x] += xOffset + (horizontalPadding * window.devicePixelRatio);\n  }\n\n  for (let y = 1; y < result.length; y += 2) {\n    // Translate from 0-1 to 0-cellHeight\n    result[y] *= cellHeight;\n    // Ensure coordinate doesn't escape cell bounds and round to the nearest 0.5 to ensure a crisp\n    // line at 100% devicePixelRatio\n    if (result[y] !== 0) {\n      result[y] = clamp(Math.round(result[y] + 0.5) - 0.5, cellHeight, 0);\n    }\n    // Apply the cell's offset (ie. x*cellHeight)\n    result[y] += yOffset;\n  }\n\n  return result;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport class GridCache<T> {\n  public cache: (T | undefined)[][];\n\n  public constructor() {\n    this.cache = [];\n  }\n\n  public resize(width: number, height: number): void {\n    for (let x = 0; x < width; x++) {\n      if (this.cache.length <= x) {\n        this.cache.push([]);\n      }\n      for (let y = this.cache[x].length; y < height; y++) {\n        this.cache[x].push(undefined);\n      }\n      this.cache[x].length = height;\n    }\n    this.cache.length = width;\n  }\n\n  public clear(): void {\n    for (let x = 0; x < this.cache.length; x++) {\n      for (let y = 0; y < this.cache[x].length; y++) {\n        this.cache[x][y] = undefined;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from './BaseRenderLayer';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { is256Color } from 'browser/renderer/atlas/CharAtlasUtils';\nimport { IColorSet, ILinkifierEvent, ILinkifier, ILinkifier2 } from 'browser/Types';\nimport { IBufferService, IDecorationService, IOptionsService } from 'common/services/Services';\n\nexport class LinkRenderLayer extends BaseRenderLayer {\n  private _state: ILinkifierEvent | undefined;\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    rendererId: number,\n    linkifier: ILinkifier,\n    linkifier2: ILinkifier2,\n    @IBufferService bufferService: IBufferService,\n    @IOptionsService optionsService: IOptionsService,\n    @IDecorationService decorationService: IDecorationService\n  ) {\n    super(container, 'link', zIndex, true, colors, rendererId, bufferService, optionsService, decorationService);\n    linkifier.onShowLinkUnderline(e => this._onShowLinkUnderline(e));\n    linkifier.onHideLinkUnderline(e => this._onHideLinkUnderline(e));\n\n    linkifier2.onShowLinkUnderline(e => this._onShowLinkUnderline(e));\n    linkifier2.onHideLinkUnderline(e => this._onHideLinkUnderline(e));\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = undefined;\n  }\n\n  public reset(): void {\n    this._clearCurrentLink();\n  }\n\n  private _clearCurrentLink(): void {\n    if (this._state) {\n      this._clearCells(this._state.x1, this._state.y1, this._state.cols - this._state.x1, 1);\n      const middleRowCount = this._state.y2 - this._state.y1 - 1;\n      if (middleRowCount > 0) {\n        this._clearCells(0, this._state.y1 + 1, this._state.cols, middleRowCount);\n      }\n      this._clearCells(0, this._state.y2, this._state.x2, 1);\n      this._state = undefined;\n    }\n  }\n\n  private _onShowLinkUnderline(e: ILinkifierEvent): void {\n    if (e.fg === INVERTED_DEFAULT_COLOR) {\n      this._ctx.fillStyle = this._colors.background.css;\n    } else if (e.fg && is256Color(e.fg)) {\n      // 256 color support\n      this._ctx.fillStyle = this._colors.ansi[e.fg].css;\n    } else {\n      this._ctx.fillStyle = this._colors.foreground.css;\n    }\n\n    if (e.y1 === e.y2) {\n      // Single line link\n      this._fillBottomLineAtCells(e.x1, e.y1, e.x2 - e.x1);\n    } else {\n      // Multi-line link\n      this._fillBottomLineAtCells(e.x1, e.y1, e.cols - e.x1);\n      for (let y = e.y1 + 1; y < e.y2; y++) {\n        this._fillBottomLineAtCells(0, y, e.cols);\n      }\n      this._fillBottomLineAtCells(0, e.y2, e.x2);\n    }\n    this._state = e;\n  }\n\n  private _onHideLinkUnderline(e: ILinkifierEvent): void {\n    this._clearCurrentLink();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { TextRenderLayer } from 'browser/renderer/TextRenderLayer';\nimport { SelectionRenderLayer } from 'browser/renderer/SelectionRenderLayer';\nimport { CursorRenderLayer } from 'browser/renderer/CursorRenderLayer';\nimport { IRenderLayer, IRenderer, IRenderDimensions, IRequestRedrawEvent } from 'browser/renderer/Types';\nimport { LinkRenderLayer } from 'browser/renderer/LinkRenderLayer';\nimport { Disposable } from 'common/Lifecycle';\nimport { IColorSet, ILinkifier, ILinkifier2 } from 'browser/Types';\nimport { ICharSizeService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService, IInstantiationService } from 'common/services/Services';\nimport { removeTerminalFromCache } from 'browser/renderer/atlas/CharAtlasCache';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\n\nlet nextRendererId = 1;\n\nexport class Renderer extends Disposable implements IRenderer {\n  private _id = nextRendererId++;\n\n  private _renderLayers: IRenderLayer[];\n  private _devicePixelRatio: number;\n\n  public dimensions: IRenderDimensions;\n\n  private _onRequestRedraw = new EventEmitter<IRequestRedrawEvent>();\n  public get onRequestRedraw(): IEvent<IRequestRedrawEvent> { return this._onRequestRedraw.event; }\n\n  constructor(\n    private _colors: IColorSet,\n    private readonly _screenElement: HTMLElement,\n    linkifier: ILinkifier,\n    linkifier2: ILinkifier2,\n    @IInstantiationService instantiationService: IInstantiationService,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    const allowTransparency = this._optionsService.rawOptions.allowTransparency;\n    this._renderLayers = [\n      instantiationService.createInstance(TextRenderLayer, this._screenElement, 0, this._colors, allowTransparency, this._id),\n      instantiationService.createInstance(SelectionRenderLayer, this._screenElement, 1, this._colors, this._id),\n      instantiationService.createInstance(LinkRenderLayer, this._screenElement, 2, this._colors, this._id, linkifier, linkifier2),\n      instantiationService.createInstance(CursorRenderLayer, this._screenElement, 3, this._colors, this._id, this._onRequestRedraw)\n    ];\n    this.dimensions = {\n      scaledCharWidth: 0,\n      scaledCharHeight: 0,\n      scaledCellWidth: 0,\n      scaledCellHeight: 0,\n      scaledCharLeft: 0,\n      scaledCharTop: 0,\n      scaledCanvasWidth: 0,\n      scaledCanvasHeight: 0,\n      canvasWidth: 0,\n      canvasHeight: 0,\n      actualCellWidth: 0,\n      actualCellHeight: 0\n    };\n    this._devicePixelRatio = window.devicePixelRatio;\n    this._updateDimensions();\n    this.onOptionsChanged();\n  }\n\n  public dispose(): void {\n    for (const l of this._renderLayers) {\n      l.dispose();\n    }\n    super.dispose();\n    removeTerminalFromCache(this._id);\n  }\n\n  public onDevicePixelRatioChange(): void {\n    // If the device pixel ratio changed, the char atlas needs to be regenerated\n    // and the terminal needs to refreshed\n    if (this._devicePixelRatio !== window.devicePixelRatio) {\n      this._devicePixelRatio = window.devicePixelRatio;\n      this.onResize(this._bufferService.cols, this._bufferService.rows);\n    }\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n    // Clear layers and force a full render\n    for (const l of this._renderLayers) {\n      l.setColors(this._colors);\n      l.reset();\n    }\n  }\n\n  public onResize(cols: number, rows: number): void {\n    // Update character and canvas dimensions\n    this._updateDimensions();\n\n    // Resize all render layers\n    for (const l of this._renderLayers) {\n      l.resize(this.dimensions);\n    }\n\n    // Resize the screen\n    this._screenElement.style.width = `${this.dimensions.canvasWidth}px`;\n    this._screenElement.style.height = `${this.dimensions.canvasHeight}px`;\n  }\n\n  public onCharSizeChanged(): void {\n    this.onResize(this._bufferService.cols, this._bufferService.rows);\n  }\n\n  public onBlur(): void {\n    this._runOperation(l => l.onBlur());\n  }\n\n  public onFocus(): void {\n    this._runOperation(l => l.onFocus());\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean = false): void {\n    this._runOperation(l => l.onSelectionChanged(start, end, columnSelectMode));\n    // Selection foreground requires a full re-render\n    if (this._colors.selectionForeground) {\n      this._onRequestRedraw.fire({ start: 0, end: this._bufferService.rows - 1 });\n    }\n  }\n\n  public onCursorMove(): void {\n    this._runOperation(l => l.onCursorMove());\n  }\n\n  public onOptionsChanged(): void {\n    this._runOperation(l => l.onOptionsChanged());\n  }\n\n  public clear(): void {\n    this._runOperation(l => l.reset());\n  }\n\n  private _runOperation(operation: (layer: IRenderLayer) => void): void {\n    for (const l of this._renderLayers) {\n      operation(l);\n    }\n  }\n\n  /**\n   * Performs the refresh loop callback, calling refresh only if a refresh is\n   * necessary before queueing up the next one.\n   */\n  public renderRows(start: number, end: number): void {\n    for (const l of this._renderLayers) {\n      l.onGridChanged(start, end);\n    }\n  }\n\n  public clearTextureAtlas(): void {\n    for (const layer of this._renderLayers) {\n      layer.clearTextureAtlas();\n    }\n  }\n\n  /**\n   * Recalculates the character and canvas dimensions.\n   */\n  private _updateDimensions(): void {\n    if (!this._charSizeService.hasValidSize) {\n      return;\n    }\n\n    // Calculate the scaled character width. Width is floored as it must be\n    // drawn to an integer grid in order for the CharAtlas \"stamps\" to not be\n    // blurry. When text is drawn to the grid not using the CharAtlas, it is\n    // clipped to ensure there is no overlap with the next cell.\n    this.dimensions.scaledCharWidth = Math.floor(this._charSizeService.width * window.devicePixelRatio);\n\n    // Calculate the scaled character height. Height is ceiled in case\n    // devicePixelRatio is a floating point number in order to ensure there is\n    // enough space to draw the character to the cell.\n    this.dimensions.scaledCharHeight = Math.ceil(this._charSizeService.height * window.devicePixelRatio);\n\n    // Calculate the scaled cell height, if lineHeight is not 1 then the value\n    // will be floored because since lineHeight can never be lower then 1, there\n    // is a guarentee that the scaled line height will always be larger than\n    // scaled char height.\n    this.dimensions.scaledCellHeight = Math.floor(this.dimensions.scaledCharHeight * this._optionsService.rawOptions.lineHeight);\n\n    // Calculate the y coordinate within a cell that text should draw from in\n    // order to draw in the center of a cell.\n    this.dimensions.scaledCharTop = this._optionsService.rawOptions.lineHeight === 1 ? 0 : Math.round((this.dimensions.scaledCellHeight - this.dimensions.scaledCharHeight) / 2);\n\n    // Calculate the scaled cell width, taking the letterSpacing into account.\n    this.dimensions.scaledCellWidth = this.dimensions.scaledCharWidth + Math.round(this._optionsService.rawOptions.letterSpacing);\n\n    // Calculate the x coordinate with a cell that text should draw from in\n    // order to draw in the center of a cell.\n    this.dimensions.scaledCharLeft = Math.floor(this._optionsService.rawOptions.letterSpacing / 2);\n\n    // Recalculate the canvas dimensions; scaled* define the actual number of\n    // pixel in the canvas\n    this.dimensions.scaledCanvasHeight = this._bufferService.rows * this.dimensions.scaledCellHeight;\n    this.dimensions.scaledCanvasWidth = this._bufferService.cols * this.dimensions.scaledCellWidth;\n\n    // The the size of the canvas on the page. It's very important that this\n    // rounds to nearest integer and not ceils as browsers often set\n    // window.devicePixelRatio as something like 1.100000023841858, when it's\n    // actually 1.1. Ceiling causes blurriness as the backing canvas image is 1\n    // pixel too large for the canvas element size.\n    this.dimensions.canvasHeight = Math.round(this.dimensions.scaledCanvasHeight / window.devicePixelRatio);\n    this.dimensions.canvasWidth = Math.round(this.dimensions.scaledCanvasWidth / window.devicePixelRatio);\n\n    // Get the _actual_ dimensions of an individual cell. This needs to be\n    // derived from the canvasWidth/Height calculated above which takes into\n    // account window.devicePixelRatio. ICharSizeService.width/height by itself\n    // is insufficient when the page is not at 100% zoom level as it's measured\n    // in CSS pixels, but the actual char size on the canvas can differ.\n    this.dimensions.actualCellHeight = this.dimensions.canvasHeight / this._bufferService.rows;\n    this.dimensions.actualCellWidth = this.dimensions.canvasWidth / this._bufferService.cols;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function throwIfFalsy<T>(value: T | undefined | null): T {\n  if (!value) {\n    throw new Error('value must not be falsy');\n  }\n  return value;\n}\n\nexport function isPowerlineGlyph(codepoint: number): boolean {\n  // Only return true for Powerline symbols which require\n  // different padding and should be excluded from minimum contrast\n  // ratio standards\n  return 0xE0A4 <= codepoint && codepoint <=  0xE0D6;\n}\n\nfunction isBoxOrBlockGlyph(codepoint: number): boolean {\n  return (0x2500 <= codepoint && codepoint <= 0x259F);\n}\n\nexport function excludeFromContrastRatioDemands(codepoint: number): boolean {\n  return isPowerlineGlyph(codepoint) || isBoxOrBlockGlyph(codepoint);\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from 'browser/renderer/BaseRenderLayer';\nimport { IColorSet } from 'browser/Types';\nimport { IBufferService, IDecorationService, IOptionsService } from 'common/services/Services';\n\ninterface ISelectionState {\n  start?: [number, number];\n  end?: [number, number];\n  columnSelectMode?: boolean;\n  ydisp?: number;\n}\n\nexport class SelectionRenderLayer extends BaseRenderLayer {\n  private _state!: ISelectionState;\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    rendererId: number,\n    @IBufferService bufferService: IBufferService,\n    @IOptionsService optionsService: IOptionsService,\n    @IDecorationService decorationService: IDecorationService\n  ) {\n    super(container, 'selection', zIndex, true, colors, rendererId, bufferService, optionsService, decorationService);\n    this._clearState();\n  }\n\n  private _clearState(): void {\n    this._state = {\n      start: undefined,\n      end: undefined,\n      columnSelectMode: undefined,\n      ydisp: undefined\n    };\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._clearState();\n  }\n\n  public reset(): void {\n    if (this._state.start && this._state.end) {\n      this._clearState();\n      this._clearAll();\n    }\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    super.onSelectionChanged(start, end, columnSelectMode);\n\n    // Selection has not changed\n    if (!this._didStateChange(start, end, columnSelectMode, this._bufferService.buffer.ydisp)) {\n      return;\n    }\n\n    // Remove all selections\n    this._clearAll();\n\n    // Selection does not exist\n    if (!start || !end) {\n      this._clearState();\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      this._state.ydisp = this._bufferService.buffer.ydisp;\n      return;\n    }\n\n    this._ctx.fillStyle = this._colors.selectionTransparent.css;\n\n    if (columnSelectMode) {\n      const startCol = start[0];\n      const width = end[0] - startCol;\n      const height = viewportCappedEndRow - viewportCappedStartRow + 1;\n      this._fillCells(startCol, viewportCappedStartRow, width, height);\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const startRowEndCol = viewportCappedStartRow === viewportEndRow ? end[0] : this._bufferService.cols;\n      this._fillCells(startCol, viewportCappedStartRow, startRowEndCol - startCol, 1);\n\n      // Draw middle rows\n      const middleRowsCount = Math.max(viewportCappedEndRow - viewportCappedStartRow - 1, 0);\n      this._fillCells(0, viewportCappedStartRow + 1, this._bufferService.cols, middleRowsCount);\n\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewportStartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        this._fillCells(0, viewportCappedEndRow, endCol, 1);\n      }\n    }\n\n    // Save state for next render\n    this._state.start = [start[0], start[1]];\n    this._state.end = [end[0], end[1]];\n    this._state.columnSelectMode = columnSelectMode;\n    this._state.ydisp = this._bufferService.buffer.ydisp;\n  }\n\n  private _didStateChange(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean, ydisp: number): boolean {\n    return !this._areCoordinatesEqual(start, this._state.start) ||\n      !this._areCoordinatesEqual(end, this._state.end) ||\n      columnSelectMode !== this._state.columnSelectMode ||\n      ydisp !== this._state.ydisp;\n  }\n\n  private _areCoordinatesEqual(coord1: [number, number] | undefined, coord2: [number, number] | undefined): boolean {\n    if (!coord1 || !coord2) {\n      return false;\n    }\n\n    return coord1[0] === coord2[0] && coord1[1] === coord2[1];\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { CharData, ICellData } from 'common/Types';\nimport { GridCache } from 'browser/renderer/GridCache';\nimport { BaseRenderLayer } from 'browser/renderer/BaseRenderLayer';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { NULL_CELL_CODE, Content } from 'common/buffer/Constants';\nimport { IColorSet } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IOptionsService, IBufferService, IDecorationService } from 'common/services/Services';\nimport { ICharacterJoinerService } from 'browser/services/Services';\nimport { JoinedCellData } from 'browser/services/CharacterJoinerService';\n\n/**\n * This CharData looks like a null character, which will forc a clear and render\n * when the character changes (a regular space ' ' character may not as it's\n * drawn state is a cleared cell).\n */\n// const OVERLAP_OWNED_CHAR_DATA: CharData = [null, '', 0, -1];\n\nexport class TextRenderLayer extends BaseRenderLayer {\n  private _state: GridCache<CharData>;\n  private _characterWidth: number = 0;\n  private _characterFont: string = '';\n  private _characterOverlapCache: { [key: string]: boolean } = {};\n  private _workCell = new CellData();\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    alpha: boolean,\n    rendererId: number,\n    @IBufferService bufferService: IBufferService,\n    @IOptionsService optionsService: IOptionsService,\n    @ICharacterJoinerService private readonly _characterJoinerService: ICharacterJoinerService,\n    @IDecorationService decorationService: IDecorationService\n  ) {\n    super(container, 'text', zIndex, alpha, colors, rendererId, bufferService, optionsService, decorationService);\n    this._state = new GridCache<CharData>();\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n\n    // Clear the character width cache if the font or width has changed\n    const terminalFont = this._getFont(false, false);\n    if (this._characterWidth !== dim.scaledCharWidth || this._characterFont !== terminalFont) {\n      this._characterWidth = dim.scaledCharWidth;\n      this._characterFont = terminalFont;\n      this._characterOverlapCache = {};\n    }\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state.clear();\n    this._state.resize(this._bufferService.cols, this._bufferService.rows);\n  }\n\n  public reset(): void {\n    this._state.clear();\n    this._clearAll();\n  }\n\n  private _forEachCell(\n    firstRow: number,\n    lastRow: number,\n    callback: (\n      cell: ICellData,\n      x: number,\n      y: number\n    ) => void\n  ): void {\n    for (let y = firstRow; y <= lastRow; y++) {\n      const row = y + this._bufferService.buffer.ydisp;\n      const line = this._bufferService.buffer.lines.get(row);\n      const joinedRanges = this._characterJoinerService.getJoinedCharacters(row);\n      for (let x = 0; x < this._bufferService.cols; x++) {\n        line!.loadCell(x, this._workCell);\n        let cell = this._workCell;\n\n        // If true, indicates that the current character(s) to draw were joined.\n        let isJoined = false;\n        let lastCharX = x;\n\n        // The character to the left is a wide character, drawing is owned by\n        // the char at x-1\n        if (cell.getWidth() === 0) {\n          continue;\n        }\n\n        // Process any joined character ranges as needed. Because of how the\n        // ranges are produced, we know that they are valid for the characters\n        // and attributes of our input.\n        if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n          isJoined = true;\n          const range = joinedRanges.shift()!;\n\n          // We already know the exact start and end column of the joined range,\n          // so we get the string and width representing it directly\n          cell = new JoinedCellData(\n            this._workCell,\n            line!.translateToString(true, range[0], range[1]),\n            range[1] - range[0]\n          );\n\n          // Skip over the cells occupied by this range in the loop\n          lastCharX = range[1] - 1;\n        }\n\n        // If the character is an overlapping char and the character to the\n        // right is a space, take ownership of the cell to the right. We skip\n        // this check for joined characters because their rendering likely won't\n        // yield the same result as rendering the last character individually.\n        if (!isJoined && this._isOverlapping(cell)) {\n          // If the character is overlapping, we want to force a re-render on every\n          // frame. This is specifically to work around the case where two\n          // overlaping chars `a` and `b` are adjacent, the cursor is moved to b and a\n          // space is added. Without this, the first half of `b` would never\n          // get removed, and `a` would not re-render because it thinks it's\n          // already in the correct state.\n          // this._state.cache[x][y] = OVERLAP_OWNED_CHAR_DATA;\n          if (lastCharX < line!.length - 1 && line!.getCodePoint(lastCharX + 1) === NULL_CELL_CODE) {\n            // patch width to 2\n            cell.content &= ~Content.WIDTH_MASK;\n            cell.content |= 2 << Content.WIDTH_SHIFT;\n            // this._clearChar(x + 1, y);\n            // The overlapping char's char data will force a clear and render when the\n            // overlapping char is no longer to the left of the character and also when\n            // the space changes to another character.\n            // this._state.cache[x + 1][y] = OVERLAP_OWNED_CHAR_DATA;\n          }\n        }\n\n        callback(\n          cell,\n          x,\n          y\n        );\n\n        x = lastCharX;\n      }\n    }\n  }\n\n  /**\n   * Draws the background for a specified range of columns. Tries to batch adjacent cells of the\n   * same color together to reduce draw calls.\n   */\n  private _drawBackground(firstRow: number, lastRow: number): void {\n    const ctx = this._ctx;\n    const cols = this._bufferService.cols;\n    let startX: number = 0;\n    let startY: number = 0;\n    let prevFillStyle: string | null = null;\n\n    ctx.save();\n\n    this._forEachCell(firstRow, lastRow, (cell, x, y) => {\n      // libvte and xterm both draw the background (but not foreground) of invisible characters,\n      // so we should too.\n      let nextFillStyle = null; // null represents default background color\n\n      if (cell.isInverse()) {\n        if (cell.isFgDefault()) {\n          nextFillStyle = this._colors.foreground.css;\n        } else if (cell.isFgRGB()) {\n          nextFillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n        } else {\n          nextFillStyle = this._colors.ansi[cell.getFgColor()].css;\n        }\n      } else if (cell.isBgRGB()) {\n        nextFillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n      } else if (cell.isBgPalette()) {\n        nextFillStyle = this._colors.ansi[cell.getBgColor()].css;\n      }\n\n      // Get any decoration foreground/background overrides, this must be fetched before the early\n      // exist but applied after inverse\n      let isTop = false;\n      for (const d of this._decorationService.getDecorationsAtCell(x, this._bufferService.buffer.ydisp + y)) {\n        if (d.options.layer !== 'top' && isTop) {\n          continue;\n        }\n        if (d.backgroundColorRGB) {\n          nextFillStyle = d.backgroundColorRGB.css;\n        }\n        isTop = d.options.layer === 'top';\n      }\n\n      if (prevFillStyle === null) {\n        // This is either the first iteration, or the default background was set. Either way, we\n        // don't need to draw anything.\n        startX = x;\n        startY = y;\n      }\n\n      if (y !== startY) {\n        // our row changed, draw the previous row\n        ctx.fillStyle = prevFillStyle || '';\n        this._fillCells(startX, startY, cols - startX, 1);\n        startX = x;\n        startY = y;\n      } else if (prevFillStyle !== nextFillStyle) {\n        // our color changed, draw the previous characters in this row\n        ctx.fillStyle = prevFillStyle || '';\n        this._fillCells(startX, startY, x - startX, 1);\n        startX = x;\n        startY = y;\n      }\n\n      prevFillStyle = nextFillStyle;\n    });\n\n    // flush the last color we encountered\n    if (prevFillStyle !== null) {\n      ctx.fillStyle = prevFillStyle;\n      this._fillCells(startX, startY, cols - startX, 1);\n    }\n\n    ctx.restore();\n  }\n\n  private _drawForeground(firstRow: number, lastRow: number): void {\n    this._forEachCell(firstRow, lastRow, (cell, x, y) => {\n      if (cell.isInvisible()) {\n        return;\n      }\n      this._drawChars(cell, x, y);\n      if (cell.isUnderline() || cell.isStrikethrough()) {\n        this._ctx.save();\n\n        if (cell.isInverse()) {\n          if (cell.isBgDefault()) {\n            this._ctx.fillStyle = this._colors.background.css;\n          } else if (cell.isBgRGB()) {\n            this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n          } else {\n            let bg = cell.getBgColor();\n            if (this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && bg < 8) {\n              bg += 8;\n            }\n            this._ctx.fillStyle = this._colors.ansi[bg].css;\n          }\n        } else {\n          if (cell.isFgDefault()) {\n            this._ctx.fillStyle = this._colors.foreground.css;\n          } else if (cell.isFgRGB()) {\n            this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n          } else {\n            let fg = cell.getFgColor();\n            if (this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n              fg += 8;\n            }\n            this._ctx.fillStyle = this._colors.ansi[fg].css;\n          }\n        }\n\n        if (cell.isStrikethrough()) {\n          this._fillMiddleLineAtCells(x, y, cell.getWidth());\n        }\n        if (cell.isUnderline()) {\n          this._fillBottomLineAtCells(x, y, cell.getWidth());\n        }\n        this._ctx.restore();\n      }\n    });\n  }\n\n  public onGridChanged(firstRow: number, lastRow: number): void {\n    // Resize has not been called yet\n    if (this._state.cache.length === 0) {\n      return;\n    }\n\n    if (this._charAtlas) {\n      this._charAtlas.beginFrame();\n    }\n\n    this._clearCells(0, firstRow, this._bufferService.cols, lastRow - firstRow + 1);\n    this._drawBackground(firstRow, lastRow);\n    this._drawForeground(firstRow, lastRow);\n  }\n\n  public onOptionsChanged(): void {\n    this._setTransparency(this._optionsService.rawOptions.allowTransparency);\n  }\n\n  /**\n   * Whether a character is overlapping to the next cell.\n   */\n  private _isOverlapping(cell: ICellData): boolean {\n    // Only single cell characters can be overlapping, rendering issues can\n    // occur without this check\n    if (cell.getWidth() !== 1) {\n      return false;\n    }\n\n    // We assume that any ascii character will not overlap\n    if (cell.getCode() < 256) {\n      return false;\n    }\n\n    const chars = cell.getChars();\n\n    // Deliver from cache if available\n    if (this._characterOverlapCache.hasOwnProperty(chars)) {\n      return this._characterOverlapCache[chars];\n    }\n\n    // Setup the font\n    this._ctx.save();\n    this._ctx.font = this._characterFont;\n\n    // Measure the width of the character, but Math.floor it\n    // because that is what the renderer does when it calculates\n    // the character dimensions we are comparing against\n    const overlaps = Math.floor(this._ctx.measureText(chars).width) > this._characterWidth;\n\n    // Restore the original context\n    this._ctx.restore();\n\n    // Cache and return\n    this._characterOverlapCache[chars] = overlaps;\n    return overlaps;\n  }\n\n  /**\n   * Clear the charcater at the cell specified.\n   * @param x The column of the char.\n   * @param y The row of the char.\n   */\n  // private _clearChar(x: number, y: number): void {\n  //   let colsToClear = 1;\n  //   // Clear the adjacent character if it was wide\n  //   const state = this._state.cache[x][y];\n  //   if (state && state[CHAR_DATA_WIDTH_INDEX] === 2) {\n  //     colsToClear = 2;\n  //   }\n  //   this.clearCells(x, y, colsToClear, 1);\n  // }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IGlyphIdentifier } from 'browser/renderer/atlas/Types';\nimport { IDisposable } from 'common/Types';\n\nexport abstract class BaseCharAtlas implements IDisposable {\n  private _didWarmUp: boolean = false;\n\n  public dispose(): void { }\n\n  /**\n   * Perform any work needed to warm the cache before it can be used. May be called multiple times.\n   * Implement _doWarmUp instead if you only want to get called once.\n   */\n  public warmUp(): void {\n    if (!this._didWarmUp) {\n      this._doWarmUp();\n      this._didWarmUp = true;\n    }\n  }\n\n  /**\n   * Perform any work needed to warm the cache before it can be used. Used by the default\n   * implementation of warmUp(), and will only be called once.\n   */\n  private _doWarmUp(): void { }\n\n  public clear(): void { }\n\n  /**\n   * Called when we start drawing a new frame.\n   *\n   * TODO: We rely on this getting called by TextRenderLayer. This should really be called by\n   * Renderer instead, but we need to make Renderer the source-of-truth for the char atlas, instead\n   * of BaseRenderLayer.\n   */\n  public beginFrame(): void { }\n\n  /**\n   * May be called before warmUp finishes, however it is okay for the implementation to\n   * do nothing and return false in that case.\n   *\n   * @param ctx Where to draw the character onto.\n   * @param glyph Information about what to draw\n   * @param x The position on the context to start drawing at\n   * @param y The position on the context to start drawing at\n   * @returns The success state. True if we drew the character.\n   */\n  public abstract draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { generateConfig, configEquals } from 'browser/renderer/atlas/CharAtlasUtils';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { DynamicCharAtlas } from 'browser/renderer/atlas/DynamicCharAtlas';\nimport { ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { IColorSet } from 'browser/Types';\nimport { ITerminalOptions } from 'common/services/Services';\n\ninterface ICharAtlasCacheEntry {\n  atlas: BaseCharAtlas;\n  config: ICharAtlasConfig;\n  // N.B. This implementation potentially holds onto copies of the terminal forever, so\n  // this may cause memory leaks.\n  ownedBy: number[];\n}\n\nconst charAtlasCache: ICharAtlasCacheEntry[] = [];\n\n/**\n * Acquires a char atlas, either generating a new one or returning an existing\n * one that is in use by another terminal.\n */\nexport function acquireCharAtlas(\n  options: ITerminalOptions,\n  rendererId: number,\n  colors: IColorSet,\n  scaledCharWidth: number,\n  scaledCharHeight: number\n): BaseCharAtlas {\n  const newConfig = generateConfig(scaledCharWidth, scaledCharHeight, options, colors);\n\n  // Check to see if the renderer already owns this config\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    const ownedByIndex = entry.ownedBy.indexOf(rendererId);\n    if (ownedByIndex >= 0) {\n      if (configEquals(entry.config, newConfig)) {\n        return entry.atlas;\n      }\n      // The configs differ, release the renderer from the entry\n      if (entry.ownedBy.length === 1) {\n        entry.atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        entry.ownedBy.splice(ownedByIndex, 1);\n      }\n      break;\n    }\n  }\n\n  // Try match a char atlas from the cache\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    if (configEquals(entry.config, newConfig)) {\n      // Add the renderer to the cache entry and return\n      entry.ownedBy.push(rendererId);\n      return entry.atlas;\n    }\n  }\n\n  const newEntry: ICharAtlasCacheEntry = {\n    atlas: new DynamicCharAtlas(\n      document,\n      newConfig\n    ),\n    config: newConfig,\n    ownedBy: [rendererId]\n  };\n  charAtlasCache.push(newEntry);\n  return newEntry.atlas;\n}\n\n/**\n * Removes a terminal reference from the cache, allowing its memory to be freed.\n */\nexport function removeTerminalFromCache(rendererId: number): void {\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const index = charAtlasCache[i].ownedBy.indexOf(rendererId);\n    if (index !== -1) {\n      if (charAtlasCache[i].ownedBy.length === 1) {\n        // Remove the cache entry if it's the only renderer\n        charAtlasCache[i].atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        // Remove the reference from the cache entry\n        charAtlasCache[i].ownedBy.splice(index, 1);\n      }\n      break;\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { DEFAULT_COLOR } from 'common/buffer/Constants';\nimport { IColorSet, IPartialColorSet } from 'browser/Types';\nimport { ITerminalOptions } from 'common/services/Services';\n\nexport function generateConfig(scaledCharWidth: number, scaledCharHeight: number, options: ITerminalOptions, colors: IColorSet): ICharAtlasConfig {\n  // null out some fields that don't matter\n  const clonedColors: IPartialColorSet = {\n    foreground: colors.foreground,\n    background: colors.background,\n    cursor: undefined,\n    cursorAccent: undefined,\n    selection: undefined,\n    ansi: colors.ansi.slice()\n  };\n  return {\n    devicePixelRatio: window.devicePixelRatio,\n    scaledCharWidth,\n    scaledCharHeight,\n    fontFamily: options.fontFamily,\n    fontSize: options.fontSize,\n    fontWeight: options.fontWeight,\n    fontWeightBold: options.fontWeightBold,\n    allowTransparency: options.allowTransparency,\n    colors: clonedColors\n  };\n}\n\nexport function configEquals(a: ICharAtlasConfig, b: ICharAtlasConfig): boolean {\n  for (let i = 0; i < a.colors.ansi.length; i++) {\n    if (a.colors.ansi[i].rgba !== b.colors.ansi[i].rgba) {\n      return false;\n    }\n  }\n  return a.devicePixelRatio === b.devicePixelRatio &&\n      a.fontFamily === b.fontFamily &&\n      a.fontSize === b.fontSize &&\n      a.fontWeight === b.fontWeight &&\n      a.fontWeightBold === b.fontWeightBold &&\n      a.allowTransparency === b.allowTransparency &&\n      a.scaledCharWidth === b.scaledCharWidth &&\n      a.scaledCharHeight === b.scaledCharHeight &&\n      a.colors.foreground === b.colors.foreground &&\n      a.colors.background === b.colors.background;\n}\n\nexport function is256Color(colorCode: number): boolean {\n  return colorCode < DEFAULT_COLOR;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isFirefox, isLegacyEdge } from 'common/Platform';\n\nexport const INVERTED_DEFAULT_COLOR = 257;\nexport const DIM_OPACITY = 0.5;\n// The text baseline is set conditionally by browser. Using 'ideographic' for Firefox or Legacy Edge would\n// result in truncated text (Issue 3353). Using 'bottom' for Chrome would result in slightly\n// unaligned Powerline fonts (PR 3356#issuecomment-850928179).\nexport const TEXT_BASELINE: CanvasTextBaseline = isFirefox || isLegacyEdge ? 'bottom' : 'ideographic';\n\nexport const CHAR_ATLAS_CELL_SPACING = 1;\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { DIM_OPACITY, INVERTED_DEFAULT_COLOR, TEXT_BASELINE } from 'browser/renderer/atlas/Constants';\nimport { IGlyphIdentifier, ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { DEFAULT_ANSI_COLORS } from 'browser/ColorManager';\nimport { LRUMap } from 'browser/renderer/atlas/LRUMap';\nimport { isFirefox, isSafari } from 'common/Platform';\nimport { IColor } from 'common/Types';\nimport { throwIfFalsy } from 'browser/renderer/RendererUtils';\nimport { color } from 'common/Color';\n\n// In practice we're probably never going to exhaust a texture this large. For debugging purposes,\n// however, it can be useful to set this to a really tiny value, to verify that LRU eviction works.\nconst TEXTURE_WIDTH = 1024;\nconst TEXTURE_HEIGHT = 1024;\n\nconst TRANSPARENT_COLOR = {\n  css: 'rgba(0, 0, 0, 0)',\n  rgba: 0\n};\n\n// Drawing to the cache is expensive: If we have to draw more than this number of glyphs to the\n// cache in a single frame, give up on trying to cache anything else, and try to finish the current\n// frame ASAP.\n//\n// This helps to limit the amount of damage a program can do when it would otherwise thrash the\n// cache.\nconst FRAME_CACHE_DRAW_LIMIT = 100;\n\n/**\n * The number of milliseconds to wait before generating the ImageBitmap, this is to debounce/batch\n * the operation as window.createImageBitmap is asynchronous.\n */\nconst GLYPH_BITMAP_COMMIT_DELAY = 100;\n\ninterface IGlyphCacheValue {\n  index: number;\n  isEmpty: boolean;\n  inBitmap: boolean;\n}\n\nexport function getGlyphCacheKey(glyph: IGlyphIdentifier): number {\n  // Note that this only returns a valid key when code < 256\n  // Layout:\n  // 0b00000000000000000000000000000001: italic (1)\n  // 0b00000000000000000000000000000010: dim (1)\n  // 0b00000000000000000000000000000100: bold (1)\n  // 0b00000000000000000000111111111000: fg (9)\n  // 0b00000000000111111111000000000000: bg (9)\n  // 0b00011111111000000000000000000000: code (8)\n  // 0b11100000000000000000000000000000: unused (3)\n  return glyph.code << 21 | glyph.bg << 12 | glyph.fg << 3 | (glyph.bold ? 0 : 4) + (glyph.dim ? 0 : 2) + (glyph.italic ? 0 : 1);\n}\n\nexport class DynamicCharAtlas extends BaseCharAtlas {\n  // An ordered map that we're using to keep track of where each glyph is in the atlas texture.\n  // It's ordered so that we can determine when to remove the old entries.\n  private _cacheMap: LRUMap<IGlyphCacheValue>;\n\n  // The texture that the atlas is drawn to\n  private _cacheCanvas: HTMLCanvasElement;\n  private _cacheCtx: CanvasRenderingContext2D;\n\n  // A temporary context that glyphs are drawn to before being transfered to the atlas.\n  private _tmpCtx: CanvasRenderingContext2D;\n\n  // The number of characters stored in the atlas by width/height\n  private _width: number;\n  private _height: number;\n\n  private _drawToCacheCount: number = 0;\n\n  // An array of glyph keys that are waiting on the bitmap to be generated.\n  private _glyphsWaitingOnBitmap: IGlyphCacheValue[] = [];\n\n  // The timeout that is used to batch bitmap generation so it's not requested for every new glyph.\n  private _bitmapCommitTimeout: number | null = null;\n\n  // The bitmap to draw from, this is much faster on other browsers than others.\n  private _bitmap: ImageBitmap | null = null;\n\n  constructor(document: Document, private _config: ICharAtlasConfig) {\n    super();\n    this._cacheCanvas = document.createElement('canvas');\n    this._cacheCanvas.width = TEXTURE_WIDTH;\n    this._cacheCanvas.height = TEXTURE_HEIGHT;\n    // The canvas needs alpha because we use clearColor to convert the background color to alpha.\n    // It might also contain some characters with transparent backgrounds if allowTransparency is\n    // set.\n    this._cacheCtx = throwIfFalsy(this._cacheCanvas.getContext('2d', { alpha: true }));\n\n    const tmpCanvas = document.createElement('canvas');\n    tmpCanvas.width = this._config.scaledCharWidth;\n    tmpCanvas.height = this._config.scaledCharHeight;\n    this._tmpCtx = throwIfFalsy(tmpCanvas.getContext('2d', { alpha: this._config.allowTransparency }));\n\n    this._width = Math.floor(TEXTURE_WIDTH / this._config.scaledCharWidth);\n    this._height = Math.floor(TEXTURE_HEIGHT / this._config.scaledCharHeight);\n    const capacity = this._width * this._height;\n    this._cacheMap = new LRUMap(capacity);\n    this._cacheMap.prealloc(capacity);\n\n    // This is useful for debugging\n    // document.body.appendChild(this._cacheCanvas);\n  }\n\n  public dispose(): void {\n    if (this._bitmapCommitTimeout !== null) {\n      window.clearTimeout(this._bitmapCommitTimeout);\n      this._bitmapCommitTimeout = null;\n    }\n  }\n\n  public beginFrame(): void {\n    this._drawToCacheCount = 0;\n  }\n\n  public clear(): void {\n    if (this._cacheMap.size > 0) {\n      const capacity = this._width * this._height;\n      this._cacheMap = new LRUMap(capacity);\n      this._cacheMap.prealloc(capacity);\n    }\n    this._cacheCtx.clearRect(0, 0, TEXTURE_WIDTH, TEXTURE_HEIGHT);\n    this._tmpCtx.clearRect(0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight);\n  }\n\n  public draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean {\n    // Space is always an empty cell, special case this as it's so common\n    if (glyph.code === 32) {\n      return true;\n    }\n\n    // Exit early for uncachable glyphs\n    if (!this._canCache(glyph)) {\n      return false;\n    }\n\n    const glyphKey = getGlyphCacheKey(glyph);\n    const cacheValue = this._cacheMap.get(glyphKey);\n    if (cacheValue !== null && cacheValue !== undefined) {\n      this._drawFromCache(ctx, cacheValue, x, y);\n      return true;\n    }\n    if (this._drawToCacheCount < FRAME_CACHE_DRAW_LIMIT) {\n      let index;\n      if (this._cacheMap.size < this._cacheMap.capacity) {\n        index = this._cacheMap.size;\n      } else {\n        // we're out of space, so our call to set will delete this item\n        index = this._cacheMap.peek()!.index;\n      }\n      const cacheValue = this._drawToCache(glyph, index);\n      this._cacheMap.set(glyphKey, cacheValue);\n      this._drawFromCache(ctx, cacheValue, x, y);\n      return true;\n    }\n    return false;\n  }\n\n  private _canCache(glyph: IGlyphIdentifier): boolean {\n    // Only cache ascii and extended characters for now, to be safe. In the future, we could do\n    // something more complicated to determine the expected width of a character.\n    //\n    // If we switch the renderer over to webgl at some point, we may be able to use blending modes\n    // to draw overlapping glyphs from the atlas:\n    // https://github.com/servo/webrender/issues/464#issuecomment-255632875\n    // https://webglfundamentals.org/webgl/lessons/webgl-text-texture.html\n    return glyph.code < 256;\n  }\n\n  private _toCoordinateX(index: number): number {\n    return (index % this._width) * this._config.scaledCharWidth;\n  }\n\n  private _toCoordinateY(index: number): number {\n    return Math.floor(index / this._width) * this._config.scaledCharHeight;\n  }\n\n  private _drawFromCache(\n    ctx: CanvasRenderingContext2D,\n    cacheValue: IGlyphCacheValue,\n    x: number,\n    y: number\n  ): void {\n    // We don't actually need to do anything if this is whitespace.\n    if (cacheValue.isEmpty) {\n      return;\n    }\n    const cacheX = this._toCoordinateX(cacheValue.index);\n    const cacheY = this._toCoordinateY(cacheValue.index);\n    ctx.drawImage(\n      cacheValue.inBitmap ? this._bitmap! : this._cacheCanvas,\n      cacheX,\n      cacheY,\n      this._config.scaledCharWidth,\n      this._config.scaledCharHeight,\n      x,\n      y,\n      this._config.scaledCharWidth,\n      this._config.scaledCharHeight\n    );\n  }\n\n  private _getColorFromAnsiIndex(idx: number): IColor {\n    if (idx < this._config.colors.ansi.length) {\n      return this._config.colors.ansi[idx];\n    }\n    return DEFAULT_ANSI_COLORS[idx];\n  }\n\n  private _getBackgroundColor(glyph: IGlyphIdentifier): IColor {\n    if (this._config.allowTransparency) {\n      // The background color might have some transparency, so we need to render it as fully\n      // transparent in the atlas. Otherwise we'd end up drawing the transparent background twice\n      // around the anti-aliased edges of the glyph, and it would look too dark.\n      return TRANSPARENT_COLOR;\n    }\n    if (glyph.bg === INVERTED_DEFAULT_COLOR) {\n      return this._config.colors.foreground;\n    }\n    if (glyph.bg < 256) {\n      return this._getColorFromAnsiIndex(glyph.bg);\n    }\n    return this._config.colors.background;\n  }\n\n  private _getForegroundColor(glyph: IGlyphIdentifier): IColor {\n    if (glyph.fg === INVERTED_DEFAULT_COLOR) {\n      return color.opaque(this._config.colors.background);\n    }\n    if (glyph.fg < 256) {\n      // 256 color support\n      return this._getColorFromAnsiIndex(glyph.fg);\n    }\n    return this._config.colors.foreground;\n  }\n\n  // TODO: We do this (or something similar) in multiple places. We should split this off\n  // into a shared function.\n  private _drawToCache(glyph: IGlyphIdentifier, index: number): IGlyphCacheValue {\n    this._drawToCacheCount++;\n\n    this._tmpCtx.save();\n\n    // draw the background\n    const backgroundColor = this._getBackgroundColor(glyph);\n    // Use a 'copy' composite operation to clear any existing glyph out of _tmpCtxWithAlpha, regardless of\n    // transparency in backgroundColor\n    this._tmpCtx.globalCompositeOperation = 'copy';\n    this._tmpCtx.fillStyle = backgroundColor.css;\n    this._tmpCtx.fillRect(0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight);\n    this._tmpCtx.globalCompositeOperation = 'source-over';\n\n    // draw the foreground/glyph\n    const fontWeight = glyph.bold ? this._config.fontWeightBold : this._config.fontWeight;\n    const fontStyle = glyph.italic ? 'italic' : '';\n    this._tmpCtx.font =\n      `${fontStyle} ${fontWeight} ${this._config.fontSize * this._config.devicePixelRatio}px ${this._config.fontFamily}`;\n    this._tmpCtx.textBaseline = TEXT_BASELINE;\n\n    this._tmpCtx.fillStyle = this._getForegroundColor(glyph).css;\n\n    // Apply alpha to dim the character\n    if (glyph.dim) {\n      this._tmpCtx.globalAlpha = DIM_OPACITY;\n    }\n    // Draw the character\n    this._tmpCtx.fillText(glyph.chars, 0, this._config.scaledCharHeight);\n\n    // clear the background from the character to avoid issues with drawing over the previous\n    // character if it extends past it's bounds\n    let imageData = this._tmpCtx.getImageData(\n      0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight\n    );\n    let isEmpty = false;\n    if (!this._config.allowTransparency) {\n      isEmpty = clearColor(imageData, backgroundColor);\n    }\n\n    // If this charcater is underscore and empty, shift it up until it is visible, try for a maximum\n    // of 5 pixels.\n    if (isEmpty && glyph.chars === '_' && !this._config.allowTransparency) {\n      for (let offset = 1; offset <= 5; offset++) {\n        // Draw the character\n        this._tmpCtx.fillText(glyph.chars, 0, this._config.scaledCharHeight - offset);\n\n        // clear the background from the character to avoid issues with drawing over the previous\n        // character if it extends past it's bounds\n        imageData = this._tmpCtx.getImageData(\n          0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight\n        );\n        isEmpty = clearColor(imageData, backgroundColor);\n        if (!isEmpty) {\n          break;\n        }\n      }\n    }\n\n    this._tmpCtx.restore();\n\n    // copy the data from imageData to _cacheCanvas\n    const x = this._toCoordinateX(index);\n    const y = this._toCoordinateY(index);\n    // putImageData doesn't do any blending, so it will overwrite any existing cache entry for us\n    this._cacheCtx.putImageData(imageData, x, y);\n\n    // Add the glyph and queue it to the bitmap (if the browser supports it)\n    const cacheValue = {\n      index,\n      isEmpty,\n      inBitmap: false\n    };\n    this._addGlyphToBitmap(cacheValue);\n\n    return cacheValue;\n  }\n\n  private _addGlyphToBitmap(cacheValue: IGlyphCacheValue): void {\n    // Support is patchy for createImageBitmap at the moment, pass a canvas back\n    // if support is lacking as drawImage works there too. Firefox is also\n    // included here as ImageBitmap appears both buggy and has horrible\n    // performance (tested on v55).\n    if (!('createImageBitmap' in window) || isFirefox || isSafari) {\n      return;\n    }\n\n    // Add the glyph to the queue\n    this._glyphsWaitingOnBitmap.push(cacheValue);\n\n    // Check if bitmap generation timeout already exists\n    if (this._bitmapCommitTimeout !== null) {\n      return;\n    }\n\n    this._bitmapCommitTimeout = window.setTimeout(() => this._generateBitmap(), GLYPH_BITMAP_COMMIT_DELAY);\n  }\n\n  private _generateBitmap(): void {\n    const glyphsMovingToBitmap = this._glyphsWaitingOnBitmap;\n    this._glyphsWaitingOnBitmap = [];\n    window.createImageBitmap(this._cacheCanvas).then(bitmap => {\n      // Set bitmap\n      this._bitmap = bitmap;\n\n      // Mark all new glyphs as in bitmap, excluding glyphs that came in after\n      // the bitmap was requested\n      for (let i = 0; i < glyphsMovingToBitmap.length; i++) {\n        const value = glyphsMovingToBitmap[i];\n        // It doesn't matter if the value was already evicted, it will be\n        // released from memory after this block if so.\n        value.inBitmap = true;\n      }\n    });\n    this._bitmapCommitTimeout = null;\n  }\n}\n\n// This is used for debugging the renderer, just swap out `new DynamicCharAtlas` with\n// `new NoneCharAtlas`.\nexport class NoneCharAtlas extends BaseCharAtlas {\n  constructor(document: Document, config: ICharAtlasConfig) {\n    super();\n  }\n\n  public draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean {\n    return false;\n  }\n}\n\n/**\n * Makes a partiicular rgb color in an ImageData completely transparent.\n * @returns True if the result is \"empty\", meaning all pixels are fully transparent.\n */\nfunction clearColor(imageData: ImageData, color: IColor): boolean {\n  let isEmpty = true;\n  const r = color.rgba >>> 24;\n  const g = color.rgba >>> 16 & 0xFF;\n  const b = color.rgba >>> 8 & 0xFF;\n  for (let offset = 0; offset < imageData.data.length; offset += 4) {\n    if (imageData.data[offset] === r &&\n        imageData.data[offset + 1] === g &&\n        imageData.data[offset + 2] === b) {\n      imageData.data[offset + 3] = 0;\n    } else {\n      isEmpty = false;\n    }\n  }\n  return isEmpty;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface ILinkedListNode<T> {\n  prev: ILinkedListNode<T> | null;\n  next: ILinkedListNode<T> | null;\n  key: number | null;\n  value: T | null;\n}\n\nexport class LRUMap<T> {\n  private _map: { [key: number]: ILinkedListNode<T> } = {};\n  private _head: ILinkedListNode<T> | null = null;\n  private _tail: ILinkedListNode<T> | null = null;\n  private _nodePool: ILinkedListNode<T>[] = [];\n  public size: number = 0;\n\n  constructor(public capacity: number) { }\n\n  private _unlinkNode(node: ILinkedListNode<T>): void {\n    const prev = node.prev;\n    const next = node.next;\n    if (node === this._head) {\n      this._head = next;\n    }\n    if (node === this._tail) {\n      this._tail = prev;\n    }\n    if (prev !== null) {\n      prev.next = next;\n    }\n    if (next !== null) {\n      next.prev = prev;\n    }\n  }\n\n  private _appendNode(node: ILinkedListNode<T>): void {\n    const tail = this._tail;\n    if (tail !== null) {\n      tail.next = node;\n    }\n    node.prev = tail;\n    node.next = null;\n    this._tail = node;\n    if (this._head === null) {\n      this._head = node;\n    }\n  }\n\n  /**\n   * Preallocate a bunch of linked-list nodes. Allocating these nodes ahead of time means that\n   * they're more likely to live next to each other in memory, which seems to improve performance.\n   *\n   * Each empty object only consumes about 60 bytes of memory, so this is pretty cheap, even for\n   * large maps.\n   */\n  public prealloc(count: number): void {\n    const nodePool = this._nodePool;\n    for (let i = 0; i < count; i++) {\n      nodePool.push({\n        prev: null,\n        next: null,\n        key: null,\n        value: null\n      });\n    }\n  }\n\n  public get(key: number): T | null {\n    // This is unsafe: We're assuming our keyspace doesn't overlap with Object.prototype. However,\n    // it's faster than calling hasOwnProperty, and in our case, it would never overlap.\n    const node = this._map[key];\n    if (node !== undefined) {\n      this._unlinkNode(node);\n      this._appendNode(node);\n      return node.value;\n    }\n    return null;\n  }\n\n  /**\n   * Gets a value from a key without marking it as the most recently used item.\n   */\n  public peekValue(key: number): T | null {\n    const node = this._map[key];\n    if (node !== undefined) {\n      return node.value;\n    }\n    return null;\n  }\n\n  public peek(): T | null {\n    const head = this._head;\n    return head === null ? null : head.value;\n  }\n\n  public set(key: number, value: T): void {\n    // This is unsafe: See note above.\n    let node = this._map[key];\n    if (node !== undefined) {\n      // already exists, we just need to mutate it and move it to the end of the list\n      node = this._map[key];\n      this._unlinkNode(node);\n      node.value = value;\n    } else if (this.size >= this.capacity) {\n      // we're out of space: recycle the head node, move it to the tail\n      node = this._head!;\n      this._unlinkNode(node);\n      delete this._map[node.key!];\n      node.key = key;\n      node.value = value;\n      this._map[key] = node;\n    } else {\n      // make a new element\n      const nodePool = this._nodePool;\n      if (nodePool.length > 0) {\n        // use a preallocated node if we can\n        node = nodePool.pop()!;\n        node.key = key;\n        node.value = value;\n      } else {\n        node = {\n          prev: null,\n          next: null,\n          key,\n          value\n        };\n      }\n      this._map[key] = node;\n      this.size++;\n    }\n    this._appendNode(node);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderer, IRenderDimensions, IRequestRedrawEvent } from 'browser/renderer/Types';\nimport { BOLD_CLASS, ITALIC_CLASS, CURSOR_CLASS, CURSOR_STYLE_BLOCK_CLASS, CURSOR_BLINK_CLASS, CURSOR_STYLE_BAR_CLASS, CURSOR_STYLE_UNDERLINE_CLASS, DomRendererRowFactory } from 'browser/renderer/dom/DomRendererRowFactory';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { Disposable } from 'common/Lifecycle';\nimport { IColorSet, ILinkifierEvent, ILinkifier, ILinkifier2 } from 'browser/Types';\nimport { ICharSizeService } from 'browser/services/Services';\nimport { IOptionsService, IBufferService, IInstantiationService, IDecorationService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { color } from 'common/Color';\nimport { removeElementFromParent } from 'browser/Dom';\n\nconst TERMINAL_CLASS_PREFIX = 'xterm-dom-renderer-owner-';\nconst ROW_CONTAINER_CLASS = 'xterm-rows';\nconst FG_CLASS_PREFIX = 'xterm-fg-';\nconst BG_CLASS_PREFIX = 'xterm-bg-';\nconst FOCUS_CLASS = 'xterm-focus';\nconst SELECTION_CLASS = 'xterm-selection';\n\nlet nextTerminalId = 1;\n\n/**\n * A fallback renderer for when canvas is slow. This is not meant to be\n * particularly fast or feature complete, more just stable and usable for when\n * canvas is not an option.\n */\nexport class DomRenderer extends Disposable implements IRenderer {\n  private _rowFactory: DomRendererRowFactory;\n  private _terminalClass: number = nextTerminalId++;\n\n  private _themeStyleElement!: HTMLStyleElement;\n  private _dimensionsStyleElement!: HTMLStyleElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[] = [];\n  private _selectionContainer: HTMLElement;\n\n  public dimensions: IRenderDimensions;\n\n  public get onRequestRedraw(): IEvent<IRequestRedrawEvent> { return new EventEmitter<IRequestRedrawEvent>().event; }\n\n  constructor(\n    private _colors: IColorSet,\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _linkifier: ILinkifier,\n    private readonly _linkifier2: ILinkifier2,\n    @IInstantiationService instantiationService: IInstantiationService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.classList.add(ROW_CONTAINER_CLASS);\n    this._rowContainer.style.lineHeight = 'normal';\n    this._rowContainer.setAttribute('aria-hidden', 'true');\n    this._refreshRowElements(this._bufferService.cols, this._bufferService.rows);\n    this._selectionContainer = document.createElement('div');\n    this._selectionContainer.classList.add(SELECTION_CLASS);\n    this._selectionContainer.setAttribute('aria-hidden', 'true');\n\n    this.dimensions = {\n      scaledCharWidth: 0,\n      scaledCharHeight: 0,\n      scaledCellWidth: 0,\n      scaledCellHeight: 0,\n      scaledCharLeft: 0,\n      scaledCharTop: 0,\n      scaledCanvasWidth: 0,\n      scaledCanvasHeight: 0,\n      canvasWidth: 0,\n      canvasHeight: 0,\n      actualCellWidth: 0,\n      actualCellHeight: 0\n    };\n    this._updateDimensions();\n    this._injectCss();\n\n    this._rowFactory = instantiationService.createInstance(DomRendererRowFactory, document, this._colors);\n\n    this._element.classList.add(TERMINAL_CLASS_PREFIX + this._terminalClass);\n    this._screenElement.appendChild(this._rowContainer);\n    this._screenElement.appendChild(this._selectionContainer);\n\n    this.register(this._linkifier.onShowLinkUnderline(e => this._onLinkHover(e)));\n    this.register(this._linkifier.onHideLinkUnderline(e => this._onLinkLeave(e)));\n\n    this.register(this._linkifier2.onShowLinkUnderline(e => this._onLinkHover(e)));\n    this.register(this._linkifier2.onHideLinkUnderline(e => this._onLinkLeave(e)));\n  }\n\n  public dispose(): void {\n    this._element.classList.remove(TERMINAL_CLASS_PREFIX + this._terminalClass);\n\n    // Outside influences such as React unmounts may manipulate the DOM before our disposal.\n    // https://github.com/xtermjs/xterm.js/issues/2960\n    removeElementFromParent(this._rowContainer, this._selectionContainer, this._themeStyleElement, this._dimensionsStyleElement);\n\n    super.dispose();\n  }\n\n  private _updateDimensions(): void {\n    this.dimensions.scaledCharWidth = this._charSizeService.width * window.devicePixelRatio;\n    this.dimensions.scaledCharHeight = Math.ceil(this._charSizeService.height * window.devicePixelRatio);\n    this.dimensions.scaledCellWidth = this.dimensions.scaledCharWidth + Math.round(this._optionsService.rawOptions.letterSpacing);\n    this.dimensions.scaledCellHeight = Math.floor(this.dimensions.scaledCharHeight * this._optionsService.rawOptions.lineHeight);\n    this.dimensions.scaledCharLeft = 0;\n    this.dimensions.scaledCharTop = 0;\n    this.dimensions.scaledCanvasWidth = this.dimensions.scaledCellWidth * this._bufferService.cols;\n    this.dimensions.scaledCanvasHeight = this.dimensions.scaledCellHeight * this._bufferService.rows;\n    this.dimensions.canvasWidth = Math.round(this.dimensions.scaledCanvasWidth / window.devicePixelRatio);\n    this.dimensions.canvasHeight = Math.round(this.dimensions.scaledCanvasHeight / window.devicePixelRatio);\n    this.dimensions.actualCellWidth = this.dimensions.canvasWidth / this._bufferService.cols;\n    this.dimensions.actualCellHeight = this.dimensions.canvasHeight / this._bufferService.rows;\n\n    for (const element of this._rowElements) {\n      element.style.width = `${this.dimensions.canvasWidth}px`;\n      element.style.height = `${this.dimensions.actualCellHeight}px`;\n      element.style.lineHeight = `${this.dimensions.actualCellHeight}px`;\n      // Make sure rows don't overflow onto following row\n      element.style.overflow = 'hidden';\n    }\n\n    if (!this._dimensionsStyleElement) {\n      this._dimensionsStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._dimensionsStyleElement);\n    }\n\n    const styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} span {` +\n      ` display: inline-block;` +\n      ` height: 100%;` +\n      ` vertical-align: top;` +\n      ` width: ${this.dimensions.actualCellWidth}px` +\n      `}`;\n\n    this._dimensionsStyleElement.textContent = styles;\n\n    this._selectionContainer.style.height = this._viewportElement.style.height;\n    this._screenElement.style.width = `${this.dimensions.canvasWidth}px`;\n    this._screenElement.style.height = `${this.dimensions.canvasHeight}px`;\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n    this._injectCss();\n  }\n\n  private _injectCss(): void {\n    if (!this._themeStyleElement) {\n      this._themeStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._themeStyleElement);\n    }\n\n    // Base CSS\n    let styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} {` +\n      ` color: ${this._colors.foreground.css};` +\n      ` font-family: ${this._optionsService.rawOptions.fontFamily};` +\n      ` font-size: ${this._optionsService.rawOptions.fontSize}px;` +\n      `}`;\n    // Text styles\n    styles +=\n      `${this._terminalSelector} span:not(.${BOLD_CLASS}) {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeight};` +\n      `}` +\n      `${this._terminalSelector} span.${BOLD_CLASS} {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeightBold};` +\n      `}` +\n      `${this._terminalSelector} span.${ITALIC_CLASS} {` +\n      ` font-style: italic;` +\n      `}`;\n    // Blink animation\n    styles +=\n      `@keyframes blink_box_shadow` + `_` + this._terminalClass + ` {` +\n      ` 50% {` +\n      `  box-shadow: none;` +\n      ` }` +\n      `}`;\n    styles +=\n      `@keyframes blink_block` + `_` + this._terminalClass + ` {` +\n      ` 0% {` +\n      `  background-color: ${this._colors.cursor.css};` +\n      `  color: ${this._colors.cursorAccent.css};` +\n      ` }` +\n      ` 50% {` +\n      `  background-color: ${this._colors.cursorAccent.css};` +\n      `  color: ${this._colors.cursor.css};` +\n      ` }` +\n      `}`;\n    // Cursor\n    styles +=\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}:not(.${FOCUS_CLASS}) .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` outline: 1px solid ${this._colors.cursor.css};` +\n      ` outline-offset: -1px;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS}:not(.${CURSOR_STYLE_BLOCK_CLASS}) {` +\n      ` animation: blink_box_shadow` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` animation: blink_block` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` background-color: ${this._colors.cursor.css};` +\n      ` color: ${this._colors.cursorAccent.css};` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BAR_CLASS} {` +\n      ` box-shadow: ${this._optionsService.rawOptions.cursorWidth}px 0 0 ${this._colors.cursor.css} inset;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_UNDERLINE_CLASS} {` +\n      ` box-shadow: 0 -1px 0 ${this._colors.cursor.css} inset;` +\n      `}`;\n    // Selection\n    styles +=\n      `${this._terminalSelector} .${SELECTION_CLASS} {` +\n      ` position: absolute;` +\n      ` top: 0;` +\n      ` left: 0;` +\n      ` z-index: 1;` +\n      ` pointer-events: none;` +\n      `}` +\n      `${this._terminalSelector} .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${this._colors.selectionOpaque.css};` +\n      `}`;\n    // Colors\n    this._colors.ansi.forEach((c, i) => {\n      styles +=\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${i} { color: ${c.css}; }` +\n        `${this._terminalSelector} .${BG_CLASS_PREFIX}${i} { background-color: ${c.css}; }`;\n    });\n    styles +=\n      `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { color: ${color.opaque(this._colors.background).css}; }` +\n      `${this._terminalSelector} .${BG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { background-color: ${this._colors.foreground.css}; }`;\n\n    this._themeStyleElement.textContent = styles;\n  }\n\n  public onDevicePixelRatioChange(): void {\n    this._updateDimensions();\n  }\n\n  private _refreshRowElements(cols: number, rows: number): void {\n    // Add missing elements\n    for (let i = this._rowElements.length; i <= rows; i++) {\n      const row = document.createElement('div');\n      this._rowContainer.appendChild(row);\n      this._rowElements.push(row);\n    }\n    // Remove excess elements\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n  }\n\n  public onResize(cols: number, rows: number): void {\n    this._refreshRowElements(cols, rows);\n    this._updateDimensions();\n  }\n\n  public onCharSizeChanged(): void {\n    this._updateDimensions();\n  }\n\n  public onBlur(): void {\n    this._rowContainer.classList.remove(FOCUS_CLASS);\n  }\n\n  public onFocus(): void {\n    this._rowContainer.classList.add(FOCUS_CLASS);\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    // Remove all selections\n    while (this._selectionContainer.children.length) {\n      this._selectionContainer.removeChild(this._selectionContainer.children[0]);\n    }\n\n    this._rowFactory.onSelectionChanged(start, end, columnSelectMode);\n    this.renderRows(0, this._bufferService.rows - 1);\n\n    // Selection does not exist\n    if (!start || !end) {\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    // Create the selections\n    const documentFragment = document.createDocumentFragment();\n\n    if (columnSelectMode) {\n      const isXFlipped = start[0] > end[0];\n      documentFragment.appendChild(\n        this._createSelectionElement(viewportCappedStartRow, isXFlipped ? end[0] : start[0], isXFlipped ? start[0] : end[0], viewportCappedEndRow - viewportCappedStartRow + 1)\n      );\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const endCol = viewportCappedStartRow === viewportEndRow ? end[0] : this._bufferService.cols;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow, startCol, endCol));\n      // Draw middle rows\n      const middleRowsCount = viewportCappedEndRow - viewportCappedStartRow - 1;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow + 1, 0, this._bufferService.cols, middleRowsCount));\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewporttartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        documentFragment.appendChild(this._createSelectionElement(viewportCappedEndRow, 0, endCol));\n      }\n    }\n    this._selectionContainer.appendChild(documentFragment);\n  }\n\n  /**\n   * Creates a selection element at the specified position.\n   * @param row The row of the selection.\n   * @param colStart The start column.\n   * @param colEnd The end columns.\n   */\n  private _createSelectionElement(row: number, colStart: number, colEnd: number, rowCount: number = 1): HTMLElement {\n    const element = document.createElement('div');\n    element.style.height = `${rowCount * this.dimensions.actualCellHeight}px`;\n    element.style.top = `${row * this.dimensions.actualCellHeight}px`;\n    element.style.left = `${colStart * this.dimensions.actualCellWidth}px`;\n    element.style.width = `${this.dimensions.actualCellWidth * (colEnd - colStart)}px`;\n    return element;\n  }\n\n  public onCursorMove(): void {\n    // No-op, the cursor is drawn when rows are drawn\n  }\n\n  public onOptionsChanged(): void {\n    // Force a refresh\n    this._updateDimensions();\n    this._injectCss();\n  }\n\n  public clear(): void {\n    for (const e of this._rowElements) {\n      e.innerText = '';\n    }\n  }\n\n  public renderRows(start: number, end: number): void {\n    const cursorAbsoluteY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n    const cursorBlink = this._optionsService.rawOptions.cursorBlink;\n\n    for (let y = start; y <= end; y++) {\n      const rowElement = this._rowElements[y];\n      rowElement.innerText = '';\n      const row = y + this._bufferService.buffer.ydisp;\n      const lineData = this._bufferService.buffer.lines.get(row);\n      const cursorStyle = this._optionsService.rawOptions.cursorStyle;\n      rowElement.appendChild(this._rowFactory.createRow(lineData!, row, row === cursorAbsoluteY, cursorStyle, cursorX, cursorBlink, this.dimensions.actualCellWidth, this._bufferService.cols));\n    }\n  }\n\n  private get _terminalSelector(): string {\n    return `.${TERMINAL_CLASS_PREFIX}${this._terminalClass}`;\n  }\n\n  private _onLinkHover(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, true);\n  }\n\n  private _onLinkLeave(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, false);\n  }\n\n  private _setCellUnderline(x: number, x2: number, y: number, y2: number, cols: number, enabled: boolean): void {\n    while (x !== x2 || y !== y2) {\n      const row = this._rowElements[y];\n      if (!row) {\n        return;\n      }\n      const span = row.children[x] as HTMLElement;\n      if (span) {\n        span.style.textDecoration = enabled ? 'underline' : 'none';\n      }\n      if (++x >= cols) {\n        x = 0;\n        y++;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, IColor } from 'common/Types';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { NULL_CELL_CODE, WHITESPACE_CELL_CHAR, Attributes } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService, ICoreService, IDecorationService, IOptionsService } from 'common/services/Services';\nimport { color, rgba } from 'common/Color';\nimport { IColorSet } from 'browser/Types';\nimport { ICharacterJoinerService, ISelectionService } from 'browser/services/Services';\nimport { JoinedCellData } from 'browser/services/CharacterJoinerService';\nimport { excludeFromContrastRatioDemands } from 'browser/renderer/RendererUtils';\n\nexport const BOLD_CLASS = 'xterm-bold';\nexport const DIM_CLASS = 'xterm-dim';\nexport const ITALIC_CLASS = 'xterm-italic';\nexport const UNDERLINE_CLASS = 'xterm-underline';\nexport const STRIKETHROUGH_CLASS = 'xterm-strikethrough';\nexport const CURSOR_CLASS = 'xterm-cursor';\nexport const CURSOR_BLINK_CLASS = 'xterm-cursor-blink';\nexport const CURSOR_STYLE_BLOCK_CLASS = 'xterm-cursor-block';\nexport const CURSOR_STYLE_BAR_CLASS = 'xterm-cursor-bar';\nexport const CURSOR_STYLE_UNDERLINE_CLASS = 'xterm-cursor-underline';\n\nexport class DomRendererRowFactory {\n  private _workCell: CellData = new CellData();\n\n  private _selectionStart: [number, number] | undefined;\n  private _selectionEnd: [number, number] | undefined;\n  private _columnSelectMode: boolean = false;\n\n  constructor(\n    private readonly _document: Document,\n    private _colors: IColorSet,\n    @ICharacterJoinerService private readonly _characterJoinerService: ICharacterJoinerService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IDecorationService private readonly _decorationService: IDecorationService\n  ) {\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionStart = start;\n    this._selectionEnd = end;\n    this._columnSelectMode = columnSelectMode;\n  }\n\n  public createRow(lineData: IBufferLine, row: number, isCursorRow: boolean, cursorStyle: string | undefined, cursorX: number, cursorBlink: boolean, cellWidth: number, cols: number): DocumentFragment {\n    const fragment = this._document.createDocumentFragment();\n\n    const joinedRanges = this._characterJoinerService.getJoinedCharacters(row);\n    // Find the line length first, this prevents the need to output a bunch of\n    // empty cells at the end. This cannot easily be integrated into the main\n    // loop below because of the colCount feature (which can be removed after we\n    // properly support reflow and disallow data to go beyond the right-side of\n    // the viewport).\n    let lineLength = 0;\n    for (let x = Math.min(lineData.length, cols) - 1; x >= 0; x--) {\n      if (lineData.loadCell(x, this._workCell).getCode() !== NULL_CELL_CODE || (isCursorRow && x === cursorX)) {\n        lineLength = x + 1;\n        break;\n      }\n    }\n\n    for (let x = 0; x < lineLength; x++) {\n      lineData.loadCell(x, this._workCell);\n      let width = this._workCell.getWidth();\n\n      // The character to the left is a wide character, drawing is owned by the char at x-1\n      if (width === 0) {\n        continue;\n      }\n\n      // If true, indicates that the current character(s) to draw were joined.\n      let isJoined = false;\n      let lastCharX = x;\n\n      // Process any joined character ranges as needed. Because of how the\n      // ranges are produced, we know that they are valid for the characters\n      // and attributes of our input.\n      let cell = this._workCell;\n      if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n        isJoined = true;\n        const range = joinedRanges.shift()!;\n\n        // We already know the exact start and end column of the joined range,\n        // so we get the string and width representing it directly\n        cell = new JoinedCellData(\n          this._workCell,\n          lineData.translateToString(true, range[0], range[1]),\n          range[1] - range[0]\n        );\n\n        // Skip over the cells occupied by this range in the loop\n        lastCharX = range[1] - 1;\n\n        // Recalculate width\n        width = cell.getWidth();\n      }\n\n      const charElement = this._document.createElement('span');\n      if (width > 1) {\n        charElement.style.width = `${cellWidth * width}px`;\n      }\n\n      if (isJoined) {\n        // Ligatures in the DOM renderer must use display inline, as they may not show with\n        // inline-block if they are outside the bounds of the element\n        charElement.style.display = 'inline';\n\n        // The DOM renderer colors the background of the cursor but for ligatures all cells are\n        // joined. The workaround here is to show a cursor around the whole ligature so it shows up,\n        // the cursor looks the same when on any character of the ligature though\n        if (cursorX >= x && cursorX <= lastCharX) {\n          cursorX = x;\n        }\n      }\n\n      if (!this._coreService.isCursorHidden && isCursorRow && x === cursorX) {\n        charElement.classList.add(CURSOR_CLASS);\n\n        if (cursorBlink) {\n          charElement.classList.add(CURSOR_BLINK_CLASS);\n        }\n\n        switch (cursorStyle) {\n          case 'bar':\n            charElement.classList.add(CURSOR_STYLE_BAR_CLASS);\n            break;\n          case 'underline':\n            charElement.classList.add(CURSOR_STYLE_UNDERLINE_CLASS);\n            break;\n          default:\n            charElement.classList.add(CURSOR_STYLE_BLOCK_CLASS);\n            break;\n        }\n      }\n\n      if (cell.isBold()) {\n        charElement.classList.add(BOLD_CLASS);\n      }\n\n      if (cell.isItalic()) {\n        charElement.classList.add(ITALIC_CLASS);\n      }\n\n      if (cell.isDim()) {\n        charElement.classList.add(DIM_CLASS);\n      }\n\n      if (cell.isUnderline()) {\n        charElement.classList.add(UNDERLINE_CLASS);\n      }\n\n      if (cell.isInvisible()) {\n        charElement.textContent = WHITESPACE_CELL_CHAR;\n      } else {\n        charElement.textContent = cell.getChars() || WHITESPACE_CELL_CHAR;\n      }\n\n      if (cell.isStrikethrough()) {\n        charElement.classList.add(STRIKETHROUGH_CLASS);\n      }\n\n      let fg = cell.getFgColor();\n      let fgColorMode = cell.getFgColorMode();\n      let bg = cell.getBgColor();\n      let bgColorMode = cell.getBgColorMode();\n      const isInverse = !!cell.isInverse();\n      if (isInverse) {\n        const temp = fg;\n        fg = bg;\n        bg = temp;\n        const temp2 = fgColorMode;\n        fgColorMode = bgColorMode;\n        bgColorMode = temp2;\n      }\n\n      // Apply any decoration foreground/background overrides, this must happen after inverse has\n      // been applied\n      let bgOverride: IColor | undefined;\n      let fgOverride: IColor | undefined;\n      let isTop = false;\n      for (const d of this._decorationService.getDecorationsAtCell(x, row)) {\n        if (d.options.layer !== 'top' && isTop) {\n          continue;\n        }\n        if (d.backgroundColorRGB) {\n          bgColorMode = Attributes.CM_RGB;\n          bg = d.backgroundColorRGB.rgba >> 8 & 0xFFFFFF;\n          bgOverride = d.backgroundColorRGB;\n        }\n        if (d.foregroundColorRGB) {\n          fgColorMode = Attributes.CM_RGB;\n          fg = d.foregroundColorRGB.rgba >> 8 & 0xFFFFFF;\n          fgOverride = d.foregroundColorRGB;\n        }\n        isTop = d.options.layer === 'top';\n      }\n\n      // Apply selection foreground if applicable\n      const isInSelection = this._isCellInSelection(x, row);\n      if (!isTop) {\n        if (this._colors.selectionForeground && isInSelection) {\n          fgColorMode = Attributes.CM_RGB;\n          fg = this._colors.selectionForeground.rgba >> 8 & 0xFFFFFF;\n          fgOverride = this._colors.selectionForeground;\n        }\n      }\n\n      // If in the selection, force the element to be above the selection to improve contrast and\n      // support opaque selections\n      if (isInSelection) {\n        bgOverride = this._colors.selectionOpaque;\n        isTop = true;\n      }\n\n      // If it's a top decoration, render above the selection\n      if (isTop) {\n        charElement.classList.add(`xterm-decoration-top`);\n      }\n\n      // Background\n      let resolvedBg: IColor;\n      switch (bgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          resolvedBg = this._colors.ansi[bg];\n          charElement.classList.add(`xterm-bg-${bg}`);\n          break;\n        case Attributes.CM_RGB:\n          resolvedBg = rgba.toColor(bg >> 16, bg >> 8 & 0xFF, bg & 0xFF);\n          this._addStyle(charElement, `background-color:#${padStart((bg >>> 0).toString(16), '0', 6)}`);\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (isInverse) {\n            resolvedBg = this._colors.foreground;\n            charElement.classList.add(`xterm-bg-${INVERTED_DEFAULT_COLOR}`);\n          } else {\n            resolvedBg = this._colors.background;\n          }\n      }\n\n      // Foreground\n      switch (fgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          if (cell.isBold() && fg < 8 && this._optionsService.rawOptions.drawBoldTextInBrightColors) {\n            fg += 8;\n          }\n          if (!this._applyMinimumContrast(charElement, resolvedBg, this._colors.ansi[fg], cell, bgOverride, undefined)) {\n            charElement.classList.add(`xterm-fg-${fg}`);\n          }\n          break;\n        case Attributes.CM_RGB:\n          const color = rgba.toColor(\n            (fg >> 16) & 0xFF,\n            (fg >>  8) & 0xFF,\n            (fg      ) & 0xFF\n          );\n          if (!this._applyMinimumContrast(charElement, resolvedBg, color, cell, bgOverride, fgOverride)) {\n            this._addStyle(charElement, `color:#${padStart(fg.toString(16), '0', 6)}`);\n          }\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (!this._applyMinimumContrast(charElement, resolvedBg, this._colors.foreground, cell, bgOverride, undefined)) {\n            if (isInverse) {\n              charElement.classList.add(`xterm-fg-${INVERTED_DEFAULT_COLOR}`);\n            }\n          }\n      }\n\n      fragment.appendChild(charElement);\n\n      x = lastCharX;\n    }\n    return fragment;\n  }\n\n  private _applyMinimumContrast(element: HTMLElement, bg: IColor, fg: IColor, cell: ICellData, bgOverride: IColor | undefined, fgOverride: IColor | undefined): boolean {\n    if (this._optionsService.rawOptions.minimumContrastRatio === 1 || excludeFromContrastRatioDemands(cell.getCode())) {\n      return false;\n    }\n\n    // Try get from cache first, only use the cache when there are no decoration overrides\n    let adjustedColor: IColor | undefined | null = undefined;\n    if (!bgOverride && !fgOverride) {\n      adjustedColor = this._colors.contrastCache.getColor(bg.rgba, fg.rgba);\n    }\n\n    // Calculate and store in cache\n    if (adjustedColor === undefined) {\n      adjustedColor = color.ensureContrastRatio(bgOverride || bg, fgOverride || fg, this._optionsService.rawOptions.minimumContrastRatio);\n      this._colors.contrastCache.setColor((bgOverride || bg).rgba, (fgOverride || fg).rgba, adjustedColor ?? null);\n    }\n\n    if (adjustedColor) {\n      this._addStyle(element, `color:${adjustedColor.css}`);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _addStyle(element: HTMLElement, style: string): void {\n    element.setAttribute('style', `${element.getAttribute('style') || ''}${style};`);\n  }\n\n  private _isCellInSelection(x: number, y: number): boolean {\n    const start = this._selectionStart;\n    const end = this._selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    if (this._columnSelectMode) {\n      if (start[0] <= end[0]) {\n        return x >= start[0] && y >= start[1] &&\n          x < end[0] && y <= end[1];\n      }\n      return x < start[0] && y >= start[1] &&\n        x >= end[0] && y <= end[1];\n    }\n    return (y > start[1] && y < end[1]) ||\n        (start[1] === end[1] && y === start[1] && x >= start[0] && x < end[0]) ||\n        (start[1] < end[1] && y === end[1] && x < end[0]) ||\n        (start[1] < end[1] && y === start[1] && x >= start[0]);\n  }\n}\n\nfunction padStart(text: string, padChar: string, length: number): string {\n  while (text.length < length) {\n    text = padChar + text;\n  }\n  return text;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService } from 'common/services/Services';\n\n/**\n * Represents a selection within the buffer. This model only cares about column\n * and row coordinates, not wide characters.\n */\nexport class SelectionModel {\n  /**\n   * Whether select all is currently active.\n   */\n  public isSelectAllActive: boolean = false;\n\n  /**\n   * The minimal length of the selection from the start position. When double\n   * clicking on a word, the word will be selected which makes the selection\n   * start at the start of the word and makes this variable the length.\n   */\n  public selectionStartLength: number = 0;\n\n  /**\n   * The [x, y] position the selection starts at.\n   */\n  public selectionStart: [number, number] | undefined;\n\n  /**\n   * The [x, y] position the selection ends at.\n   */\n  public selectionEnd: [number, number] | undefined;\n\n  constructor(\n    private _bufferService: IBufferService\n  ) {\n  }\n\n  /**\n   * Clears the current selection.\n   */\n  public clearSelection(): void {\n    this.selectionStart = undefined;\n    this.selectionEnd = undefined;\n    this.isSelectAllActive = false;\n    this.selectionStartLength = 0;\n  }\n\n  /**\n   * The final selection start, taking into consideration select all.\n   */\n  public get finalSelectionStart(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [0, 0];\n    }\n\n    if (!this.selectionEnd || !this.selectionStart) {\n      return this.selectionStart;\n    }\n\n    return this.areSelectionValuesReversed() ? this.selectionEnd : this.selectionStart;\n  }\n\n  /**\n   * The final selection end, taking into consideration select all, double click\n   * word selection and triple click line selection.\n   */\n  public get finalSelectionEnd(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [this._bufferService.cols, this._bufferService.buffer.ybase + this._bufferService.rows - 1];\n    }\n\n    if (!this.selectionStart) {\n      return undefined;\n    }\n\n    // Use the selection start + length if the end doesn't exist or they're reversed\n    if (!this.selectionEnd || this.areSelectionValuesReversed()) {\n      const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n      if (startPlusLength > this._bufferService.cols) {\n        // Ensure the trailing EOL isn't included when the selection ends on the right edge\n        if (startPlusLength % this._bufferService.cols === 0) {\n          return [this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols) - 1];\n        }\n        return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n      }\n      return [startPlusLength, this.selectionStart[1]];\n    }\n\n    // Ensure the the word/line is selected after a double/triple click\n    if (this.selectionStartLength) {\n      // Select the larger of the two when start and end are on the same line\n      if (this.selectionEnd[1] === this.selectionStart[1]) {\n        // Keep the whole wrapped word/line selected if the content wraps multiple lines\n        const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n        if (startPlusLength > this._bufferService.cols) {\n          return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n        }\n        return [Math.max(startPlusLength, this.selectionEnd[0]), this.selectionEnd[1]];\n      }\n    }\n    return this.selectionEnd;\n  }\n\n  /**\n   * Returns whether the selection start and end are reversed.\n   */\n  public areSelectionValuesReversed(): boolean {\n    const start = this.selectionStart;\n    const end = this.selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[1] > end[1] || (start[1] === end[1] && start[0] > end[0]);\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   * @return Whether a refresh is necessary.\n   */\n  public onTrim(amount: number): boolean {\n    // Adjust the selection position based on the trimmed amount.\n    if (this.selectionStart) {\n      this.selectionStart[1] -= amount;\n    }\n    if (this.selectionEnd) {\n      this.selectionEnd[1] -= amount;\n    }\n\n    // The selection has moved off the buffer, clear it.\n    if (this.selectionEnd && this.selectionEnd[1] < 0) {\n      this.clearSelection();\n      return true;\n    }\n\n    // If the selection start is trimmed, ensure the start column is 0.\n    if (this.selectionStart && this.selectionStart[1] < 0) {\n      this.selectionStart[1] = 0;\n    }\n    return false;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { IEvent, EventEmitter } from 'common/EventEmitter';\nimport { ICharSizeService } from 'browser/services/Services';\n\nexport class CharSizeService implements ICharSizeService {\n  public serviceBrand: undefined;\n\n  public width: number = 0;\n  public height: number = 0;\n  private _measureStrategy: IMeasureStrategy;\n\n  public get hasValidSize(): boolean { return this.width > 0 && this.height > 0; }\n\n  private _onCharSizeChange = new EventEmitter<void>();\n  public get onCharSizeChange(): IEvent<void> { return this._onCharSizeChange.event; }\n\n  constructor(\n    document: Document,\n    parentElement: HTMLElement,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    this._measureStrategy = new DomMeasureStrategy(document, parentElement, this._optionsService);\n  }\n\n  public measure(): void {\n    const result = this._measureStrategy.measure();\n    if (result.width !== this.width || result.height !== this.height) {\n      this.width = result.width;\n      this.height = result.height;\n      this._onCharSizeChange.fire();\n    }\n  }\n}\n\ninterface IMeasureStrategy {\n  measure(): IReadonlyMeasureResult;\n}\n\ninterface IReadonlyMeasureResult {\n  readonly width: number;\n  readonly height: number;\n}\n\ninterface IMeasureResult {\n  width: number;\n  height: number;\n}\n\n// TODO: For supporting browsers we should also provide a CanvasCharDimensionsProvider that uses ctx.measureText\nclass DomMeasureStrategy implements IMeasureStrategy {\n  private _result: IMeasureResult = { width: 0, height: 0 };\n  private _measureElement: HTMLElement;\n\n  constructor(\n    private _document: Document,\n    private _parentElement: HTMLElement,\n    private _optionsService: IOptionsService\n  ) {\n    this._measureElement = this._document.createElement('span');\n    this._measureElement.classList.add('xterm-char-measure-element');\n    this._measureElement.textContent = 'W';\n    this._measureElement.setAttribute('aria-hidden', 'true');\n    this._parentElement.appendChild(this._measureElement);\n  }\n\n  public measure(): IReadonlyMeasureResult {\n    this._measureElement.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n    this._measureElement.style.fontSize = `${this._optionsService.rawOptions.fontSize}px`;\n\n    // Note that this triggers a synchronous layout\n    const geometry = this._measureElement.getBoundingClientRect();\n\n    // If values are 0 then the element is likely currently display:none, in which case we should\n    // retain the previous value.\n    if (geometry.width !== 0 && geometry.height !== 0) {\n      this._result.width = geometry.width;\n      this._result.height = Math.ceil(geometry.height);\n    }\n\n    return this._result;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, CharData } from 'common/Types';\nimport { ICharacterJoiner } from 'browser/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WHITESPACE_CELL_CHAR, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService } from 'common/services/Services';\nimport { ICharacterJoinerService } from 'browser/services/Services';\n\nexport class JoinedCellData extends AttributeData implements ICellData {\n  private _width: number;\n  // .content carries no meaning for joined CellData, simply nullify it\n  // thus we have to overload all other .content accessors\n  public content: number = 0;\n  public fg: number;\n  public bg: number;\n  public combinedData: string = '';\n\n  constructor(firstCell: ICellData, chars: string, width: number) {\n    super();\n    this.fg = firstCell.fg;\n    this.bg = firstCell.bg;\n    this.combinedData = chars;\n    this._width = width;\n  }\n\n  public isCombined(): number {\n    // always mark joined cell data as combined\n    return Content.IS_COMBINED_MASK;\n  }\n\n  public getWidth(): number {\n    return this._width;\n  }\n\n  public getChars(): string {\n    return this.combinedData;\n  }\n\n  public getCode(): number {\n    // code always gets the highest possible fake codepoint (read as -1)\n    // this is needed as code is used by caches as identifier\n    return 0x1FFFFF;\n  }\n\n  public setFromCharData(value: CharData): void {\n    throw new Error('not implemented');\n  }\n\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n\nexport class CharacterJoinerService implements ICharacterJoinerService {\n  public serviceBrand: undefined;\n\n  private _characterJoiners: ICharacterJoiner[] = [];\n  private _nextCharacterJoinerId: number = 0;\n  private _workCell: CellData = new CellData();\n\n  constructor(\n    @IBufferService private _bufferService: IBufferService\n  ) { }\n\n  public register(handler: (text: string) => [number, number][]): number {\n    const joiner: ICharacterJoiner = {\n      id: this._nextCharacterJoinerId++,\n      handler\n    };\n\n    this._characterJoiners.push(joiner);\n    return joiner.id;\n  }\n\n  public deregister(joinerId: number): boolean {\n    for (let i = 0; i < this._characterJoiners.length; i++) {\n      if (this._characterJoiners[i].id === joinerId) {\n        this._characterJoiners.splice(i, 1);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public getJoinedCharacters(row: number): [number, number][] {\n    if (this._characterJoiners.length === 0) {\n      return [];\n    }\n\n    const line = this._bufferService.buffer.lines.get(row);\n    if (!line || line.length === 0) {\n      return [];\n    }\n\n    const ranges: [number, number][] = [];\n    const lineStr = line.translateToString(true);\n\n    // Because some cells can be represented by multiple javascript characters,\n    // we track the cell and the string indexes separately. This allows us to\n    // translate the string ranges we get from the joiners back into cell ranges\n    // for use when rendering\n    let rangeStartColumn = 0;\n    let currentStringIndex = 0;\n    let rangeStartStringIndex = 0;\n    let rangeAttrFG = line.getFg(0);\n    let rangeAttrBG = line.getBg(0);\n\n    for (let x = 0; x < line.getTrimmedLength(); x++) {\n      line.loadCell(x, this._workCell);\n\n      if (this._workCell.getWidth() === 0) {\n        // If this character is of width 0, skip it.\n        continue;\n      }\n\n      // End of range\n      if (this._workCell.fg !== rangeAttrFG || this._workCell.bg !== rangeAttrBG) {\n        // If we ended up with a sequence of more than one character,\n        // look for ranges to join.\n        if (x - rangeStartColumn > 1) {\n          const joinedRanges = this._getJoinedRanges(\n            lineStr,\n            rangeStartStringIndex,\n            currentStringIndex,\n            line,\n            rangeStartColumn\n          );\n          for (let i = 0; i < joinedRanges.length; i++) {\n            ranges.push(joinedRanges[i]);\n          }\n        }\n\n        // Reset our markers for a new range.\n        rangeStartColumn = x;\n        rangeStartStringIndex = currentStringIndex;\n        rangeAttrFG = this._workCell.fg;\n        rangeAttrBG = this._workCell.bg;\n      }\n\n      currentStringIndex += this._workCell.getChars().length || WHITESPACE_CELL_CHAR.length;\n    }\n\n    // Process any trailing ranges.\n    if (this._bufferService.cols - rangeStartColumn > 1) {\n      const joinedRanges = this._getJoinedRanges(\n        lineStr,\n        rangeStartStringIndex,\n        currentStringIndex,\n        line,\n        rangeStartColumn\n      );\n      for (let i = 0; i < joinedRanges.length; i++) {\n        ranges.push(joinedRanges[i]);\n      }\n    }\n\n    return ranges;\n  }\n\n  /**\n   * Given a segment of a line of text, find all ranges of text that should be\n   * joined in a single rendering unit. Ranges are internally converted to\n   * column ranges, rather than string ranges.\n   * @param line String representation of the full line of text\n   * @param startIndex Start position of the range to search in the string (inclusive)\n   * @param endIndex End position of the range to search in the string (exclusive)\n   */\n  private _getJoinedRanges(line: string, startIndex: number, endIndex: number, lineData: IBufferLine, startCol: number): [number, number][] {\n    const text = line.substring(startIndex, endIndex);\n    // At this point we already know that there is at least one joiner so\n    // we can just pull its value and assign it directly rather than\n    // merging it into an empty array, which incurs unnecessary writes.\n    let allJoinedRanges: [number, number][] = [];\n    try {\n      allJoinedRanges = this._characterJoiners[0].handler(text);\n    } catch (error) {\n      console.error(error);\n    }\n    for (let i = 1; i < this._characterJoiners.length; i++) {\n      // We merge any overlapping ranges across the different joiners\n      try {\n        const joinerRanges = this._characterJoiners[i].handler(text);\n        for (let j = 0; j < joinerRanges.length; j++) {\n          CharacterJoinerService._mergeRanges(allJoinedRanges, joinerRanges[j]);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    this._stringRangesToCellRanges(allJoinedRanges, lineData, startCol);\n    return allJoinedRanges;\n  }\n\n  /**\n   * Modifies the provided ranges in-place to adjust for variations between\n   * string length and cell width so that the range represents a cell range,\n   * rather than the string range the joiner provides.\n   * @param ranges String ranges containing start (inclusive) and end (exclusive) index\n   * @param line Cell data for the relevant line in the terminal\n   * @param startCol Offset within the line to start from\n   */\n  private _stringRangesToCellRanges(ranges: [number, number][], line: IBufferLine, startCol: number): void {\n    let currentRangeIndex = 0;\n    let currentRangeStarted = false;\n    let currentStringIndex = 0;\n    let currentRange = ranges[currentRangeIndex];\n\n    // If we got through all of the ranges, stop searching\n    if (!currentRange) {\n      return;\n    }\n\n    for (let x = startCol; x < this._bufferService.cols; x++) {\n      const width = line.getWidth(x);\n      const length = line.getString(x).length || WHITESPACE_CELL_CHAR.length;\n\n      // We skip zero-width characters when creating the string to join the text\n      // so we do the same here\n      if (width === 0) {\n        continue;\n      }\n\n      // Adjust the start of the range\n      if (!currentRangeStarted && currentRange[0] <= currentStringIndex) {\n        currentRange[0] = x;\n        currentRangeStarted = true;\n      }\n\n      // Adjust the end of the range\n      if (currentRange[1] <= currentStringIndex) {\n        currentRange[1] = x;\n\n        // We're finished with this range, so we move to the next one\n        currentRange = ranges[++currentRangeIndex];\n\n        // If there are no more ranges left, stop searching\n        if (!currentRange) {\n          break;\n        }\n\n        // Ranges can be on adjacent characters. Because the end index of the\n        // ranges are exclusive, this means that the index for the start of a\n        // range can be the same as the end index of the previous range. To\n        // account for the start of the next range, we check here just in case.\n        if (currentRange[0] <= currentStringIndex) {\n          currentRange[0] = x;\n          currentRangeStarted = true;\n        } else {\n          currentRangeStarted = false;\n        }\n      }\n\n      // Adjust the string index based on the character length to line up with\n      // the column adjustment\n      currentStringIndex += length;\n    }\n\n    // If there is still a range left at the end, it must extend all the way to\n    // the end of the line.\n    if (currentRange) {\n      currentRange[1] = this._bufferService.cols;\n    }\n  }\n\n  /**\n   * Merges the range defined by the provided start and end into the list of\n   * existing ranges. The merge is done in place on the existing range for\n   * performance and is also returned.\n   * @param ranges Existing range list\n   * @param newRange Tuple of two numbers representing the new range to merge in.\n   * @returns The ranges input with the new range merged in place\n   */\n  private static _mergeRanges(ranges: [number, number][], newRange: [number, number]): [number, number][] {\n    let inRange = false;\n    for (let i = 0; i < ranges.length; i++) {\n      const range = ranges[i];\n      if (!inRange) {\n        if (newRange[1] <= range[0]) {\n          // Case 1: New range is before the search range\n          ranges.splice(i, 0, newRange);\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 2: New range is either wholly contained within the\n          // search range or overlaps with the front of it\n          range[0] = Math.min(newRange[0], range[0]);\n          return ranges;\n        }\n\n        if (newRange[0] < range[1]) {\n          // Case 3: New range either wholly contains the search range\n          // or overlaps with the end of it\n          range[0] = Math.min(newRange[0], range[0]);\n          inRange = true;\n        }\n\n        // Case 4: New range starts after the search range\n        continue;\n      } else {\n        if (newRange[1] <= range[0]) {\n          // Case 5: New range extends from previous range but doesn't\n          // reach the current one\n          ranges[i - 1][1] = newRange[1];\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 6: New range extends from prvious range into the\n          // current range\n          ranges[i - 1][1] = Math.max(newRange[1], range[1]);\n          ranges.splice(i, 1);\n          return ranges;\n        }\n\n        // Case 7: New range extends from previous range past the\n        // end of the current range\n        ranges.splice(i, 1);\n        i--;\n      }\n    }\n\n    if (inRange) {\n      // Case 8: New range extends past the last existing range\n      ranges[ranges.length - 1][1] = newRange[1];\n    } else {\n      // Case 9: New range starts after the last existing range\n      ranges.push(newRange);\n    }\n\n    return ranges;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreBrowserService } from './Services';\n\nexport class CoreBrowserService implements ICoreBrowserService {\n  public serviceBrand: undefined;\n\n  constructor(\n    private _textarea: HTMLTextAreaElement\n  ) {\n  }\n\n  public get isFocused(): boolean {\n    const docOrShadowRoot = this._textarea.getRootNode ? this._textarea.getRootNode() as Document | ShadowRoot : document;\n    return docOrShadowRoot.activeElement === this._textarea && document.hasFocus();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharSizeService, IRenderService, IMouseService } from './Services';\nimport { getCoords, getRawByteCoords } from 'browser/input/Mouse';\n\nexport class MouseService implements IMouseService {\n  public serviceBrand: undefined;\n\n  constructor(\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService\n  ) {\n  }\n\n  public getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined {\n    return getCoords(\n      window,\n      event,\n      element,\n      colCount,\n      rowCount,\n      this._charSizeService.hasValidSize,\n      this._renderService.dimensions.actualCellWidth,\n      this._renderService.dimensions.actualCellHeight,\n      isSelection\n    );\n  }\n\n  public getRawByteCoords(event: MouseEvent, element: HTMLElement, colCount: number, rowCount: number): { x: number, y: number } | undefined {\n    const coords = this.getCoords(event, element, colCount, rowCount);\n    return getRawByteCoords(coords);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderer, IRenderDimensions } from 'browser/renderer/Types';\nimport { RenderDebouncer } from 'browser/RenderDebouncer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet, IRenderDebouncer, IRenderDebouncerWithCallback } from 'browser/Types';\nimport { IOptionsService, IBufferService, IDecorationService } from 'common/services/Services';\nimport { ICharSizeService, IRenderService } from 'browser/services/Services';\n\ninterface ISelectionState {\n  start: [number, number] | undefined;\n  end: [number, number] | undefined;\n  columnSelectMode: boolean;\n}\n\nexport class RenderService extends Disposable implements IRenderService {\n  public serviceBrand: undefined;\n\n  private _renderDebouncer: IRenderDebouncerWithCallback;\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _isPaused: boolean = false;\n  private _needsFullRefresh: boolean = false;\n  private _isNextRenderRedrawOnly: boolean = true;\n  private _needsSelectionRefresh: boolean = false;\n  private _canvasWidth: number = 0;\n  private _canvasHeight: number = 0;\n  private _selectionState: ISelectionState = {\n    start: undefined,\n    end: undefined,\n    columnSelectMode: false\n  };\n\n  private _onDimensionsChange = new EventEmitter<IRenderDimensions>();\n  public get onDimensionsChange(): IEvent<IRenderDimensions> { return this._onDimensionsChange.event; }\n  private _onRenderedViewportChange = new EventEmitter<{ start: number, end: number }>();\n  public get onRenderedViewportChange(): IEvent<{ start: number, end: number }> { return this._onRenderedViewportChange.event; }\n  private _onRender = new EventEmitter<{ start: number, end: number }>();\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._onRender.event; }\n  private _onRefreshRequest = new EventEmitter<{ start: number, end: number }>();\n  public get onRefreshRequest(): IEvent<{ start: number, end: number }> { return this._onRefreshRequest.event; }\n\n  public get dimensions(): IRenderDimensions { return this._renderer.dimensions; }\n\n  constructor(\n    private _renderer: IRenderer,\n    private _rowCount: number,\n    screenElement: HTMLElement,\n    @IOptionsService optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IDecorationService decorationService: IDecorationService,\n    @IBufferService bufferService: IBufferService\n  ) {\n    super();\n\n    this.register({ dispose: () => this._renderer.dispose() });\n\n    this._renderDebouncer = new RenderDebouncer((start, end) => this._renderRows(start, end));\n    this.register(this._renderDebouncer);\n\n    this._screenDprMonitor = new ScreenDprMonitor();\n    this._screenDprMonitor.setListener(() => this.onDevicePixelRatioChange());\n    this.register(this._screenDprMonitor);\n\n    this.register(bufferService.onResize(() => this._fullRefresh()));\n    this.register(bufferService.buffers.onBufferActivate(() => this._renderer?.clear()));\n    this.register(optionsService.onOptionChange(() => this._handleOptionsChanged()));\n    this.register(this._charSizeService.onCharSizeChange(() => this.onCharSizeChanged()));\n\n    // Do a full refresh whenever any decoration is added or removed. This may not actually result\n    // in changes but since decorations should be used sparingly or added/removed all in the same\n    // frame this should have minimal performance impact.\n    this.register(decorationService.onDecorationRegistered(() => this._fullRefresh()));\n    this.register(decorationService.onDecorationRemoved(() => this._fullRefresh()));\n\n    // No need to register this as renderer is explicitly disposed in RenderService.dispose\n    this._renderer.onRequestRedraw(e => this.refreshRows(e.start, e.end, true));\n\n    // dprchange should handle this case, we need this as well for browsers that don't support the\n    // matchMedia query.\n    this.register(addDisposableDomListener(window, 'resize', () => this.onDevicePixelRatioChange()));\n\n    // Detect whether IntersectionObserver is detected and enable renderer pause\n    // and resume based on terminal visibility if so\n    if ('IntersectionObserver' in window) {\n      const observer = new IntersectionObserver(e => this._onIntersectionChange(e[e.length - 1]), { threshold: 0 });\n      observer.observe(screenElement);\n      this.register({ dispose: () => observer.disconnect() });\n    }\n  }\n\n  private _onIntersectionChange(entry: IntersectionObserverEntry): void {\n    this._isPaused = entry.isIntersecting === undefined ? (entry.intersectionRatio === 0) : !entry.isIntersecting;\n\n    // Terminal was hidden on open\n    if (!this._isPaused && !this._charSizeService.hasValidSize) {\n      this._charSizeService.measure();\n    }\n\n    if (!this._isPaused && this._needsFullRefresh) {\n      this.refreshRows(0, this._rowCount - 1);\n      this._needsFullRefresh = false;\n    }\n  }\n\n  public refreshRows(start: number, end: number, isRedrawOnly: boolean = false): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n      return;\n    }\n    if (!isRedrawOnly) {\n      this._isNextRenderRedrawOnly = false;\n    }\n    this._renderDebouncer.refresh(start, end, this._rowCount);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    this._renderer.renderRows(start, end);\n\n    // Update selection if needed\n    if (this._needsSelectionRefresh) {\n      this._renderer.onSelectionChanged(this._selectionState.start, this._selectionState.end, this._selectionState.columnSelectMode);\n      this._needsSelectionRefresh = false;\n    }\n\n    // Fire render event only if it was not a redraw\n    if (!this._isNextRenderRedrawOnly) {\n      this._onRenderedViewportChange.fire({ start, end });\n    }\n    this._onRender.fire({ start, end });\n    this._isNextRenderRedrawOnly = true;\n  }\n\n  public resize(cols: number, rows: number): void {\n    this._rowCount = rows;\n    this._fireOnCanvasResize();\n  }\n\n  private _handleOptionsChanged(): void {\n    this._renderer.onOptionsChanged();\n    this.refreshRows(0, this._rowCount - 1);\n    this._fireOnCanvasResize();\n  }\n\n  private _fireOnCanvasResize(): void {\n    // Don't fire the event if the dimensions haven't changed\n    if (this._renderer.dimensions.canvasWidth === this._canvasWidth && this._renderer.dimensions.canvasHeight === this._canvasHeight) {\n      return;\n    }\n    this._onDimensionsChange.fire(this._renderer.dimensions);\n  }\n\n  public dispose(): void {\n    super.dispose();\n  }\n\n  public setRenderer(renderer: IRenderer): void {\n    // TODO: RenderService should be the only one to dispose the renderer\n    this._renderer.dispose();\n    this._renderer = renderer;\n    this._renderer.onRequestRedraw(e => this.refreshRows(e.start, e.end, true));\n\n    // Force a refresh\n    this._needsSelectionRefresh = true;\n    this._fullRefresh();\n  }\n\n  public addRefreshCallback(callback: FrameRequestCallback): number {\n    return this._renderDebouncer.addRefreshCallback(callback);\n  }\n\n  private _fullRefresh(): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n    } else {\n      this.refreshRows(0, this._rowCount - 1);\n    }\n  }\n\n  public clearTextureAtlas(): void {\n    this._renderer?.clearTextureAtlas?.();\n    this._fullRefresh();\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._renderer.setColors(colors);\n    this._fullRefresh();\n  }\n\n  public onDevicePixelRatioChange(): void {\n    // Force char size measurement as DomMeasureStrategy(getBoundingClientRect) is not stable\n    // when devicePixelRatio changes\n    this._charSizeService.measure();\n\n    this._renderer.onDevicePixelRatioChange();\n    this.refreshRows(0, this._rowCount - 1);\n  }\n\n  public onResize(cols: number, rows: number): void {\n    this._renderer.onResize(cols, rows);\n    this._fullRefresh();\n  }\n\n  // TODO: Is this useful when we have onResize?\n  public onCharSizeChanged(): void {\n    this._renderer.onCharSizeChanged();\n  }\n\n  public onBlur(): void {\n    this._renderer.onBlur();\n  }\n\n  public onFocus(): void {\n    this._renderer.onFocus();\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionState.start = start;\n    this._selectionState.end = end;\n    this._selectionState.columnSelectMode = columnSelectMode;\n    this._renderer.onSelectionChanged(start, end, columnSelectMode);\n  }\n\n  public onCursorMove(): void {\n    this._renderer.onCursorMove();\n  }\n\n  public clear(): void {\n    this._renderer.clear();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionRedrawRequestEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferLine, IDisposable } from 'common/Types';\nimport * as Browser from 'common/Platform';\nimport { SelectionModel } from 'browser/selection/SelectionModel';\nimport { CellData } from 'common/buffer/CellData';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IMouseService, ISelectionService, IRenderService } from 'browser/services/Services';\nimport { IBufferRange, ILinkifier2 } from 'browser/Types';\nimport { IBufferService, IOptionsService, ICoreService } from 'common/services/Services';\nimport { getCoordsRelativeToElement } from 'browser/input/Mouse';\nimport { moveToCellSequence } from 'browser/input/MoveToCell';\nimport { Disposable } from 'common/Lifecycle';\nimport { getRangeLength } from 'common/buffer/BufferRange';\n\n/**\n * The number of pixels the mouse needs to be above or below the viewport in\n * order to scroll at the maximum speed.\n */\nconst DRAG_SCROLL_MAX_THRESHOLD = 50;\n\n/**\n * The maximum scrolling speed\n */\nconst DRAG_SCROLL_MAX_SPEED = 15;\n\n/**\n * The number of milliseconds between drag scroll updates.\n */\nconst DRAG_SCROLL_INTERVAL = 50;\n\n/**\n * The maximum amount of time that can have elapsed for an alt click to move the\n * cursor.\n */\nconst ALT_CLICK_MOVE_CURSOR_TIME = 500;\n\nconst NON_BREAKING_SPACE_CHAR = String.fromCharCode(160);\nconst ALL_NON_BREAKING_SPACE_REGEX = new RegExp(NON_BREAKING_SPACE_CHAR, 'g');\n\n/**\n * Represents a position of a word on a line.\n */\ninterface IWordPosition {\n  start: number;\n  length: number;\n}\n\n/**\n * A selection mode, this drives how the selection behaves on mouse move.\n */\nexport const enum SelectionMode {\n  NORMAL,\n  WORD,\n  LINE,\n  COLUMN\n}\n\n/**\n * A class that manages the selection of the terminal. With help from\n * SelectionModel, SelectionService handles with all logic associated with\n * dealing with the selection, including handling mouse interaction, wide\n * characters and fetching the actual text within the selection. Rendering is\n * not handled by the SelectionService but the onRedrawRequest event is fired\n * when the selection is ready to be redrawn (on an animation frame).\n */\nexport class SelectionService extends Disposable implements ISelectionService {\n  public serviceBrand: undefined;\n\n  protected _model: SelectionModel;\n\n  /**\n   * The amount to scroll every drag scroll update (depends on how far the mouse\n   * drag is above or below the terminal).\n   */\n  private _dragScrollAmount: number = 0;\n\n  /**\n   * The current selection mode.\n   */\n  protected _activeSelectionMode: SelectionMode;\n\n  /**\n   * A setInterval timer that is active while the mouse is down whose callback\n   * scrolls the viewport when necessary.\n   */\n  private _dragScrollIntervalTimer: number | undefined;\n\n  /**\n   * The animation frame ID used for refreshing the selection.\n   */\n  private _refreshAnimationFrame: number | undefined;\n\n  /**\n   * Whether selection is enabled.\n   */\n  private _enabled = true;\n\n  private _mouseMoveListener: EventListener;\n  private _mouseUpListener: EventListener;\n  private _trimListener: IDisposable;\n  private _workCell: CellData = new CellData();\n\n  private _mouseDownTimeStamp: number = 0;\n  private _oldHasSelection: boolean = false;\n  private _oldSelectionStart: [number, number] | undefined = undefined;\n  private _oldSelectionEnd: [number, number] | undefined = undefined;\n\n  private _onLinuxMouseSelection = this.register(new EventEmitter<string>());\n  public get onLinuxMouseSelection(): IEvent<string> { return this._onLinuxMouseSelection.event; }\n  private _onRedrawRequest = this.register(new EventEmitter<ISelectionRedrawRequestEvent>());\n  public get onRequestRedraw(): IEvent<ISelectionRedrawRequestEvent> { return this._onRedrawRequest.event; }\n  private _onSelectionChange = this.register(new EventEmitter<void>());\n  public get onSelectionChange(): IEvent<void> { return this._onSelectionChange.event; }\n  private _onRequestScrollLines = this.register(new EventEmitter<ISelectionRequestScrollLinesEvent>());\n  public get onRequestScrollLines(): IEvent<ISelectionRequestScrollLinesEvent> { return this._onRequestScrollLines.event; }\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _linkifier: ILinkifier2,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    // Init listeners\n    this._mouseMoveListener = event => this._onMouseMove(event as MouseEvent);\n    this._mouseUpListener = event => this._onMouseUp(event as MouseEvent);\n    this._coreService.onUserInput(() => {\n      if (this.hasSelection) {\n        this.clearSelection();\n      }\n    });\n    this._trimListener = this._bufferService.buffer.lines.onTrim(amount => this._onTrim(amount));\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._onBufferActivate(e)));\n\n    this.enable();\n\n    this._model = new SelectionModel(this._bufferService);\n    this._activeSelectionMode = SelectionMode.NORMAL;\n  }\n\n  public dispose(): void {\n    this._removeMouseDownListeners();\n  }\n\n  public reset(): void {\n    this.clearSelection();\n  }\n\n  /**\n   * Disables the selection manager. This is useful for when terminal mouse\n   * are enabled.\n   */\n  public disable(): void {\n    this.clearSelection();\n    this._enabled = false;\n  }\n\n  /**\n   * Enable the selection manager.\n   */\n  public enable(): void {\n    this._enabled = true;\n  }\n\n  public get selectionStart(): [number, number] | undefined { return this._model.finalSelectionStart; }\n  public get selectionEnd(): [number, number] | undefined { return this._model.finalSelectionEnd; }\n\n  /**\n   * Gets whether there is an active text selection.\n   */\n  public get hasSelection(): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[0] !== end[0] || start[1] !== end[1];\n  }\n\n  /**\n   * Gets the text currently selected.\n   */\n  public get selectionText(): string {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return '';\n    }\n\n    const buffer = this._bufferService.buffer;\n    const result: string[] = [];\n\n    if (this._activeSelectionMode === SelectionMode.COLUMN) {\n      // Ignore zero width selections\n      if (start[0] === end[0]) {\n        return '';\n      }\n\n      // For column selection it's not enough to rely on final selection's swapping of reversed\n      // values, it also needs the x coordinates to swap independently of the y coordinate is needed\n      const startCol = start[0] < end[0] ? start[0] : end[0];\n      const endCol = start[0] < end[0] ? end[0] : start[0];\n      for (let i = start[1]; i <= end[1]; i++) {\n        const lineText = buffer.translateBufferLineToString(i, true, startCol, endCol);\n        result.push(lineText);\n      }\n    } else {\n      // Get first row\n      const startRowEndCol = start[1] === end[1] ? end[0] : undefined;\n      result.push(buffer.translateBufferLineToString(start[1], true, start[0], startRowEndCol));\n\n      // Get middle rows\n      for (let i = start[1] + 1; i <= end[1] - 1; i++) {\n        const bufferLine = buffer.lines.get(i);\n        const lineText = buffer.translateBufferLineToString(i, true);\n        if (bufferLine?.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n\n      // Get final row\n      if (start[1] !== end[1]) {\n        const bufferLine = buffer.lines.get(end[1]);\n        const lineText = buffer.translateBufferLineToString(end[1], true, 0, end[0]);\n        if (bufferLine && bufferLine!.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n    }\n\n    // Format string by replacing non-breaking space chars with regular spaces\n    // and joining the array into a multi-line string.\n    const formattedResult = result.map(line => {\n      return line.replace(ALL_NON_BREAKING_SPACE_REGEX, ' ');\n    }).join(Browser.isWindows ? '\\r\\n' : '\\n');\n\n    return formattedResult;\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Queues a refresh, redrawing the selection on the next opportunity.\n   * @param isLinuxMouseSelection Whether the selection should be registered as a new\n   * selection on Linux.\n   */\n  public refresh(isLinuxMouseSelection?: boolean): void {\n    // Queue the refresh for the renderer\n    if (!this._refreshAnimationFrame) {\n      this._refreshAnimationFrame = window.requestAnimationFrame(() => this._refresh());\n    }\n\n    // If the platform is Linux and the refresh call comes from a mouse event,\n    // we need to update the selection for middle click to paste selection.\n    if (Browser.isLinux && isLinuxMouseSelection) {\n      const selectionText = this.selectionText;\n      if (selectionText.length) {\n        this._onLinuxMouseSelection.fire(this.selectionText);\n      }\n    }\n  }\n\n  /**\n   * Fires the refresh event, causing consumers to pick it up and redraw the\n   * selection state.\n   */\n  private _refresh(): void {\n    this._refreshAnimationFrame = undefined;\n    this._onRedrawRequest.fire({\n      start: this._model.finalSelectionStart,\n      end: this._model.finalSelectionEnd,\n      columnSelectMode: this._activeSelectionMode === SelectionMode.COLUMN\n    });\n  }\n\n  /**\n   * Checks if the current click was inside the current selection\n   * @param event The mouse event\n   */\n  private _isClickInSelection(event: MouseEvent): boolean {\n    const coords = this._getMouseBufferCoords(event);\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n\n    if (!start || !end || !coords) {\n      return false;\n    }\n\n    return this._areCoordsInSelection(coords, start, end);\n  }\n\n  public isCellInSelection(x: number, y: number): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return this._areCoordsInSelection([x, y], start, end);\n  }\n\n  protected _areCoordsInSelection(coords: [number, number], start: [number, number], end: [number, number]): boolean {\n    return (coords[1] > start[1] && coords[1] < end[1]) ||\n        (start[1] === end[1] && coords[1] === start[1] && coords[0] >= start[0] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === end[1] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === start[1] && coords[0] >= start[0]);\n  }\n\n  /**\n   * Selects word at the current mouse event coordinates.\n   * @param event The mouse event.\n   */\n  private _selectWordAtCursor(event: MouseEvent, allowWhitespaceOnlySelection: boolean): boolean {\n    // Check if there is a link under the cursor first and select that if so\n    const range = this._linkifier.currentLink?.link?.range;\n    if (range) {\n      this._model.selectionStart = [range.start.x - 1, range.start.y - 1];\n      this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._selectWordAt(coords, allowWhitespaceOnlySelection);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._model.isSelectAllActive = true;\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._model.clearSelection();\n    start = Math.max(start, 0);\n    end = Math.min(end, this._bufferService.buffer.lines.length - 1);\n    this._model.selectionStart = [0, start];\n    this._model.selectionEnd = [this._bufferService.cols, end];\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   */\n  private _onTrim(amount: number): void {\n    const needsRefresh = this._model.onTrim(amount);\n    if (needsRefresh) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * Gets the 0-based [x, y] buffer coordinates of the current mouse event.\n   * @param event The mouse event.\n   */\n  private _getMouseBufferCoords(event: MouseEvent): [number, number] | undefined {\n    const coords = this._mouseService.getCoords(event, this._screenElement, this._bufferService.cols, this._bufferService.rows, true);\n    if (!coords) {\n      return undefined;\n    }\n\n    // Convert to 0-based\n    coords[0]--;\n    coords[1]--;\n\n    // Convert viewport coords to buffer coords\n    coords[1] += this._bufferService.buffer.ydisp;\n    return coords;\n  }\n\n  /**\n   * Gets the amount the viewport should be scrolled based on how far out of the\n   * terminal the mouse is.\n   * @param event The mouse event.\n   */\n  private _getMouseEventScrollAmount(event: MouseEvent): number {\n    let offset = getCoordsRelativeToElement(window, event, this._screenElement)[1];\n    const terminalHeight = this._renderService.dimensions.canvasHeight;\n    if (offset >= 0 && offset <= terminalHeight) {\n      return 0;\n    }\n    if (offset > terminalHeight) {\n      offset -= terminalHeight;\n    }\n\n    offset = Math.min(Math.max(offset, -DRAG_SCROLL_MAX_THRESHOLD), DRAG_SCROLL_MAX_THRESHOLD);\n    offset /= DRAG_SCROLL_MAX_THRESHOLD;\n    return (offset / Math.abs(offset)) + Math.round(offset * (DRAG_SCROLL_MAX_SPEED - 1));\n  }\n\n  /**\n   * Returns whether the selection manager should force selection, regardless of\n   * whether the terminal is in mouse events mode.\n   * @param event The mouse event.\n   */\n  public shouldForceSelection(event: MouseEvent): boolean {\n    if (Browser.isMac) {\n      return event.altKey && this._optionsService.rawOptions.macOptionClickForcesSelection;\n    }\n\n    return event.shiftKey;\n  }\n\n  /**\n   * Handles te mousedown event, setting up for a new selection.\n   * @param event The mousedown event.\n   */\n  public onMouseDown(event: MouseEvent): void {\n    this._mouseDownTimeStamp = event.timeStamp;\n    // If we have selection, we want the context menu on right click even if the\n    // terminal is in mouse mode.\n    if (event.button === 2 && this.hasSelection) {\n      return;\n    }\n\n    // Only action the primary button\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Allow selection when using a specific modifier key, even when disabled\n    if (!this._enabled) {\n      if (!this.shouldForceSelection(event)) {\n        return;\n      }\n\n      // Don't send the mouse down event to the current process, we want to select\n      event.stopPropagation();\n    }\n\n    // Tell the browser not to start a regular selection\n    event.preventDefault();\n\n    // Reset drag scroll state\n    this._dragScrollAmount = 0;\n\n    if (this._enabled && event.shiftKey) {\n      this._onIncrementalClick(event);\n    } else {\n      if (event.detail === 1) {\n        this._onSingleClick(event);\n      } else if (event.detail === 2) {\n        this._onDoubleClick(event);\n      } else if (event.detail === 3) {\n        this._onTripleClick(event);\n      }\n    }\n\n    this._addMouseDownListeners();\n    this.refresh(true);\n  }\n\n  /**\n   * Adds listeners when mousedown is triggered.\n   */\n  private _addMouseDownListeners(): void {\n    // Listen on the document so that dragging outside of viewport works\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.addEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.addEventListener('mouseup', this._mouseUpListener);\n    }\n    this._dragScrollIntervalTimer = window.setInterval(() => this._dragScroll(), DRAG_SCROLL_INTERVAL);\n  }\n\n  /**\n   * Removes the listeners that are registered when mousedown is triggered.\n   */\n  private _removeMouseDownListeners(): void {\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.removeEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.removeEventListener('mouseup', this._mouseUpListener);\n    }\n    clearInterval(this._dragScrollIntervalTimer);\n    this._dragScrollIntervalTimer = undefined;\n  }\n\n  /**\n   * Performs an incremental click, setting the selection end position to the mouse\n   * position.\n   * @param event The mouse event.\n   */\n  private _onIncrementalClick(event: MouseEvent): void {\n    if (this._model.selectionStart) {\n      this._model.selectionEnd = this._getMouseBufferCoords(event);\n    }\n  }\n\n  /**\n   * Performs a single click, resetting relevant state and setting the selection\n   * start position.\n   * @param event The mouse event.\n   */\n  private _onSingleClick(event: MouseEvent): void {\n    this._model.selectionStartLength = 0;\n    this._model.isSelectAllActive = false;\n    this._activeSelectionMode = this.shouldColumnSelect(event) ? SelectionMode.COLUMN : SelectionMode.NORMAL;\n\n    // Initialize the new selection\n    this._model.selectionStart = this._getMouseBufferCoords(event);\n    if (!this._model.selectionStart) {\n      return;\n    }\n    this._model.selectionEnd = undefined;\n\n    // Ensure the line exists\n    const line = this._bufferService.buffer.lines.get(this._model.selectionStart[1]);\n    if (!line) {\n      return;\n    }\n\n    // Return early if the click event is not in the buffer (eg. in scroll bar)\n    if (line.length === this._model.selectionStart[0]) {\n      return;\n    }\n\n    // If the mouse is over the second half of a wide character, adjust the\n    // selection to cover the whole character\n    if (line.hasWidth(this._model.selectionStart[0]) === 0) {\n      this._model.selectionStart[0]++;\n    }\n  }\n\n  /**\n   * Performs a double click, selecting the current word.\n   * @param event The mouse event.\n   */\n  private _onDoubleClick(event: MouseEvent): void {\n    if (this._selectWordAtCursor(event, true)) {\n      this._activeSelectionMode = SelectionMode.WORD;\n    }\n  }\n\n  /**\n   * Performs a triple click, selecting the current line and activating line\n   * select mode.\n   * @param event The mouse event.\n   */\n  private _onTripleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.LINE;\n      this._selectLineAt(coords[1]);\n    }\n  }\n\n  /**\n   * Returns whether the selection manager should operate in column select mode\n   * @param event the mouse or keyboard event\n   */\n  public shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean {\n    return event.altKey && !(Browser.isMac && this._optionsService.rawOptions.macOptionClickForcesSelection);\n  }\n\n  /**\n   * Handles the mousemove event when the mouse button is down, recording the\n   * end of the selection and refreshing the selection.\n   * @param event The mousemove event.\n   */\n  private _onMouseMove(event: MouseEvent): void {\n    // If the mousemove listener is active it means that a selection is\n    // currently being made, we should stop propagation to prevent mouse events\n    // to be sent to the pty.\n    event.stopImmediatePropagation();\n\n    // Do nothing if there is no selection start, this can happen if the first\n    // click in the terminal is an incremental click\n    if (!this._model.selectionStart) {\n      return;\n    }\n\n    // Record the previous position so we know whether to redraw the selection\n    // at the end.\n    const previousSelectionEnd = this._model.selectionEnd ? [this._model.selectionEnd[0], this._model.selectionEnd[1]] : null;\n\n    // Set the initial selection end based on the mouse coordinates\n    this._model.selectionEnd = this._getMouseBufferCoords(event);\n    if (!this._model.selectionEnd) {\n      this.refresh(true);\n      return;\n    }\n\n    // Select the entire line if line select mode is active.\n    if (this._activeSelectionMode === SelectionMode.LINE) {\n      if (this._model.selectionEnd[1] < this._model.selectionStart[1]) {\n        this._model.selectionEnd[0] = 0;\n      } else {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      }\n    } else if (this._activeSelectionMode === SelectionMode.WORD) {\n      this._selectToWordAt(this._model.selectionEnd);\n    }\n\n    // Determine the amount of scrolling that will happen.\n    this._dragScrollAmount = this._getMouseEventScrollAmount(event);\n\n    // If the cursor was above or below the viewport, make sure it's at the\n    // start or end of the viewport respectively. This should only happen when\n    // NOT in column select mode.\n    if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n      if (this._dragScrollAmount > 0) {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      } else if (this._dragScrollAmount < 0) {\n        this._model.selectionEnd[0] = 0;\n      }\n    }\n\n    // If the character is a wide character include the cell to the right in the\n    // selection. Note that selections at the very end of the line will never\n    // have a character.\n    const buffer = this._bufferService.buffer;\n    if (this._model.selectionEnd[1] < buffer.lines.length) {\n      const line = buffer.lines.get(this._model.selectionEnd[1]);\n      if (line && line.hasWidth(this._model.selectionEnd[0]) === 0) {\n        this._model.selectionEnd[0]++;\n      }\n    }\n\n    // Only draw here if the selection changes.\n    if (!previousSelectionEnd ||\n      previousSelectionEnd[0] !== this._model.selectionEnd[0] ||\n      previousSelectionEnd[1] !== this._model.selectionEnd[1]) {\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * The callback that occurs every DRAG_SCROLL_INTERVAL ms that does the\n   * scrolling of the viewport.\n   */\n  private _dragScroll(): void {\n    if (!this._model.selectionEnd || !this._model.selectionStart) {\n      return;\n    }\n    if (this._dragScrollAmount) {\n      this._onRequestScrollLines.fire({ amount: this._dragScrollAmount, suppressScrollEvent: false });\n      // Re-evaluate selection\n      // If the cursor was above or below the viewport, make sure it's at the\n      // start or end of the viewport respectively. This should only happen when\n      // NOT in column select mode.\n      const buffer = this._bufferService.buffer;\n      if (this._dragScrollAmount > 0) {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = this._bufferService.cols;\n        }\n        this._model.selectionEnd[1] = Math.min(buffer.ydisp + this._bufferService.rows, buffer.lines.length - 1);\n      } else {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = 0;\n        }\n        this._model.selectionEnd[1] = buffer.ydisp;\n      }\n      this.refresh();\n    }\n  }\n\n  /**\n   * Handles the mouseup event, removing the mousedown listeners.\n   * @param event The mouseup event.\n   */\n  private _onMouseUp(event: MouseEvent): void {\n    const timeElapsed = event.timeStamp - this._mouseDownTimeStamp;\n\n    this._removeMouseDownListeners();\n\n    if (this.selectionText.length <= 1 && timeElapsed < ALT_CLICK_MOVE_CURSOR_TIME && event.altKey && this._optionsService.getOption('altClickMovesCursor')) {\n      if (this._bufferService.buffer.ybase === this._bufferService.buffer.ydisp) {\n        const coordinates = this._mouseService.getCoords(\n          event,\n          this._element,\n          this._bufferService.cols,\n          this._bufferService.rows,\n          false\n        );\n        if (coordinates && coordinates[0] !== undefined && coordinates[1] !== undefined) {\n          const sequence = moveToCellSequence(coordinates[0] - 1, coordinates[1] - 1, this._bufferService, this._coreService.decPrivateModes.applicationCursorKeys);\n          this._coreService.triggerDataEvent(sequence, true);\n        }\n      }\n    } else {\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  private _fireEventIfSelectionChanged(): void {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    const hasSelection = !!start && !!end && (start[0] !== end[0] || start[1] !== end[1]);\n\n    if (!hasSelection) {\n      if (this._oldHasSelection) {\n        this._fireOnSelectionChange(start, end, hasSelection);\n      }\n      return;\n    }\n\n    // Sanity check, these should not be undefined as there is a selection\n    if (!start || !end) {\n      return;\n    }\n\n    if (!this._oldSelectionStart || !this._oldSelectionEnd || (\n      start[0] !== this._oldSelectionStart[0] || start[1] !== this._oldSelectionStart[1] ||\n      end[0] !== this._oldSelectionEnd[0] || end[1] !== this._oldSelectionEnd[1])) {\n\n      this._fireOnSelectionChange(start, end, hasSelection);\n    }\n  }\n\n  private _fireOnSelectionChange(start: [number, number] | undefined, end: [number, number] | undefined, hasSelection: boolean): void {\n    this._oldSelectionStart = start;\n    this._oldSelectionEnd = end;\n    this._oldHasSelection = hasSelection;\n    this._onSelectionChange.fire();\n  }\n\n  private _onBufferActivate(e: {activeBuffer: IBuffer, inactiveBuffer: IBuffer}): void {\n    this.clearSelection();\n    // Only adjust the selection on trim, shiftElements is rarely used (only in\n    // reverseIndex) and delete in a splice is only ever used when the same\n    // number of elements was just added. Given this is could actually be\n    // beneficial to leave the selection as is for these cases.\n    this._trimListener.dispose();\n    this._trimListener = e.activeBuffer.lines.onTrim(amount => this._onTrim(amount));\n  }\n\n  /**\n   * Converts a viewport column to the character index on the buffer line, the\n   * latter takes into account wide characters.\n   * @param coords The coordinates to find the 2 index for.\n   */\n  private _convertViewportColToCharacterIndex(bufferLine: IBufferLine, coords: [number, number]): number {\n    let charIndex = coords[0];\n    for (let i = 0; coords[0] >= i; i++) {\n      const length = bufferLine.loadCell(i, this._workCell).getChars().length;\n      if (this._workCell.getWidth() === 0) {\n        // Wide characters aren't included in the line string so decrement the\n        // index so the index is back on the wide character.\n        charIndex--;\n      } else if (length > 1 && coords[0] !== i) {\n        // Emojis take up multiple characters, so adjust accordingly. For these\n        // we don't want ot include the character at the column as we're\n        // returning the start index in the string, not the end index.\n        charIndex += length - 1;\n      }\n    }\n    return charIndex;\n  }\n\n  public setSelection(col: number, row: number, length: number): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this._model.selectionStart = [col, row];\n    this._model.selectionStartLength = length;\n    this.refresh();\n    this._fireEventIfSelectionChanged();\n  }\n\n  public rightClickSelect(ev: MouseEvent): void {\n    if (!this._isClickInSelection(ev)) {\n      if (this._selectWordAtCursor(ev, false)) {\n        this.refresh(true);\n      }\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  /**\n   * Gets positional information for the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _getWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean, followWrappedLinesAbove: boolean = true, followWrappedLinesBelow: boolean = true): IWordPosition | undefined {\n    // Ensure coords are within viewport (eg. not within scroll bar)\n    if (coords[0] >= this._bufferService.cols) {\n      return undefined;\n    }\n\n    const buffer = this._bufferService.buffer;\n    const bufferLine = buffer.lines.get(coords[1]);\n    if (!bufferLine) {\n      return undefined;\n    }\n\n    const line = buffer.translateBufferLineToString(coords[1], false);\n\n    // Get actual index, taking into consideration wide characters\n    let startIndex = this._convertViewportColToCharacterIndex(bufferLine, coords);\n    let endIndex = startIndex;\n\n    // Record offset to be used later\n    const charOffset = coords[0] - startIndex;\n    let leftWideCharCount = 0;\n    let rightWideCharCount = 0;\n    let leftLongCharOffset = 0;\n    let rightLongCharOffset = 0;\n\n    if (line.charAt(startIndex) === ' ') {\n      // Expand until non-whitespace is hit\n      while (startIndex > 0 && line.charAt(startIndex - 1) === ' ') {\n        startIndex--;\n      }\n      while (endIndex < line.length && line.charAt(endIndex + 1) === ' ') {\n        endIndex++;\n      }\n    } else {\n      // Expand until whitespace is hit. This algorithm works by scanning left\n      // and right from the starting position, keeping both the index format\n      // (line) and the column format (bufferLine) in sync. When a wide\n      // character is hit, it is recorded and the column index is adjusted.\n      let startCol = coords[0];\n      let endCol = coords[0];\n\n      // Consider the initial position, skip it and increment the wide char\n      // variable\n      if (bufferLine.getWidth(startCol) === 0) {\n        leftWideCharCount++;\n        startCol--;\n      }\n      if (bufferLine.getWidth(endCol) === 2) {\n        rightWideCharCount++;\n        endCol++;\n      }\n\n      // Adjust the end index for characters whose length are > 1 (emojis)\n      const length = bufferLine.getString(endCol).length;\n      if (length > 1) {\n        rightLongCharOffset += length - 1;\n        endIndex += length - 1;\n      }\n\n      // Expand the string in both directions until a space is hit\n      while (startCol > 0 && startIndex > 0 && !this._isCharWordSeparator(bufferLine.loadCell(startCol - 1, this._workCell))) {\n        bufferLine.loadCell(startCol - 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 0) {\n          // If the next character is a wide char, record it and skip the column\n          leftWideCharCount++;\n          startCol--;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          leftLongCharOffset += length - 1;\n          startIndex -= length - 1;\n        }\n        startIndex--;\n        startCol--;\n      }\n      while (endCol < bufferLine.length && endIndex + 1 < line.length && !this._isCharWordSeparator(bufferLine.loadCell(endCol + 1, this._workCell))) {\n        bufferLine.loadCell(endCol + 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 2) {\n          // If the next character is a wide char, record it and skip the column\n          rightWideCharCount++;\n          endCol++;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          rightLongCharOffset += length - 1;\n          endIndex += length - 1;\n        }\n        endIndex++;\n        endCol++;\n      }\n    }\n\n    // Incremenet the end index so it is at the start of the next character\n    endIndex++;\n\n    // Calculate the start _column_, converting the the string indexes back to\n    // column coordinates.\n    let start =\n        startIndex // The index of the selection's start char in the line string\n        + charOffset // The difference between the initial char's column and index\n        - leftWideCharCount // The number of wide chars left of the initial char\n        + leftLongCharOffset; // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n\n    // Calculate the length in _columns_, converting the the string indexes back\n    // to column coordinates.\n    let length = Math.min(this._bufferService.cols, // Disallow lengths larger than the terminal cols\n      endIndex // The index of the selection's end char in the line string\n      - startIndex // The index of the selection's start char in the line string\n      + leftWideCharCount // The number of wide chars left of the initial char\n      + rightWideCharCount // The number of wide chars right of the initial char (inclusive)\n      - leftLongCharOffset // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n      - rightLongCharOffset); // The number of additional chars right of the initial char (inclusive) added by columns with strings longer than 1 (emojis)\n\n    if (!allowWhitespaceOnlySelection && line.slice(startIndex, endIndex).trim() === '') {\n      return undefined;\n    }\n\n    // Recurse upwards if the line is wrapped and the word wraps to the above line\n    if (followWrappedLinesAbove) {\n      if (start === 0 && bufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n        const previousBufferLine = buffer.lines.get(coords[1] - 1);\n        if (previousBufferLine && bufferLine.isWrapped && previousBufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n          const previousLineWordPosition = this._getWordAt([this._bufferService.cols - 1, coords[1] - 1], false, true, false);\n          if (previousLineWordPosition) {\n            const offset = this._bufferService.cols - previousLineWordPosition.start;\n            start -= offset;\n            length += offset;\n          }\n        }\n      }\n    }\n\n    // Recurse downwards if the line is wrapped and the word wraps to the next line\n    if (followWrappedLinesBelow) {\n      if (start + length === this._bufferService.cols && bufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n        const nextBufferLine = buffer.lines.get(coords[1] + 1);\n        if (nextBufferLine?.isWrapped && nextBufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n          const nextLineWordPosition = this._getWordAt([0, coords[1] + 1], false, false, true);\n          if (nextLineWordPosition) {\n            length += nextLineWordPosition.length;\n          }\n        }\n      }\n    }\n\n    return { start, length };\n  }\n\n  /**\n   * Selects the word at the coordinates specified.\n   * @param coords The coordinates to get the word at.\n   * @param allowWhitespaceOnlySelection If whitespace should be selected\n   */\n  protected _selectWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean): void {\n    const wordPosition = this._getWordAt(coords, allowWhitespaceOnlySelection);\n    if (wordPosition) {\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        coords[1]--;\n      }\n      this._model.selectionStart = [wordPosition.start, coords[1]];\n      this._model.selectionStartLength = wordPosition.length;\n    }\n  }\n\n  /**\n   * Sets the selection end to the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _selectToWordAt(coords: [number, number]): void {\n    const wordPosition = this._getWordAt(coords, true);\n    if (wordPosition) {\n      let endRow = coords[1];\n\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        endRow--;\n      }\n\n      // Adjust wrapped length value, this only needs to happen when values are reversed as in that\n      // case we're interested in the start of the word, not the end\n      if (!this._model.areSelectionValuesReversed()) {\n        while (wordPosition.start + wordPosition.length > this._bufferService.cols) {\n          wordPosition.length -= this._bufferService.cols;\n          endRow++;\n        }\n      }\n\n      this._model.selectionEnd = [this._model.areSelectionValuesReversed() ? wordPosition.start : wordPosition.start + wordPosition.length, endRow];\n    }\n  }\n\n  /**\n   * Gets whether the character is considered a word separator by the select\n   * word logic.\n   * @param char The character to check.\n   */\n  private _isCharWordSeparator(cell: CellData): boolean {\n    // Zero width characters are never separators as they are always to the\n    // right of wide characters\n    if (cell.getWidth() === 0) {\n      return false;\n    }\n    return this._optionsService.rawOptions.wordSeparator.indexOf(cell.getChars()) >= 0;\n  }\n\n  /**\n   * Selects the line specified.\n   * @param line The line index.\n   */\n  protected _selectLineAt(line: number): void {\n    const wrappedRange = this._bufferService.buffer.getWrappedRangeForLine(line);\n    const range: IBufferRange = {\n      start: { x: 0, y: wrappedRange.first },\n      end: { x: this._bufferService.cols - 1, y: wrappedRange.last }\n    };\n    this._model.selectionStart = [0, wrappedRange.first];\n    this._model.selectionEnd = undefined;\n    this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IRenderDimensions, IRenderer } from 'browser/renderer/Types';\nimport { IColorSet, IRenderDebouncer } from 'browser/Types';\nimport { ISelectionRedrawRequestEvent as ISelectionRequestRedrawEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { IDisposable } from 'common/Types';\nimport { IDecorationOptions, IDecoration } from 'xterm';\nimport { IBufferService } from 'common/services/Services';\n\nexport const ICharSizeService = createDecorator<ICharSizeService>('CharSizeService');\nexport interface ICharSizeService {\n  serviceBrand: undefined;\n\n  readonly width: number;\n  readonly height: number;\n  readonly hasValidSize: boolean;\n\n  readonly onCharSizeChange: IEvent<void>;\n\n  measure(): void;\n}\n\nexport const ICoreBrowserService = createDecorator<ICoreBrowserService>('CoreBrowserService');\nexport interface ICoreBrowserService {\n  serviceBrand: undefined;\n\n  readonly isFocused: boolean;\n}\n\nexport const IMouseService = createDecorator<IMouseService>('MouseService');\nexport interface IMouseService {\n  serviceBrand: undefined;\n\n  getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined;\n  getRawByteCoords(event: MouseEvent, element: HTMLElement, colCount: number, rowCount: number): { x: number, y: number } | undefined;\n}\n\nexport const IRenderService = createDecorator<IRenderService>('RenderService');\nexport interface IRenderService extends IDisposable {\n  serviceBrand: undefined;\n\n  onDimensionsChange: IEvent<IRenderDimensions>;\n  /**\n   * Fires when buffer changes are rendered. This does not fire when only cursor\n   * or selections are rendered.\n   */\n  onRenderedViewportChange: IEvent<{ start: number, end: number }>;\n  /**\n   * Fires on render\n   */\n  onRender: IEvent<{ start: number, end: number }>;\n  onRefreshRequest: IEvent<{ start: number, end: number }>;\n\n  dimensions: IRenderDimensions;\n\n  addRefreshCallback(callback: FrameRequestCallback): number;\n\n  refreshRows(start: number, end: number): void;\n  clearTextureAtlas(): void;\n  resize(cols: number, rows: number): void;\n  setRenderer(renderer: IRenderer): void;\n  setColors(colors: IColorSet): void;\n  onDevicePixelRatioChange(): void;\n  onResize(cols: number, rows: number): void;\n  // TODO: Is this useful when we have onResize?\n  onCharSizeChanged(): void;\n  onBlur(): void;\n  onFocus(): void;\n  onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void;\n  onCursorMove(): void;\n  clear(): void;\n}\n\nexport const ISelectionService = createDecorator<ISelectionService>('SelectionService');\nexport interface ISelectionService {\n  serviceBrand: undefined;\n\n  readonly selectionText: string;\n  readonly hasSelection: boolean;\n  readonly selectionStart: [number, number] | undefined;\n  readonly selectionEnd: [number, number] | undefined;\n\n  readonly onLinuxMouseSelection: IEvent<string>;\n  readonly onRequestRedraw: IEvent<ISelectionRequestRedrawEvent>;\n  readonly onRequestScrollLines: IEvent<ISelectionRequestScrollLinesEvent>;\n  readonly onSelectionChange: IEvent<void>;\n\n  disable(): void;\n  enable(): void;\n  reset(): void;\n  setSelection(row: number, col: number, length: number): void;\n  selectAll(): void;\n  selectLines(start: number, end: number): void;\n  clearSelection(): void;\n  rightClickSelect(event: MouseEvent): void;\n  shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean;\n  shouldForceSelection(event: MouseEvent): boolean;\n  refresh(isLinuxMouseSelection?: boolean): void;\n  onMouseDown(event: MouseEvent): void;\n  isCellInSelection(x: number, y: number): boolean;\n}\n\nexport const ISoundService = createDecorator<ISoundService>('SoundService');\nexport interface ISoundService {\n  serviceBrand: undefined;\n\n  playBellSound(): void;\n}\n\n\nexport const ICharacterJoinerService = createDecorator<ICharacterJoinerService>('CharacterJoinerService');\nexport interface ICharacterJoinerService {\n  serviceBrand: undefined;\n\n  register(handler: (text: string) => [number, number][]): number;\n  deregister(joinerId: number): boolean;\n  getJoinedCharacters(row: number): [number, number][];\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { ISoundService } from 'browser/services/Services';\n\nexport class SoundService implements ISoundService {\n  public serviceBrand: undefined;\n\n  private static _audioContext: AudioContext;\n\n  public static get audioContext(): AudioContext | null {\n    if (!SoundService._audioContext) {\n      const audioContextCtor: typeof AudioContext = (window as any).AudioContext || (window as any).webkitAudioContext;\n      if (!audioContextCtor) {\n        console.warn('Web Audio API is not supported by this browser. Consider upgrading to the latest version');\n        return null;\n      }\n      SoundService._audioContext = new audioContextCtor();\n    }\n    return SoundService._audioContext;\n  }\n\n  constructor(\n    @IOptionsService private _optionsService: IOptionsService\n  ) {\n  }\n\n  public playBellSound(): void {\n    const ctx = SoundService.audioContext;\n    if (!ctx) {\n      return;\n    }\n    const bellAudioSource = ctx.createBufferSource();\n    ctx.decodeAudioData(this._base64ToArrayBuffer(this._removeMimeType(this._optionsService.rawOptions.bellSound)), (buffer) => {\n      bellAudioSource.buffer = buffer;\n      bellAudioSource.connect(ctx.destination);\n      bellAudioSource.start(0);\n    });\n  }\n\n  private _base64ToArrayBuffer(base64: string): ArrayBuffer {\n    const binaryString = window.atob(base64);\n    const len = binaryString.length;\n    const bytes = new Uint8Array(len);\n\n    for (let i = 0; i < len; i++) {\n      bytes[i] = binaryString.charCodeAt(i);\n    }\n\n    return bytes.buffer;\n  }\n\n  private _removeMimeType(dataURI: string): string {\n    // Split the input to get the mime-type and the data itself\n    const splitUri = dataURI.split(',');\n\n    // Return only the data\n    return splitUri[1];\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICircularList } from 'common/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\n\nexport interface IInsertEvent {\n  index: number;\n  amount: number;\n}\n\nexport interface IDeleteEvent {\n  index: number;\n  amount: number;\n}\n\n/**\n * Represents a circular list; a list with a maximum size that wraps around when push is called,\n * overriding values at the start of the list.\n */\nexport class CircularList<T> implements ICircularList<T> {\n  protected _array: (T | undefined)[];\n  private _startIndex: number;\n  private _length: number;\n\n  public onDeleteEmitter = new EventEmitter<IDeleteEvent>();\n  public get onDelete(): IEvent<IDeleteEvent> { return this.onDeleteEmitter.event; }\n  public onInsertEmitter = new EventEmitter<IInsertEvent>();\n  public get onInsert(): IEvent<IInsertEvent> { return this.onInsertEmitter.event; }\n  public onTrimEmitter = new EventEmitter<number>();\n  public get onTrim(): IEvent<number> { return this.onTrimEmitter.event; }\n\n  constructor(\n    private _maxLength: number\n  ) {\n    this._array = new Array<T>(this._maxLength);\n    this._startIndex = 0;\n    this._length = 0;\n  }\n\n  public get maxLength(): number {\n    return this._maxLength;\n  }\n\n  public set maxLength(newMaxLength: number) {\n    // There was no change in maxLength, return early.\n    if (this._maxLength === newMaxLength) {\n      return;\n    }\n\n    // Reconstruct array, starting at index 0. Only transfer values from the\n    // indexes 0 to length.\n    const newArray = new Array<T | undefined>(newMaxLength);\n    for (let i = 0; i < Math.min(newMaxLength, this.length); i++) {\n      newArray[i] = this._array[this._getCyclicIndex(i)];\n    }\n    this._array = newArray;\n    this._maxLength = newMaxLength;\n    this._startIndex = 0;\n  }\n\n  public get length(): number {\n    return this._length;\n  }\n\n  public set length(newLength: number) {\n    if (newLength > this._length) {\n      for (let i = this._length; i < newLength; i++) {\n        this._array[i] = undefined;\n      }\n    }\n    this._length = newLength;\n  }\n\n  /**\n   * Gets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index of the value to get.\n   * @return The value corresponding to the index.\n   */\n  public get(index: number): T | undefined {\n    return this._array[this._getCyclicIndex(index)];\n  }\n\n  /**\n   * Sets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index to set.\n   * @param value The value to set.\n   */\n  public set(index: number, value: T | undefined): void {\n    this._array[this._getCyclicIndex(index)] = value;\n  }\n\n  /**\n   * Pushes a new value onto the list, wrapping around to the start of the array, overriding index 0\n   * if the maximum length is reached.\n   * @param value The value to push onto the list.\n   */\n  public push(value: T): void {\n    this._array[this._getCyclicIndex(this._length)] = value;\n    if (this._length === this._maxLength) {\n      this._startIndex = ++this._startIndex % this._maxLength;\n      this.onTrimEmitter.fire(1);\n    } else {\n      this._length++;\n    }\n  }\n\n  /**\n   * Advance ringbuffer index and return current element for recycling.\n   * Note: The buffer must be full for this method to work.\n   * @throws When the buffer is not full.\n   */\n  public recycle(): T {\n    if (this._length !== this._maxLength) {\n      throw new Error('Can only recycle when the buffer is full');\n    }\n    this._startIndex = ++this._startIndex % this._maxLength;\n    this.onTrimEmitter.fire(1);\n    return this._array[this._getCyclicIndex(this._length - 1)]!;\n  }\n\n  /**\n   * Ringbuffer is at max length.\n   */\n  public get isFull(): boolean {\n    return this._length === this._maxLength;\n  }\n\n  /**\n   * Removes and returns the last value on the list.\n   * @return The popped value.\n   */\n  public pop(): T | undefined {\n    return this._array[this._getCyclicIndex(this._length-- - 1)];\n  }\n\n  /**\n   * Deletes and/or inserts items at a particular index (in that order). Unlike\n   * Array.prototype.splice, this operation does not return the deleted items as a new array in\n   * order to save creating a new array. Note that this operation may shift all values in the list\n   * in the worst case.\n   * @param start The index to delete and/or insert.\n   * @param deleteCount The number of elements to delete.\n   * @param items The items to insert.\n   */\n  public splice(start: number, deleteCount: number, ...items: T[]): void {\n    // Delete items\n    if (deleteCount) {\n      for (let i = start; i < this._length - deleteCount; i++) {\n        this._array[this._getCyclicIndex(i)] = this._array[this._getCyclicIndex(i + deleteCount)];\n      }\n      this._length -= deleteCount;\n      this.onDeleteEmitter.fire({ index: start, amount: deleteCount });\n    }\n\n    // Add items\n    for (let i = this._length - 1; i >= start; i--) {\n      this._array[this._getCyclicIndex(i + items.length)] = this._array[this._getCyclicIndex(i)];\n    }\n    for (let i = 0; i < items.length; i++) {\n      this._array[this._getCyclicIndex(start + i)] = items[i];\n    }\n    if (items.length) {\n      this.onInsertEmitter.fire({ index: start, amount: items.length });\n    }\n\n    // Adjust length as needed\n    if (this._length + items.length > this._maxLength) {\n      const countToTrim = (this._length + items.length) - this._maxLength;\n      this._startIndex += countToTrim;\n      this._length = this._maxLength;\n      this.onTrimEmitter.fire(countToTrim);\n    } else {\n      this._length += items.length;\n    }\n  }\n\n  /**\n   * Trims a number of items from the start of the list.\n   * @param count The number of items to remove.\n   */\n  public trimStart(count: number): void {\n    if (count > this._length) {\n      count = this._length;\n    }\n    this._startIndex += count;\n    this._length -= count;\n    this.onTrimEmitter.fire(count);\n  }\n\n  public shiftElements(start: number, count: number, offset: number): void {\n    if (count <= 0) {\n      return;\n    }\n    if (start < 0 || start >= this._length) {\n      throw new Error('start argument out of range');\n    }\n    if (start + offset < 0) {\n      throw new Error('Cannot shift elements in list beyond index 0');\n    }\n\n    if (offset > 0) {\n      for (let i = count - 1; i >= 0; i--) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n      const expandListBy = (start + count + offset) - this._length;\n      if (expandListBy > 0) {\n        this._length += expandListBy;\n        while (this._length > this._maxLength) {\n          this._length--;\n          this._startIndex++;\n          this.onTrimEmitter.fire(1);\n        }\n      }\n    } else {\n      for (let i = 0; i < count; i++) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n    }\n  }\n\n  /**\n   * Gets the cyclic index for the specified regular index. The cyclic index can then be used on the\n   * backing array to get the element associated with the regular index.\n   * @param index The regular index.\n   * @returns The cyclic index.\n   */\n  private _getCyclicIndex(index: number): number {\n    return (this._startIndex + index) % this._maxLength;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/*\n * A simple utility for cloning values\n */\nexport function clone<T>(val: T, depth: number = 5): T {\n  if (typeof val !== 'object') {\n    return val;\n  }\n\n  // If we're cloning an array, use an array as the base, otherwise use an object\n  const clonedObject: any = Array.isArray(val) ? [] : {};\n\n  for (const key in val) {\n    // Recursively clone eack item unless we're at the maximum depth\n    clonedObject[key] = depth <= 1 ? val[key] : (val[key] && clone(val[key], depth - 1));\n  }\n\n  return clonedObject as T;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColor, IColorRGB } from 'common/Types';\n\n/**\n * Helper functions where the source type is \"channels\" (individual color channels as numbers).\n */\nexport namespace channels {\n  export function toCss(r: number, g: number, b: number, a?: number): string {\n    if (a !== undefined) {\n      return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}${toPaddedHex(a)}`;\n    }\n    return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}`;\n  }\n\n  export function toRgba(r: number, g: number, b: number, a: number = 0xFF): number {\n    // Note: The aggregated number is RGBA32 (BE), thus needs to be converted to ABGR32\n    // on LE systems, before it can be used for direct 32-bit buffer writes.\n    // >>> 0 forces an unsigned int\n    return (r << 24 | g << 16 | b << 8 | a) >>> 0;\n  }\n}\n\n/**\n * Helper functions where the source type is `IColor`.\n */\nexport namespace color {\n  export function blend(bg: IColor, fg: IColor): IColor {\n    const a = (fg.rgba & 0xFF) / 255;\n    if (a === 1) {\n      return {\n        css: fg.css,\n        rgba: fg.rgba\n      };\n    }\n    const fgR = (fg.rgba >> 24) & 0xFF;\n    const fgG = (fg.rgba >> 16) & 0xFF;\n    const fgB = (fg.rgba >> 8) & 0xFF;\n    const bgR = (bg.rgba >> 24) & 0xFF;\n    const bgG = (bg.rgba >> 16) & 0xFF;\n    const bgB = (bg.rgba >> 8) & 0xFF;\n    const r = bgR + Math.round((fgR - bgR) * a);\n    const g = bgG + Math.round((fgG - bgG) * a);\n    const b = bgB + Math.round((fgB - bgB) * a);\n    const css = channels.toCss(r, g, b);\n    const rgba = channels.toRgba(r, g, b);\n    return { css, rgba };\n  }\n\n  export function isOpaque(color: IColor): boolean {\n    return (color.rgba & 0xFF) === 0xFF;\n  }\n\n  export function ensureContrastRatio(bg: IColor, fg: IColor, ratio: number): IColor | undefined {\n    const result = rgba.ensureContrastRatio(bg.rgba, fg.rgba, ratio);\n    if (!result) {\n      return undefined;\n    }\n    return rgba.toColor(\n      (result >> 24 & 0xFF),\n      (result >> 16 & 0xFF),\n      (result >> 8  & 0xFF)\n    );\n  }\n\n  export function opaque(color: IColor): IColor {\n    const rgbaColor = (color.rgba | 0xFF) >>> 0;\n    const [r, g, b] = rgba.toChannels(rgbaColor);\n    return {\n      css: channels.toCss(r, g, b),\n      rgba: rgbaColor\n    };\n  }\n\n  export function opacity(color: IColor, opacity: number): IColor {\n    const a = Math.round(opacity * 0xFF);\n    const [r, g, b] = rgba.toChannels(color.rgba);\n    return {\n      css: channels.toCss(r, g, b, a),\n      rgba: channels.toRgba(r, g, b, a)\n    };\n  }\n\n  export function toColorRGB(color: IColor): IColorRGB {\n    return [(color.rgba >> 24) & 0xFF, (color.rgba >> 16) & 0xFF, (color.rgba >> 8) & 0xFF];\n  }\n}\n\n/**\n * Helper functions where the source type is \"css\" (string: '#rgb', '#rgba', '#rrggbb', '#rrggbbaa').\n */\nexport namespace css {\n  export function toColor(css: string): IColor {\n    if (css.match(/#[0-9a-f]{3,8}/i)) {\n      switch (css.length) {\n        case 4: { // #rgb\n          const r = parseInt(css.slice(1, 2).repeat(2), 16);\n          const g = parseInt(css.slice(2, 3).repeat(2), 16);\n          const b = parseInt(css.slice(3, 4).repeat(2), 16);\n          return rgba.toColor(r, g, b);\n        }\n        case 5: { // #rgba\n          const r = parseInt(css.slice(1, 2).repeat(2), 16);\n          const g = parseInt(css.slice(2, 3).repeat(2), 16);\n          const b = parseInt(css.slice(3, 4).repeat(2), 16);\n          const a = parseInt(css.slice(4, 5).repeat(2), 16);\n          return rgba.toColor(r, g, b, a);\n        }\n        case 7: // #rrggbb\n          return {\n            css,\n            rgba: (parseInt(css.slice(1), 16) << 8 | 0xFF) >>> 0\n          };\n        case 9: // #rrggbbaa\n          return {\n            css,\n            rgba: parseInt(css.slice(1), 16) >>> 0\n          };\n      }\n    }\n    const rgbaMatch = css.match(/rgba?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*(,\\s*(0|1|\\d?\\.(\\d+))\\s*)?\\)/);\n    if (rgbaMatch) { // rgb() or rgba()\n      const r = parseInt(rgbaMatch[1]);\n      const g = parseInt(rgbaMatch[2]);\n      const b = parseInt(rgbaMatch[3]);\n      const a = Math.round((rgbaMatch[5] === undefined ? 1 : parseFloat(rgbaMatch[5])) * 0xFF);\n      return rgba.toColor(r, g, b, a);\n    }\n    throw new Error('css.toColor: Unsupported css format');\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgb\" (number: 0xrrggbb).\n */\nexport namespace rgb {\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param rgb The color to use.\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance(rgb: number): number {\n    return relativeLuminance2(\n      (rgb >> 16) & 0xFF,\n      (rgb >> 8 ) & 0xFF,\n      (rgb      ) & 0xFF);\n  }\n\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param r The red channel (0x00 to 0xFF).\n   * @param g The green channel (0x00 to 0xFF).\n   * @param b The blue channel (0x00 to 0xFF).\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance2(r: number, g: number, b: number): number {\n    const rs = r / 255;\n    const gs = g / 255;\n    const bs = b / 255;\n    const rr = rs <= 0.03928 ? rs / 12.92 : Math.pow((rs + 0.055) / 1.055, 2.4);\n    const rg = gs <= 0.03928 ? gs / 12.92 : Math.pow((gs + 0.055) / 1.055, 2.4);\n    const rb = bs <= 0.03928 ? bs / 12.92 : Math.pow((bs + 0.055) / 1.055, 2.4);\n    return rr * 0.2126 + rg * 0.7152 + rb * 0.0722;\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgba\" (number: 0xrrggbbaa).\n */\nexport namespace rgba {\n  /**\n   * Given a foreground color and a background color, either increase or reduce the luminance of the\n   * foreground color until the specified contrast ratio is met. If pure white or black is hit\n   * without the contrast ratio being met, go the other direction using the background color as the\n   * foreground color and take either the first or second result depending on which has the higher\n   * contrast ratio.\n   *\n   * `undefined` will be returned if the contrast ratio is already met.\n   *\n   * @param bgRgba The background color in rgba format.\n   * @param fgRgba The foreground color in rgba format.\n   * @param ratio The contrast ratio to achieve.\n   */\n  export function ensureContrastRatio(bgRgba: number, fgRgba: number, ratio: number): number | undefined {\n    const bgL = rgb.relativeLuminance(bgRgba >> 8);\n    const fgL = rgb.relativeLuminance(fgRgba >> 8);\n    const cr = contrastRatio(bgL, fgL);\n    if (cr < ratio) {\n      if (fgL < bgL) {\n        const resultA = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n        if (resultARatio < ratio) {\n          const resultB = increaseLuminance(bgRgba, bgRgba, ratio);\n          const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n          return resultARatio > resultBRatio ? resultA : resultB;\n        }\n        return resultA;\n      }\n      const resultA = increaseLuminance(bgRgba, fgRgba, ratio);\n      const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n      if (resultARatio < ratio) {\n        const resultB = reduceLuminance(bgRgba, bgRgba, ratio);\n        const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n        return resultARatio > resultBRatio ? resultA : resultB;\n      }\n      return resultA;\n    }\n    return undefined;\n  }\n\n  export function reduceLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to reducing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR > 0 || fgG > 0 || fgB > 0)) {\n      // Reduce by 10% until the ratio is hit\n      fgR -= Math.max(0, Math.ceil(fgR * 0.1));\n      fgG -= Math.max(0, Math.ceil(fgG * 0.1));\n      fgB -= Math.max(0, Math.ceil(fgB * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function increaseLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to increasing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR < 0xFF || fgG < 0xFF || fgB < 0xFF)) {\n      // Increase by 10% until the ratio is hit\n      fgR = Math.min(0xFF, fgR + Math.ceil((255 - fgR) * 0.1));\n      fgG = Math.min(0xFF, fgG + Math.ceil((255 - fgG) * 0.1));\n      fgB = Math.min(0xFF, fgB + Math.ceil((255 - fgB) * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  // FIXME: Move this to channels NS?\n  export function toChannels(value: number): [number, number, number, number] {\n    return [(value >> 24) & 0xFF, (value >> 16) & 0xFF, (value >> 8) & 0xFF, value & 0xFF];\n  }\n\n  export function toColor(r: number, g: number, b: number, a?: number): IColor {\n    return {\n      css: channels.toCss(r, g, b, a),\n      rgba: channels.toRgba(r, g, b, a)\n    };\n  }\n}\n\nexport function toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n\n/**\n * Gets the contrast ratio between two relative luminance values.\n * @param l1 The first relative luminance.\n * @param l2 The first relative luminance.\n * @see https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n */\nexport function contrastRatio(l1: number, l2: number): number {\n  if (l1 < l2) {\n    return (l2 + 0.05) / (l1 + 0.05);\n  }\n  return (l1 + 0.05) / (l2 + 0.05);\n}\n","/**\n * Copyright (c) 2014-2020 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { IInstantiationService, IOptionsService, IBufferService, ILogService, ICharsetService, ICoreService, ICoreMouseService, IUnicodeService, IDirtyRowService, LogLevelEnum, ITerminalOptions } from 'common/services/Services';\nimport { InstantiationService } from 'common/services/InstantiationService';\nimport { LogService } from 'common/services/LogService';\nimport { BufferService, MINIMUM_COLS, MINIMUM_ROWS } from 'common/services/BufferService';\nimport { OptionsService } from 'common/services/OptionsService';\nimport { IDisposable, IBufferLine, IAttributeData, ICoreTerminal, IKeyboardEvent, IScrollEvent, ScrollSource, ITerminalOptions as IPublicTerminalOptions } from 'common/Types';\nimport { CoreService } from 'common/services/CoreService';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { CoreMouseService } from 'common/services/CoreMouseService';\nimport { DirtyRowService } from 'common/services/DirtyRowService';\nimport { UnicodeService } from 'common/services/UnicodeService';\nimport { CharsetService } from 'common/services/CharsetService';\nimport { updateWindowsModeWrappedState } from 'common/WindowsMode';\nimport { IFunctionIdentifier, IParams } from 'common/parser/Types';\nimport { IBufferSet } from 'common/buffer/Types';\nimport { InputHandler } from 'common/InputHandler';\nimport { WriteBuffer } from 'common/input/WriteBuffer';\n\n// Only trigger this warning a single time per session\nlet hasWriteSyncWarnHappened = false;\n\nexport abstract class CoreTerminal extends Disposable implements ICoreTerminal {\n  protected readonly _instantiationService: IInstantiationService;\n  protected readonly _bufferService: IBufferService;\n  protected readonly _logService: ILogService;\n  protected readonly _charsetService: ICharsetService;\n  protected readonly _dirtyRowService: IDirtyRowService;\n\n  public readonly coreMouseService: ICoreMouseService;\n  public readonly coreService: ICoreService;\n  public readonly unicodeService: IUnicodeService;\n  public readonly optionsService: IOptionsService;\n\n  protected _inputHandler: InputHandler;\n  private _writeBuffer: WriteBuffer;\n  private _windowsMode: IDisposable | undefined;\n\n  private _onBinary = new EventEmitter<string>();\n  public get onBinary(): IEvent<string> { return this._onBinary.event; }\n  private _onData = new EventEmitter<string>();\n  public get onData(): IEvent<string> { return this._onData.event; }\n  protected _onLineFeed = new EventEmitter<void>();\n  public get onLineFeed(): IEvent<void> { return this._onLineFeed.event; }\n  private _onResize = new EventEmitter<{ cols: number, rows: number }>();\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._onResize.event; }\n  protected _onScroll = new EventEmitter<IScrollEvent, void>();\n  public get onWriteParsed(): IEvent<void> { return this._onWriteParsed.event; }\n  protected _onWriteParsed = new EventEmitter<void>();\n  /**\n   * Internally we track the source of the scroll but this is meaningless outside the library so\n   * it's filtered out.\n   */\n  protected _onScrollApi?: EventEmitter<number, void>;\n  public get onScroll(): IEvent<number, void> {\n    if (!this._onScrollApi) {\n      this._onScrollApi = new EventEmitter<number, void>();\n      this.register(this._onScroll.event(ev => {\n        this._onScrollApi?.fire(ev.position);\n      }));\n    }\n    return this._onScrollApi.event;\n  }\n\n  public get cols(): number { return this._bufferService.cols; }\n  public get rows(): number { return this._bufferService.rows; }\n  public get buffers(): IBufferSet { return this._bufferService.buffers; }\n  public get options(): ITerminalOptions { return this.optionsService.options; }\n  public set options(options: ITerminalOptions) {\n    for (const key in options) {\n      this.optionsService.options[key] = options[key];\n    }\n  }\n\n  constructor(\n    options: Partial<ITerminalOptions>\n  ) {\n    super();\n\n    // Setup and initialize services\n    this._instantiationService = new InstantiationService();\n    this.optionsService = new OptionsService(options);\n    this._instantiationService.setService(IOptionsService, this.optionsService);\n    this._bufferService = this.register(this._instantiationService.createInstance(BufferService));\n    this._instantiationService.setService(IBufferService, this._bufferService);\n    this._logService = this._instantiationService.createInstance(LogService);\n    this._instantiationService.setService(ILogService, this._logService);\n    this.coreService = this.register(this._instantiationService.createInstance(CoreService, () => this.scrollToBottom()));\n    this._instantiationService.setService(ICoreService, this.coreService);\n    this.coreMouseService = this._instantiationService.createInstance(CoreMouseService);\n    this._instantiationService.setService(ICoreMouseService, this.coreMouseService);\n    this._dirtyRowService = this._instantiationService.createInstance(DirtyRowService);\n    this._instantiationService.setService(IDirtyRowService, this._dirtyRowService);\n    this.unicodeService = this._instantiationService.createInstance(UnicodeService);\n    this._instantiationService.setService(IUnicodeService, this.unicodeService);\n    this._charsetService = this._instantiationService.createInstance(CharsetService);\n    this._instantiationService.setService(ICharsetService, this._charsetService);\n\n    // Register input handler and handle/forward events\n    this._inputHandler = new InputHandler(this._bufferService, this._charsetService, this.coreService, this._dirtyRowService, this._logService, this.optionsService, this.coreMouseService, this.unicodeService);\n    this.register(forwardEvent(this._inputHandler.onLineFeed, this._onLineFeed));\n    this.register(this._inputHandler);\n\n    // Setup listeners\n    this.register(forwardEvent(this._bufferService.onResize, this._onResize));\n    this.register(forwardEvent(this.coreService.onData, this._onData));\n    this.register(forwardEvent(this.coreService.onBinary, this._onBinary));\n    this.register(this.optionsService.onOptionChange(key => this._updateOptions(key)));\n    this.register(this._bufferService.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._dirtyRowService.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n    this.register(this._inputHandler.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._dirtyRowService.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n\n    // Setup WriteBuffer\n    this._writeBuffer = new WriteBuffer((data, promiseResult) => this._inputHandler.parse(data, promiseResult));\n    this.register(forwardEvent(this._writeBuffer.onWriteParsed, this._onWriteParsed));\n  }\n\n  public dispose(): void {\n    if (this._isDisposed) {\n      return;\n    }\n    super.dispose();\n    this._windowsMode?.dispose();\n    this._windowsMode = undefined;\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._writeBuffer.write(data, callback);\n  }\n\n  /**\n   * Write data to terminal synchonously.\n   *\n   * This method is unreliable with async parser handlers, thus should not\n   * be used anymore. If you need blocking semantics on data input consider\n   * `write` with a callback instead.\n   *\n   * @deprecated Unreliable, will be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    if (this._logService.logLevel <= LogLevelEnum.WARN && !hasWriteSyncWarnHappened) {\n      this._logService.warn('writeSync is unreliable and will be removed soon.');\n      hasWriteSyncWarnHappened = true;\n    }\n    this._writeBuffer.writeSync(data, maxSubsequentCalls);\n  }\n\n  public resize(x: number, y: number): void {\n    if (isNaN(x) || isNaN(y)) {\n      return;\n    }\n\n    x = Math.max(x, MINIMUM_COLS);\n    y = Math.max(y, MINIMUM_ROWS);\n\n    this._bufferService.resize(x, y);\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    this._bufferService.scroll(eraseAttr, isWrapped);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    this._bufferService.scrollLines(disp, suppressScrollEvent, source);\n  }\n\n  /**\n   * Scroll the display of the terminal by a number of pages.\n   * @param pageCount The number of pages to scroll (negative scrolls up).\n   */\n  public scrollPages(pageCount: number): void {\n    this._bufferService.scrollPages(pageCount);\n  }\n\n  /**\n   * Scrolls the display of the terminal to the top.\n   */\n  public scrollToTop(): void {\n    this._bufferService.scrollToTop();\n  }\n\n  /**\n   * Scrolls the display of the terminal to the bottom.\n   */\n  public scrollToBottom(): void {\n    this._bufferService.scrollToBottom();\n  }\n\n  public scrollToLine(line: number): void {\n    this._bufferService.scrollToLine(line);\n  }\n\n  /** Add handler for ESC escape sequence. See xterm.d.ts for details. */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerEscHandler(id, callback);\n  }\n\n  /** Add handler for DCS escape sequence. See xterm.d.ts for details. */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerDcsHandler(id, callback);\n  }\n\n  /** Add handler for CSI escape sequence. See xterm.d.ts for details. */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerCsiHandler(id, callback);\n  }\n\n  /** Add handler for OSC escape sequence. See xterm.d.ts for details. */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerOscHandler(ident, callback);\n  }\n\n  protected _setup(): void {\n    if (this.optionsService.rawOptions.windowsMode) {\n      this._enableWindowsMode();\n    }\n  }\n\n  public reset(): void {\n    this._inputHandler.reset();\n    this._bufferService.reset();\n    this._charsetService.reset();\n    this.coreService.reset();\n    this.coreMouseService.reset();\n  }\n\n  protected _updateOptions(key: string): void {\n    // TODO: These listeners should be owned by individual components\n    switch (key) {\n      case 'scrollback':\n        this.buffers.resize(this.cols, this.rows);\n        break;\n      case 'windowsMode':\n        if (this.optionsService.rawOptions.windowsMode) {\n          this._enableWindowsMode();\n        } else {\n          this._windowsMode?.dispose();\n          this._windowsMode = undefined;\n        }\n        break;\n    }\n  }\n\n  protected _enableWindowsMode(): void {\n    if (!this._windowsMode) {\n      const disposables: IDisposable[] = [];\n      disposables.push(this.onLineFeed(updateWindowsModeWrappedState.bind(null, this._bufferService)));\n      disposables.push(this.registerCsiHandler({ final: 'H' }, () => {\n        updateWindowsModeWrappedState(this._bufferService);\n        return false;\n      }));\n      this._windowsMode = {\n        dispose: () => {\n          for (const d of disposables) {\n            d.dispose();\n          }\n        }\n      };\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T, U = void> {\n  (arg1: T, arg2: U): void;\n}\n\nexport interface IEvent<T, U = void> {\n  (listener: (arg1: T, arg2: U) => any): IDisposable;\n}\n\nexport interface IEventEmitter<T, U = void> {\n  event: IEvent<T, U>;\n  fire(arg1: T, arg2: U): void;\n  dispose(): void;\n}\n\nexport class EventEmitter<T, U = void> implements IEventEmitter<T, U> {\n  private _listeners: IListener<T, U>[] = [];\n  private _event?: IEvent<T, U>;\n  private _disposed: boolean = false;\n\n  public get event(): IEvent<T, U> {\n    if (!this._event) {\n      this._event = (listener: (arg1: T, arg2: U) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            if (!this._disposed) {\n              for (let i = 0; i < this._listeners.length; i++) {\n                if (this._listeners[i] === listener) {\n                  this._listeners.splice(i, 1);\n                  return;\n                }\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(arg1: T, arg2: U): void {\n    const queue: IListener<T, U>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, arg1, arg2);\n    }\n  }\n\n  public dispose(): void {\n    if (this._listeners) {\n      this._listeners.length = 0;\n    }\n    this._disposed = true;\n  }\n}\n\nexport function forwardEvent<T>(from: IEvent<T>, to: IEventEmitter<T>): IDisposable {\n  return from(e => to.fire(e));\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IInputHandler, IAttributeData, IDisposable, IWindowOptions, IColorEvent, IParseStack, ColorIndex, ColorRequestType } from 'common/Types';\nimport { C0, C1 } from 'common/data/EscapeSequences';\nimport { CHARSETS, DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { EscapeSequenceParser } from 'common/parser/EscapeSequenceParser';\nimport { Disposable } from 'common/Lifecycle';\nimport { concat } from 'common/TypedArrayUtils';\nimport { StringToUtf32, stringFromCodePoint, utf32ToString, Utf8ToUtf32 } from 'common/input/TextDecoder';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IFunctionIdentifier } from 'common/parser/Types';\nimport { NULL_CELL_CODE, NULL_CELL_WIDTH, Attributes, FgFlags, BgFlags, Content, UnderlineStyle } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { ICoreService, IBufferService, IOptionsService, ILogService, IDirtyRowService, ICoreMouseService, ICharsetService, IUnicodeService, LogLevelEnum } from 'common/services/Services';\nimport { OscHandler } from 'common/parser/OscParser';\nimport { DcsHandler } from 'common/parser/DcsParser';\nimport { IBuffer } from 'common/buffer/Types';\nimport { parseColor } from 'common/input/XParseColor';\n\n/**\n * Map collect to glevel. Used in `selectCharset`.\n */\nconst GLEVEL: { [key: string]: number } = { '(': 0, ')': 1, '*': 2, '+': 3, '-': 1, '.': 2 };\n\n/**\n * VT commands done by the parser - FIXME: move this to the parser?\n */\n// @vt: #Y   ESC   CSI   \"Control Sequence Introducer\"   \"ESC [\"   \"Start of a CSI sequence.\"\n// @vt: #Y   ESC   OSC   \"Operating System Command\"      \"ESC ]\"   \"Start of an OSC sequence.\"\n// @vt: #Y   ESC   DCS   \"Device Control String\"         \"ESC P\"   \"Start of a DCS sequence.\"\n// @vt: #Y   ESC   ST    \"String Terminator\"             \"ESC \\\"   \"Terminator used for string type sequences.\"\n// @vt: #Y   ESC   PM    \"Privacy Message\"               \"ESC ^\"   \"Start of a privacy message.\"\n// @vt: #Y   ESC   APC   \"Application Program Command\"   \"ESC _\"   \"Start of an APC sequence.\"\n// @vt: #Y   C1    CSI   \"Control Sequence Introducer\"   \"\\x9B\"    \"Start of a CSI sequence.\"\n// @vt: #Y   C1    OSC   \"Operating System Command\"      \"\\x9D\"    \"Start of an OSC sequence.\"\n// @vt: #Y   C1    DCS   \"Device Control String\"         \"\\x90\"    \"Start of a DCS sequence.\"\n// @vt: #Y   C1    ST    \"String Terminator\"             \"\\x9C\"    \"Terminator used for string type sequences.\"\n// @vt: #Y   C1    PM    \"Privacy Message\"               \"\\x9E\"    \"Start of a privacy message.\"\n// @vt: #Y   C1    APC   \"Application Program Command\"   \"\\x9F\"    \"Start of an APC sequence.\"\n// @vt: #Y   C0    NUL   \"Null\"                          \"\\0, \\x00\"  \"NUL is ignored.\"\n// @vt: #Y   C0    ESC   \"Escape\"                        \"\\e, \\x1B\"  \"Start of a sequence. Cancels any other sequence.\"\n\n/**\n * Document common VT features here that are currently unsupported\n */\n// @vt: #N   DCS   SIXEL   \"SIXEL Graphics\"  \"DCS Ps ; Ps ; Ps ; q \tPt ST\"   \"Draw SIXEL image starting at cursor position.\"\n// @vt: #N   OSC    1   \"Set Icon Name\"  \"OSC 1 ; Pt BEL\"  \"Set icon name.\"\n\n/**\n * Max length of the UTF32 input buffer. Real memory consumption is 4 times higher.\n */\nconst MAX_PARSEBUFFER_LENGTH = 131072;\n\n/**\n * Limit length of title and icon name stacks.\n */\nconst STACK_LIMIT = 10;\n\n// map params to window option\nfunction paramToWindowOption(n: number, opts: IWindowOptions): boolean {\n  if (n > 24) {\n    return opts.setWinLines || false;\n  }\n  switch (n) {\n    case 1: return !!opts.restoreWin;\n    case 2: return !!opts.minimizeWin;\n    case 3: return !!opts.setWinPosition;\n    case 4: return !!opts.setWinSizePixels;\n    case 5: return !!opts.raiseWin;\n    case 6: return !!opts.lowerWin;\n    case 7: return !!opts.refreshWin;\n    case 8: return !!opts.setWinSizeChars;\n    case 9: return !!opts.maximizeWin;\n    case 10: return !!opts.fullscreenWin;\n    case 11: return !!opts.getWinState;\n    case 13: return !!opts.getWinPosition;\n    case 14: return !!opts.getWinSizePixels;\n    case 15: return !!opts.getScreenSizePixels;\n    case 16: return !!opts.getCellSizePixels;\n    case 18: return !!opts.getWinSizeChars;\n    case 19: return !!opts.getScreenSizeChars;\n    case 20: return !!opts.getIconTitle;\n    case 21: return !!opts.getWinTitle;\n    case 22: return !!opts.pushTitle;\n    case 23: return !!opts.popTitle;\n    case 24: return !!opts.setWinLines;\n  }\n  return false;\n}\n\nexport enum WindowsOptionsReportType {\n  GET_WIN_SIZE_PIXELS = 0,\n  GET_CELL_SIZE_PIXELS = 1\n}\n\n// create a warning log if an async handler takes longer than the limit (in ms)\nconst SLOW_ASYNC_LIMIT = 5000;\n\n/**\n * DCS subparser implementations\n */\n\n/**\n * DCS $ q Pt ST\n *   DECRQSS (https://vt100.net/docs/vt510-rm/DECRQSS.html)\n *   Request Status String (DECRQSS), VT420 and up.\n *   Response: DECRPSS (https://vt100.net/docs/vt510-rm/DECRPSS.html)\n *\n * @vt: #P[See limited support below.]  DCS   DECRQSS   \"Request Selection or Setting\"  \"DCS $ q Pt ST\"   \"Request several terminal settings.\"\n * Response is in the form `ESC P 1 $ r Pt ST` for valid requests, where `Pt` contains the corresponding CSI string,\n * `ESC P 0 ST` for invalid requests.\n *\n * Supported requests and responses:\n *\n * | Type                             | Request           | Response (`Pt`)                                       |\n * | -------------------------------- | ----------------- | ----------------------------------------------------- |\n * | Graphic Rendition (SGR)          | `DCS $ q m ST`    | always reporting `0m` (currently broken)              |\n * | Top and Bottom Margins (DECSTBM) | `DCS $ q r ST`    | `Ps ; Ps r`                                           |\n * | Cursor Style (DECSCUSR)          | `DCS $ q SP q ST` | `Ps SP q`                                             |\n * | Protection Attribute (DECSCA)    | `DCS $ q \" q ST`  | always reporting `0 \" q` (DECSCA is unsupported)      |\n * | Conformance Level (DECSCL)       | `DCS $ q \" p ST`  | always reporting `61 ; 1 \" p` (DECSCL is unsupported) |\n *\n *\n * TODO:\n * - fix SGR report\n * - either implement DECSCA or remove the report\n * - either check which conformance is better suited or remove the report completely\n *   --> we are currently a mixture of all up to VT400 but dont follow anyone strictly\n */\nclass DECRQSS implements IDcsHandler {\n  private _data: Uint32Array = new Uint32Array(0);\n\n  constructor(\n    private _bufferService: IBufferService,\n    private _coreService: ICoreService,\n    private _logService: ILogService,\n    private _optionsService: IOptionsService\n  ) { }\n\n  public hook(params: IParams): void {\n    this._data = new Uint32Array(0);\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    this._data = concat(this._data, data.subarray(start, end));\n  }\n\n  public unhook(success: boolean): boolean {\n    if (!success) {\n      this._data = new Uint32Array(0);\n      return true;\n    }\n    const data = utf32ToString(this._data);\n    this._data = new Uint32Array(0);\n    switch (data) {\n      // valid: DCS 1 $ r Pt ST (xterm)\n      case '\"q': // DECSCA\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r0\"q${C0.ESC}\\\\`);\n        break;\n      case '\"p': // DECSCL\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r61;1\"p${C0.ESC}\\\\`);\n        break;\n      case 'r': // DECSTBM\n        const pt = '' + (this._bufferService.buffer.scrollTop + 1) +\n          ';' + (this._bufferService.buffer.scrollBottom + 1) + 'r';\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r${pt}${C0.ESC}\\\\`);\n        break;\n      case 'm': // SGR\n        // TODO: report real settings instead of 0m\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r0m${C0.ESC}\\\\`);\n        break;\n      case ' q': // DECSCUSR\n        const STYLES: { [key: string]: number } = { 'block': 2, 'underline': 4, 'bar': 6 };\n        let style = STYLES[this._optionsService.rawOptions.cursorStyle];\n        style -= this._optionsService.rawOptions.cursorBlink ? 1 : 0;\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r${style} q${C0.ESC}\\\\`);\n        break;\n      default:\n        // invalid: DCS 0 $ r Pt ST (xterm)\n        this._logService.debug('Unknown DCS $q %s', data);\n        this._coreService.triggerDataEvent(`${C0.ESC}P0$r${C0.ESC}\\\\`);\n    }\n    return true;\n  }\n}\n\n/**\n * DCS Ps; Ps| Pt ST\n *   DECUDK (https://vt100.net/docs/vt510-rm/DECUDK.html)\n *   not supported\n *\n * @vt: #N  DCS   DECUDK   \"User Defined Keys\"  \"DCS Ps ; Ps | Pt ST\"   \"Definitions for user-defined keys.\"\n */\n\n/**\n * DCS + q Pt ST (xterm)\n *   Request Terminfo String\n *   not implemented\n *\n * @vt: #N  DCS   XTGETTCAP   \"Request Terminfo String\"  \"DCS + q Pt ST\"   \"Request Terminfo String.\"\n */\n\n/**\n * DCS + p Pt ST (xterm)\n *   Set Terminfo Data\n *   not supported\n *\n * @vt: #N  DCS   XTSETTCAP   \"Set Terminfo Data\"  \"DCS + p Pt ST\"   \"Set Terminfo Data.\"\n */\n\n\n\n/**\n * The terminal's standard implementation of IInputHandler, this handles all\n * input from the Parser.\n *\n * Refer to http://invisible-island.net/xterm/ctlseqs/ctlseqs.html to understand\n * each function's header comment.\n */\nexport class InputHandler extends Disposable implements IInputHandler {\n  private _parseBuffer: Uint32Array = new Uint32Array(4096);\n  private _stringDecoder: StringToUtf32 = new StringToUtf32();\n  private _utf8Decoder: Utf8ToUtf32 = new Utf8ToUtf32();\n  private _workCell: CellData = new CellData();\n  private _windowTitle = '';\n  private _iconName = '';\n  protected _windowTitleStack: string[] = [];\n  protected _iconNameStack: string[] = [];\n\n  private _curAttrData: IAttributeData = DEFAULT_ATTR_DATA.clone();\n  private _eraseAttrDataInternal: IAttributeData = DEFAULT_ATTR_DATA.clone();\n\n  private _activeBuffer: IBuffer;\n\n  private _onRequestBell = new EventEmitter<void>();\n  public get onRequestBell(): IEvent<void> { return this._onRequestBell.event; }\n  private _onRequestRefreshRows = new EventEmitter<number, number>();\n  public get onRequestRefreshRows(): IEvent<number, number> { return this._onRequestRefreshRows.event; }\n  private _onRequestReset = new EventEmitter<void>();\n  public get onRequestReset(): IEvent<void> { return this._onRequestReset.event; }\n  private _onRequestSendFocus = new EventEmitter<void>();\n  public get onRequestSendFocus(): IEvent<void> { return this._onRequestSendFocus.event; }\n  private _onRequestSyncScrollBar = new EventEmitter<void>();\n  public get onRequestSyncScrollBar(): IEvent<void> { return this._onRequestSyncScrollBar.event; }\n  private _onRequestWindowsOptionsReport = new EventEmitter<WindowsOptionsReportType>();\n  public get onRequestWindowsOptionsReport(): IEvent<WindowsOptionsReportType> { return this._onRequestWindowsOptionsReport.event; }\n\n  private _onA11yChar = new EventEmitter<string>();\n  public get onA11yChar(): IEvent<string> { return this._onA11yChar.event; }\n  private _onA11yTab = new EventEmitter<number>();\n  public get onA11yTab(): IEvent<number> { return this._onA11yTab.event; }\n  private _onCursorMove = new EventEmitter<void>();\n  public get onCursorMove(): IEvent<void> { return this._onCursorMove.event; }\n  private _onLineFeed = new EventEmitter<void>();\n  public get onLineFeed(): IEvent<void> { return this._onLineFeed.event; }\n  private _onScroll = new EventEmitter<number>();\n  public get onScroll(): IEvent<number> { return this._onScroll.event; }\n  private _onTitleChange = new EventEmitter<string>();\n  public get onTitleChange(): IEvent<string> { return this._onTitleChange.event; }\n  private _onColor = new EventEmitter<IColorEvent>();\n  public get onColor(): IEvent<IColorEvent> { return this._onColor.event; }\n\n  private _parseStack: IParseStack = {\n    paused: false,\n    cursorStartX: 0,\n    cursorStartY: 0,\n    decodedLength: 0,\n    position: 0\n  };\n\n  constructor(\n    private readonly _bufferService: IBufferService,\n    private readonly _charsetService: ICharsetService,\n    private readonly _coreService: ICoreService,\n    private readonly _dirtyRowService: IDirtyRowService,\n    private readonly _logService: ILogService,\n    private readonly _optionsService: IOptionsService,\n    private readonly _coreMouseService: ICoreMouseService,\n    private readonly _unicodeService: IUnicodeService,\n    private readonly _parser: IEscapeSequenceParser = new EscapeSequenceParser()\n  ) {\n    super();\n    this.register(this._parser);\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n\n    /**\n     * custom fallback handlers\n     */\n    this._parser.setCsiHandlerFallback((ident, params) => {\n      this._logService.debug('Unknown CSI code: ', { identifier: this._parser.identToString(ident), params: params.toArray() });\n    });\n    this._parser.setEscHandlerFallback(ident => {\n      this._logService.debug('Unknown ESC code: ', { identifier: this._parser.identToString(ident) });\n    });\n    this._parser.setExecuteHandlerFallback(code => {\n      this._logService.debug('Unknown EXECUTE code: ', { code });\n    });\n    this._parser.setOscHandlerFallback((identifier, action, data) => {\n      this._logService.debug('Unknown OSC code: ', { identifier, action, data });\n    });\n    this._parser.setDcsHandlerFallback((ident, action, payload) => {\n      if (action === 'HOOK') {\n        payload = payload.toArray();\n      }\n      this._logService.debug('Unknown DCS code: ', { identifier: this._parser.identToString(ident), action, payload });\n    });\n\n    /**\n     * print handler\n     */\n    this._parser.setPrintHandler((data, start, end) => this.print(data, start, end));\n\n    /**\n     * CSI handler\n     */\n    this._parser.registerCsiHandler({ final: '@' }, params => this.insertChars(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: '@' }, params => this.scrollLeft(params));\n    this._parser.registerCsiHandler({ final: 'A' }, params => this.cursorUp(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'A' }, params => this.scrollRight(params));\n    this._parser.registerCsiHandler({ final: 'B' }, params => this.cursorDown(params));\n    this._parser.registerCsiHandler({ final: 'C' }, params => this.cursorForward(params));\n    this._parser.registerCsiHandler({ final: 'D' }, params => this.cursorBackward(params));\n    this._parser.registerCsiHandler({ final: 'E' }, params => this.cursorNextLine(params));\n    this._parser.registerCsiHandler({ final: 'F' }, params => this.cursorPrecedingLine(params));\n    this._parser.registerCsiHandler({ final: 'G' }, params => this.cursorCharAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'H' }, params => this.cursorPosition(params));\n    this._parser.registerCsiHandler({ final: 'I' }, params => this.cursorForwardTab(params));\n    this._parser.registerCsiHandler({ final: 'J' }, params => this.eraseInDisplay(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'J' }, params => this.eraseInDisplay(params));\n    this._parser.registerCsiHandler({ final: 'K' }, params => this.eraseInLine(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'K' }, params => this.eraseInLine(params));\n    this._parser.registerCsiHandler({ final: 'L' }, params => this.insertLines(params));\n    this._parser.registerCsiHandler({ final: 'M' }, params => this.deleteLines(params));\n    this._parser.registerCsiHandler({ final: 'P' }, params => this.deleteChars(params));\n    this._parser.registerCsiHandler({ final: 'S' }, params => this.scrollUp(params));\n    this._parser.registerCsiHandler({ final: 'T' }, params => this.scrollDown(params));\n    this._parser.registerCsiHandler({ final: 'X' }, params => this.eraseChars(params));\n    this._parser.registerCsiHandler({ final: 'Z' }, params => this.cursorBackwardTab(params));\n    this._parser.registerCsiHandler({ final: '`' }, params => this.charPosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'a' }, params => this.hPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'b' }, params => this.repeatPrecedingCharacter(params));\n    this._parser.registerCsiHandler({ final: 'c' }, params => this.sendDeviceAttributesPrimary(params));\n    this._parser.registerCsiHandler({ prefix: '>', final: 'c' }, params => this.sendDeviceAttributesSecondary(params));\n    this._parser.registerCsiHandler({ final: 'd' }, params => this.linePosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'e' }, params => this.vPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'f' }, params => this.hVPosition(params));\n    this._parser.registerCsiHandler({ final: 'g' }, params => this.tabClear(params));\n    this._parser.registerCsiHandler({ final: 'h' }, params => this.setMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'h' }, params => this.setModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'l' }, params => this.resetMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'l' }, params => this.resetModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'm' }, params => this.charAttributes(params));\n    this._parser.registerCsiHandler({ final: 'n' }, params => this.deviceStatus(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'n' }, params => this.deviceStatusPrivate(params));\n    this._parser.registerCsiHandler({ intermediates: '!', final: 'p' }, params => this.softReset(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'q' }, params => this.setCursorStyle(params));\n    this._parser.registerCsiHandler({ final: 'r' }, params => this.setScrollRegion(params));\n    this._parser.registerCsiHandler({ final: 's' }, params => this.saveCursor(params));\n    this._parser.registerCsiHandler({ final: 't' }, params => this.windowOptions(params));\n    this._parser.registerCsiHandler({ final: 'u' }, params => this.restoreCursor(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '}' }, params => this.insertColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '~' }, params => this.deleteColumns(params));\n\n    /**\n     * execute handler\n     */\n    this._parser.setExecuteHandler(C0.BEL, () => this.bell());\n    this._parser.setExecuteHandler(C0.LF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.VT, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.FF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.CR, () => this.carriageReturn());\n    this._parser.setExecuteHandler(C0.BS, () => this.backspace());\n    this._parser.setExecuteHandler(C0.HT, () => this.tab());\n    this._parser.setExecuteHandler(C0.SO, () => this.shiftOut());\n    this._parser.setExecuteHandler(C0.SI, () => this.shiftIn());\n    // FIXME:   What do to with missing? Old code just added those to print.\n\n    this._parser.setExecuteHandler(C1.IND, () => this.index());\n    this._parser.setExecuteHandler(C1.NEL, () => this.nextLine());\n    this._parser.setExecuteHandler(C1.HTS, () => this.tabSet());\n\n    /**\n     * OSC handler\n     */\n    //   0 - icon name + title\n    this._parser.registerOscHandler(0, new OscHandler(data => { this.setTitle(data); this.setIconName(data); return true; }));\n    //   1 - icon name\n    this._parser.registerOscHandler(1, new OscHandler(data => this.setIconName(data)));\n    //   2 - title\n    this._parser.registerOscHandler(2, new OscHandler(data => this.setTitle(data)));\n    //   3 - set property X in the form \"prop=value\"\n    //   4 - Change Color Number\n    this._parser.registerOscHandler(4, new OscHandler(data => this.setOrReportIndexedColor(data)));\n    //   5 - Change Special Color Number\n    //   6 - Enable/disable Special Color Number c\n    //   7 - current directory? (not in xterm spec, see https://gitlab.com/gnachman/iterm2/issues/3939)\n    //  10 - Change VT100 text foreground color to Pt.\n    this._parser.registerOscHandler(10, new OscHandler(data => this.setOrReportFgColor(data)));\n    //  11 - Change VT100 text background color to Pt.\n    this._parser.registerOscHandler(11, new OscHandler(data => this.setOrReportBgColor(data)));\n    //  12 - Change text cursor color to Pt.\n    this._parser.registerOscHandler(12, new OscHandler(data => this.setOrReportCursorColor(data)));\n    //  13 - Change mouse foreground color to Pt.\n    //  14 - Change mouse background color to Pt.\n    //  15 - Change Tektronix foreground color to Pt.\n    //  16 - Change Tektronix background color to Pt.\n    //  17 - Change highlight background color to Pt.\n    //  18 - Change Tektronix cursor color to Pt.\n    //  19 - Change highlight foreground color to Pt.\n    //  46 - Change Log File to Pt.\n    //  50 - Set Font to Pt.\n    //  51 - reserved for Emacs shell.\n    //  52 - Manipulate Selection Data.\n    // 104 ; c - Reset Color Number c.\n    this._parser.registerOscHandler(104, new OscHandler(data => this.restoreIndexedColor(data)));\n    // 105 ; c - Reset Special Color Number c.\n    // 106 ; c; f - Enable/disable Special Color Number c.\n    // 110 - Reset VT100 text foreground color.\n    this._parser.registerOscHandler(110, new OscHandler(data => this.restoreFgColor(data)));\n    // 111 - Reset VT100 text background color.\n    this._parser.registerOscHandler(111, new OscHandler(data => this.restoreBgColor(data)));\n    // 112 - Reset text cursor color.\n    this._parser.registerOscHandler(112, new OscHandler(data => this.restoreCursorColor(data)));\n    // 113 - Reset mouse foreground color.\n    // 114 - Reset mouse background color.\n    // 115 - Reset Tektronix foreground color.\n    // 116 - Reset Tektronix background color.\n    // 117 - Reset highlight color.\n    // 118 - Reset Tektronix cursor color.\n    // 119 - Reset highlight foreground color.\n\n    /**\n     * ESC handlers\n     */\n    this._parser.registerEscHandler({ final: '7' }, () => this.saveCursor());\n    this._parser.registerEscHandler({ final: '8' }, () => this.restoreCursor());\n    this._parser.registerEscHandler({ final: 'D' }, () => this.index());\n    this._parser.registerEscHandler({ final: 'E' }, () => this.nextLine());\n    this._parser.registerEscHandler({ final: 'H' }, () => this.tabSet());\n    this._parser.registerEscHandler({ final: 'M' }, () => this.reverseIndex());\n    this._parser.registerEscHandler({ final: '=' }, () => this.keypadApplicationMode());\n    this._parser.registerEscHandler({ final: '>' }, () => this.keypadNumericMode());\n    this._parser.registerEscHandler({ final: 'c' }, () => this.fullReset());\n    this._parser.registerEscHandler({ final: 'n' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: 'o' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '|' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '}' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: '~' }, () => this.setgLevel(1));\n    this._parser.registerEscHandler({ intermediates: '%', final: '@' }, () => this.selectDefaultCharset());\n    this._parser.registerEscHandler({ intermediates: '%', final: 'G' }, () => this.selectDefaultCharset());\n    for (const flag in CHARSETS) {\n      this._parser.registerEscHandler({ intermediates: '(', final: flag }, () => this.selectCharset('(' + flag));\n      this._parser.registerEscHandler({ intermediates: ')', final: flag }, () => this.selectCharset(')' + flag));\n      this._parser.registerEscHandler({ intermediates: '*', final: flag }, () => this.selectCharset('*' + flag));\n      this._parser.registerEscHandler({ intermediates: '+', final: flag }, () => this.selectCharset('+' + flag));\n      this._parser.registerEscHandler({ intermediates: '-', final: flag }, () => this.selectCharset('-' + flag));\n      this._parser.registerEscHandler({ intermediates: '.', final: flag }, () => this.selectCharset('.' + flag));\n      this._parser.registerEscHandler({ intermediates: '/', final: flag }, () => this.selectCharset('/' + flag)); // TODO: supported?\n    }\n    this._parser.registerEscHandler({ intermediates: '#', final: '8' }, () => this.screenAlignmentPattern());\n\n    /**\n     * error handler\n     */\n    this._parser.setErrorHandler((state: IParsingState) => {\n      this._logService.error('Parsing error: ', state);\n      return state;\n    });\n\n    /**\n     * DCS handler\n     */\n    this._parser.registerDcsHandler({ intermediates: '$', final: 'q' }, new DECRQSS(this._bufferService, this._coreService, this._logService, this._optionsService));\n  }\n\n  public dispose(): void {\n    super.dispose();\n  }\n\n  /**\n   * Async parse support.\n   */\n  private _preserveStack(cursorStartX: number, cursorStartY: number, decodedLength: number, position: number): void {\n    this._parseStack.paused = true;\n    this._parseStack.cursorStartX = cursorStartX;\n    this._parseStack.cursorStartY = cursorStartY;\n    this._parseStack.decodedLength = decodedLength;\n    this._parseStack.position = position;\n  }\n\n  private _logSlowResolvingAsync(p: Promise<boolean>): void {\n    // log a limited warning about an async handler taking too long\n    if (this._logService.logLevel <= LogLevelEnum.WARN) {\n      Promise.race([p, new Promise((res, rej) => setTimeout(() => rej('#SLOW_TIMEOUT'), SLOW_ASYNC_LIMIT))])\n        .catch(err => {\n          if (err !== '#SLOW_TIMEOUT') {\n            throw err;\n          }\n          console.warn(`async parser handler taking longer than ${SLOW_ASYNC_LIMIT} ms`);\n        });\n    }\n  }\n\n  /**\n   * Parse call with async handler support.\n   *\n   * Whether the stack state got preserved for the next call, is indicated by the return value:\n   * - undefined (void):\n   *   all handlers were sync, no stack save, continue normally with next chunk\n   * - Promise\\<boolean\\>:\n   *   execution stopped at async handler, stack saved, continue with\n   *   same chunk and the promise resolve value as `promiseResult` until the method returns `undefined`\n   *\n   * Note: This method should only be called by `Terminal.write` to ensure correct execution order and\n   * proper continuation of async parser handlers.\n   */\n  public parse(data: string | Uint8Array, promiseResult?: boolean): void | Promise<boolean> {\n    let result: void | Promise<boolean>;\n    let cursorStartX = this._activeBuffer.x;\n    let cursorStartY = this._activeBuffer.y;\n    let start = 0;\n    const wasPaused = this._parseStack.paused;\n\n    if (wasPaused) {\n      // assumption: _parseBuffer never mutates between async calls\n      if (result = this._parser.parse(this._parseBuffer, this._parseStack.decodedLength, promiseResult)) {\n        this._logSlowResolvingAsync(result);\n        return result;\n      }\n      cursorStartX = this._parseStack.cursorStartX;\n      cursorStartY = this._parseStack.cursorStartY;\n      this._parseStack.paused = false;\n      if (data.length > MAX_PARSEBUFFER_LENGTH) {\n        start = this._parseStack.position + MAX_PARSEBUFFER_LENGTH;\n      }\n    }\n\n    // Log debug data, the log level gate is to prevent extra work in this hot path\n    if (this._logService.logLevel <= LogLevelEnum.DEBUG) {\n      this._logService.debug(`parsing data${typeof data === 'string' ? ` \"${data}\"` : ` \"${Array.prototype.map.call(data, e => String.fromCharCode(e)).join('')}\"`}`, typeof data === 'string'\n        ? data.split('').map(e => e.charCodeAt(0))\n        : data\n      );\n    }\n\n    // resize input buffer if needed\n    if (this._parseBuffer.length < data.length) {\n      if (this._parseBuffer.length < MAX_PARSEBUFFER_LENGTH) {\n        this._parseBuffer = new Uint32Array(Math.min(data.length, MAX_PARSEBUFFER_LENGTH));\n      }\n    }\n\n    // Clear the dirty row service so we know which lines changed as a result of parsing\n    // Important: do not clear between async calls, otherwise we lost pending update information.\n    if (!wasPaused) {\n      this._dirtyRowService.clearRange();\n    }\n\n    // process big data in smaller chunks\n    if (data.length > MAX_PARSEBUFFER_LENGTH) {\n      for (let i = start; i < data.length; i += MAX_PARSEBUFFER_LENGTH) {\n        const end = i + MAX_PARSEBUFFER_LENGTH < data.length ? i + MAX_PARSEBUFFER_LENGTH : data.length;\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data.substring(i, end), this._parseBuffer)\n          : this._utf8Decoder.decode(data.subarray(i, end), this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, i);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    } else {\n      if (!wasPaused) {\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data, this._parseBuffer)\n          : this._utf8Decoder.decode(data, this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, 0);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    }\n\n    if (this._activeBuffer.x !== cursorStartX || this._activeBuffer.y !== cursorStartY) {\n      this._onCursorMove.fire();\n    }\n\n    // Refresh any dirty rows accumulated as part of parsing\n    this._onRequestRefreshRows.fire(this._dirtyRowService.start, this._dirtyRowService.end);\n  }\n\n  public print(data: Uint32Array, start: number, end: number): void {\n    let code: number;\n    let chWidth: number;\n    const charset = this._charsetService.charset;\n    const screenReaderMode = this._optionsService.rawOptions.screenReaderMode;\n    const cols = this._bufferService.cols;\n    const wraparoundMode = this._coreService.decPrivateModes.wraparound;\n    const insertMode = this._coreService.modes.insertMode;\n    const curAttr = this._curAttrData;\n    let bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n\n    // handle wide chars: reset start_cell-1 if we would overwrite the second cell of a wide char\n    if (this._activeBuffer.x && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x - 1) === 2) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x - 1, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    for (let pos = start; pos < end; ++pos) {\n      code = data[pos];\n\n      // calculate print space\n      // expensive call, therefore we save width in line buffer\n      chWidth = this._unicodeService.wcwidth(code);\n\n      // get charset replacement character\n      // charset is only defined for ASCII, therefore we only\n      // search for an replacement char if code < 127\n      if (code < 127 && charset) {\n        const ch = charset[String.fromCharCode(code)];\n        if (ch) {\n          code = ch.charCodeAt(0);\n        }\n      }\n\n      if (screenReaderMode) {\n        this._onA11yChar.fire(stringFromCodePoint(code));\n      }\n\n      // insert combining char at last cursor position\n      // this._activeBuffer.x should never be 0 for a combining char\n      // since they always follow a cell consuming char\n      // therefore we can test for this._activeBuffer.x to avoid overflow left\n      if (!chWidth && this._activeBuffer.x) {\n        if (!bufferRow.getWidth(this._activeBuffer.x - 1)) {\n          // found empty cell after fullwidth, need to go 2 cells back\n          // it is save to step 2 cells back here\n          // since an empty cell is only set by fullwidth chars\n          bufferRow.addCodepointToCell(this._activeBuffer.x - 2, code);\n        } else {\n          bufferRow.addCodepointToCell(this._activeBuffer.x - 1, code);\n        }\n        continue;\n      }\n\n      // goto next line if ch would overflow\n      // NOTE: To avoid costly width checks here,\n      // the terminal does not allow a cols < 2.\n      if (this._activeBuffer.x + chWidth - 1 >= cols) {\n        // autowrap - DECAWM\n        // automatically wraps to the beginning of the next line\n        if (wraparoundMode) {\n          // clear left over cells to the right\n          while (this._activeBuffer.x < cols) {\n            bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n          }\n          this._activeBuffer.x = 0;\n          this._activeBuffer.y++;\n          if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n            this._activeBuffer.y--;\n            this._bufferService.scroll(this._eraseAttrData(), true);\n          } else {\n            if (this._activeBuffer.y >= this._bufferService.rows) {\n              this._activeBuffer.y = this._bufferService.rows - 1;\n            }\n            // The line already exists (eg. the initial viewport), mark it as a\n            // wrapped line\n            this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = true;\n          }\n          // row changed, get it again\n          bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        } else {\n          this._activeBuffer.x = cols - 1;\n          if (chWidth === 2) {\n            // FIXME: check for xterm behavior\n            // What to do here? We got a wide char that does not fit into last cell\n            continue;\n          }\n        }\n      }\n\n      // insert mode: move characters to right\n      if (insertMode) {\n        // right shift cells according to the width\n        bufferRow.insertCells(this._activeBuffer.x, chWidth, this._activeBuffer.getNullCell(curAttr), curAttr);\n        // test last cell - since the last cell has only room for\n        // a halfwidth char any fullwidth shifted there is lost\n        // and will be set to empty cell\n        if (bufferRow.getWidth(cols - 1) === 2) {\n          bufferRow.setCellFromCodePoint(cols - 1, NULL_CELL_CODE, NULL_CELL_WIDTH, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n\n      // write current char to buffer and advance cursor\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x++, code, chWidth, curAttr.fg, curAttr.bg, curAttr.extended);\n\n      // fullwidth char - also set next cell to placeholder stub and advance cursor\n      // for graphemes bigger than fullwidth we can simply loop to zero\n      // we already made sure above, that this._activeBuffer.x + chWidth will not overflow right\n      if (chWidth > 0) {\n        while (--chWidth) {\n          // other than a regular empty cell a cell following a wide char has no width\n          bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 0, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n    }\n    // store last char in Parser.precedingCodepoint for REP to work correctly\n    // This needs to check whether:\n    //  - fullwidth + surrogates: reset\n    //  - combining: only base char gets carried on (bug in xterm?)\n    if (end - start > 0) {\n      bufferRow.loadCell(this._activeBuffer.x - 1, this._workCell);\n      if (this._workCell.getWidth() === 2 || this._workCell.getCode() > 0xFFFF) {\n        this._parser.precedingCodepoint = 0;\n      } else if (this._workCell.isCombined()) {\n        this._parser.precedingCodepoint = this._workCell.getChars().charCodeAt(0);\n      } else {\n        this._parser.precedingCodepoint = this._workCell.content;\n      }\n    }\n\n    // handle wide chars: reset cell to the right if it is second cell of a wide char\n    if (this._activeBuffer.x < cols && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x) === 0 && !bufferRow.hasContent(this._activeBuffer.x)) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Forward registerCsiHandler from parser.\n   */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    if (id.final === 't' && !id.prefix && !id.intermediates) {\n      // security: always check whether window option is allowed\n      return this._parser.registerCsiHandler(id, params => {\n        if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n          return true;\n        }\n        return callback(params);\n      });\n    }\n    return this._parser.registerCsiHandler(id, callback);\n  }\n\n  /**\n   * Forward registerDcsHandler from parser.\n   */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerDcsHandler(id, new DcsHandler(callback));\n  }\n\n  /**\n   * Forward registerEscHandler from parser.\n   */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerEscHandler(id, callback);\n  }\n\n  /**\n   * Forward registerOscHandler from parser.\n   */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerOscHandler(ident, new OscHandler(callback));\n  }\n\n  /**\n   * BEL\n   * Bell (Ctrl-G).\n   *\n   * @vt: #Y   C0    BEL   \"Bell\"  \"\\a, \\x07\"  \"Ring the bell.\"\n   * The behavior of the bell is further customizable with `ITerminalOptions.bellStyle`\n   * and `ITerminalOptions.bellSound`.\n   */\n  public bell(): boolean {\n    this._onRequestBell.fire();\n    return true;\n  }\n\n  /**\n   * LF\n   * Line Feed or New Line (NL).  (LF  is Ctrl-J).\n   *\n   * @vt: #Y   C0    LF   \"Line Feed\"            \"\\n, \\x0A\"  \"Move the cursor one row down, scrolling if needed.\"\n   * Scrolling is restricted to scroll margins and will only happen on the bottom line.\n   *\n   * @vt: #Y   C0    VT   \"Vertical Tabulation\"  \"\\v, \\x0B\"  \"Treated as LF.\"\n   * @vt: #Y   C0    FF   \"Form Feed\"            \"\\f, \\x0C\"  \"Treated as LF.\"\n   */\n  public lineFeed(): boolean {\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n    if (this._optionsService.rawOptions.convertEol) {\n      this._activeBuffer.x = 0;\n    }\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      this._activeBuffer.x--;\n    }\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n\n    this._onLineFeed.fire();\n    return true;\n  }\n\n  /**\n   * CR\n   * Carriage Return (Ctrl-M).\n   *\n   * @vt: #Y   C0    CR   \"Carriage Return\"  \"\\r, \\x0D\"  \"Move the cursor to the beginning of the row.\"\n   */\n  public carriageReturn(): boolean {\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * BS\n   * Backspace (Ctrl-H).\n   *\n   * @vt: #Y   C0    BS   \"Backspace\"  \"\\b, \\x08\"  \"Move the cursor one position to the left.\"\n   * By default it is not possible to move the cursor past the leftmost position.\n   * If `reverse wrap-around` (`CSI ? 45 h`) is set, a previous soft line wrap (DECAWM)\n   * can be undone with BS within the scroll margins. In that case the cursor will wrap back\n   * to the end of the previous row. Note that it is not possible to peek back into the scrollbuffer\n   * with the cursor, thus at the home position (top-leftmost cell) this has no effect.\n   */\n  public backspace(): boolean {\n    // reverse wrap-around is disabled\n    if (!this._coreService.decPrivateModes.reverseWraparound) {\n      this._restrictCursor();\n      if (this._activeBuffer.x > 0) {\n        this._activeBuffer.x--;\n      }\n      return true;\n    }\n\n    // reverse wrap-around is enabled\n    // other than for normal operation mode, reverse wrap-around allows the cursor\n    // to be at x=cols to be able to address the last cell of a row by BS\n    this._restrictCursor(this._bufferService.cols);\n\n    if (this._activeBuffer.x > 0) {\n      this._activeBuffer.x--;\n    } else {\n      /**\n       * reverse wrap-around handling:\n       * Our implementation deviates from xterm on purpose. Details:\n       * - only previous soft NLs can be reversed (isWrapped=true)\n       * - only works within scrollborders (top/bottom, left/right not yet supported)\n       * - cannot peek into scrollbuffer\n       * - any cursor movement sequence keeps working as expected\n       */\n      if (this._activeBuffer.x === 0\n        && this._activeBuffer.y > this._activeBuffer.scrollTop\n        && this._activeBuffer.y <= this._activeBuffer.scrollBottom\n        && this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)?.isWrapped) {\n        this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = false;\n        this._activeBuffer.y--;\n        this._activeBuffer.x = this._bufferService.cols - 1;\n        // find last taken cell - last cell can have 3 different states:\n        // - hasContent(true) + hasWidth(1): narrow char - we are done\n        // - hasWidth(0): second part of wide char - we are done\n        // - hasContent(false) + hasWidth(1): empty cell due to early wrapping wide char, go one cell further back\n        const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        if (line.hasWidth(this._activeBuffer.x) && !line.hasContent(this._activeBuffer.x)) {\n          this._activeBuffer.x--;\n          // We do this only once, since width=1 + hasContent=false currently happens only once before\n          // early wrapping of a wide char.\n          // This needs to be fixed once we support graphemes taking more than 2 cells.\n        }\n      }\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * TAB\n   * Horizontal Tab (HT) (Ctrl-I).\n   *\n   * @vt: #Y   C0    HT   \"Horizontal Tabulation\"  \"\\t, \\x09\"  \"Move the cursor to the next character tab stop.\"\n   */\n  public tab(): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    const originalX = this._activeBuffer.x;\n    this._activeBuffer.x = this._activeBuffer.nextStop();\n    if (this._optionsService.rawOptions.screenReaderMode) {\n      this._onA11yTab.fire(this._activeBuffer.x - originalX);\n    }\n    return true;\n  }\n\n  /**\n   * SO\n   * Shift Out (Ctrl-N) -> Switch to Alternate Character Set.  This invokes the\n   * G1 character set.\n   *\n   * @vt: #P[Only limited ISO-2022 charset support.]  C0    SO   \"Shift Out\"  \"\\x0E\"  \"Switch to an alternative character set.\"\n   */\n  public shiftOut(): boolean {\n    this._charsetService.setgLevel(1);\n    return true;\n  }\n\n  /**\n   * SI\n   * Shift In (Ctrl-O) -> Switch to Standard Character Set.  This invokes the G0\n   * character set (the default).\n   *\n   * @vt: #Y   C0    SI   \"Shift In\"   \"\\x0F\"  \"Return to regular character set after Shift Out.\"\n   */\n  public shiftIn(): boolean {\n    this._charsetService.setgLevel(0);\n    return true;\n  }\n\n  /**\n   * Restrict cursor to viewport size / scroll margin (origin mode).\n   */\n  private _restrictCursor(maxCol: number = this._bufferService.cols - 1): void {\n    this._activeBuffer.x = Math.min(maxCol, Math.max(0, this._activeBuffer.x));\n    this._activeBuffer.y = this._coreService.decPrivateModes.origin\n      ? Math.min(this._activeBuffer.scrollBottom, Math.max(this._activeBuffer.scrollTop, this._activeBuffer.y))\n      : Math.min(this._bufferService.rows - 1, Math.max(0, this._activeBuffer.y));\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set absolute cursor position.\n   */\n  private _setCursor(x: number, y: number): void {\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n    if (this._coreService.decPrivateModes.origin) {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = this._activeBuffer.scrollTop + y;\n    } else {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = y;\n    }\n    this._restrictCursor();\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set relative cursor position.\n   */\n  private _moveCursor(x: number, y: number): void {\n    // for relative changes we have to make sure we are within 0 .. cols/rows - 1\n    // before calculating the new position\n    this._restrictCursor();\n    this._setCursor(this._activeBuffer.x + x, this._activeBuffer.y + y);\n  }\n\n  /**\n   * CSI Ps A\n   * Cursor Up Ps Times (default = 1) (CUU).\n   *\n   * @vt: #Y CSI CUU   \"Cursor Up\"   \"CSI Ps A\"  \"Move cursor `Ps` times up (default=1).\"\n   * If the cursor would pass the top scroll margin, it will stop there.\n   */\n  public cursorUp(params: IParams): boolean {\n    // stop at scrollTop\n    const diffToTop = this._activeBuffer.y - this._activeBuffer.scrollTop;\n    if (diffToTop >= 0) {\n      this._moveCursor(0, -Math.min(diffToTop, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, -(params.params[0] || 1));\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps B\n   * Cursor Down Ps Times (default = 1) (CUD).\n   *\n   * @vt: #Y CSI CUD   \"Cursor Down\"   \"CSI Ps B\"  \"Move cursor `Ps` times down (default=1).\"\n   * If the cursor would pass the bottom scroll margin, it will stop there.\n   */\n  public cursorDown(params: IParams): boolean {\n    // stop at scrollBottom\n    const diffToBottom = this._activeBuffer.scrollBottom - this._activeBuffer.y;\n    if (diffToBottom >= 0) {\n      this._moveCursor(0, Math.min(diffToBottom, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, params.params[0] || 1);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps C\n   * Cursor Forward Ps Times (default = 1) (CUF).\n   *\n   * @vt: #Y CSI CUF   \"Cursor Forward\"    \"CSI Ps C\"  \"Move cursor `Ps` times forward (default=1).\"\n   */\n  public cursorForward(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps D\n   * Cursor Backward Ps Times (default = 1) (CUB).\n   *\n   * @vt: #Y CSI CUB   \"Cursor Backward\"   \"CSI Ps D\"  \"Move cursor `Ps` times backward (default=1).\"\n   */\n  public cursorBackward(params: IParams): boolean {\n    this._moveCursor(-(params.params[0] || 1), 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps E\n   * Cursor Next Line Ps Times (default = 1) (CNL).\n   * Other than cursorDown (CUD) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CNL   \"Cursor Next Line\"  \"CSI Ps E\"  \"Move cursor `Ps` times down (default=1) and to the first column.\"\n   * Same as CUD, additionally places the cursor at the first column.\n   */\n  public cursorNextLine(params: IParams): boolean {\n    this.cursorDown(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps F\n   * Cursor Previous Line Ps Times (default = 1) (CPL).\n   * Other than cursorUp (CUU) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CPL   \"Cursor Backward\"   \"CSI Ps F\"  \"Move cursor `Ps` times up (default=1) and to the first column.\"\n   * Same as CUU, additionally places the cursor at the first column.\n   */\n  public cursorPrecedingLine(params: IParams): boolean {\n    this.cursorUp(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps G\n   * Cursor Character Absolute  [column] (default = [row,1]) (CHA).\n   *\n   * @vt: #Y CSI CHA   \"Cursor Horizontal Absolute\" \"CSI Ps G\" \"Move cursor to `Ps`-th column of the active row (default=1).\"\n   */\n  public cursorCharAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps H\n   * Cursor Position [row;column] (default = [1,1]) (CUP).\n   *\n   * @vt: #Y CSI CUP   \"Cursor Position\"   \"CSI Ps ; Ps H\"  \"Set cursor to position [`Ps`, `Ps`] (default = [1, 1]).\"\n   * If ORIGIN mode is set, places the cursor to the absolute position within the scroll margins.\n   * If ORIGIN mode is not set, places the cursor to the absolute position within the viewport.\n   * Note that the coordinates are 1-based, thus the top left position starts at `1 ; 1`.\n   */\n  public cursorPosition(params: IParams): boolean {\n    this._setCursor(\n      // col\n      (params.length >= 2) ? (params.params[1] || 1) - 1 : 0,\n      // row\n      (params.params[0] || 1) - 1\n    );\n    return true;\n  }\n\n  /**\n   * CSI Pm `  Character Position Absolute\n   *   [column] (default = [row,1]) (HPA).\n   * Currently same functionality as CHA.\n   *\n   * @vt: #Y CSI HPA   \"Horizontal Position Absolute\"  \"CSI Ps ` \" \"Same as CHA.\"\n   */\n  public charPosAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Pm a  Character Position Relative\n   *   [columns] (default = [row,col+1]) (HPR)\n   *\n   * @vt: #Y CSI HPR   \"Horizontal Position Relative\"  \"CSI Ps a\"  \"Same as CUF.\"\n   */\n  public hPositionRelative(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Pm d  Vertical Position Absolute (VPA)\n   *   [row] (default = [1,column])\n   *\n   * @vt: #Y CSI VPA   \"Vertical Position Absolute\"    \"CSI Ps d\"  \"Move cursor to `Ps`-th row (default=1).\"\n   */\n  public linePosAbsolute(params: IParams): boolean {\n    this._setCursor(this._activeBuffer.x, (params.params[0] || 1) - 1);\n    return true;\n  }\n\n  /**\n   * CSI Pm e  Vertical Position Relative (VPR)\n   *   [rows] (default = [row+1,column])\n   * reuse CSI Ps B ?\n   *\n   * @vt: #Y CSI VPR   \"Vertical Position Relative\"    \"CSI Ps e\"  \"Move cursor `Ps` times down (default=1).\"\n   */\n  public vPositionRelative(params: IParams): boolean {\n    this._moveCursor(0, params.params[0] || 1);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps f\n   *   Horizontal and Vertical Position [row;column] (default =\n   *   [1,1]) (HVP).\n   *   Same as CUP.\n   *\n   * @vt: #Y CSI HVP   \"Horizontal and Vertical Position\" \"CSI Ps ; Ps f\"  \"Same as CUP.\"\n   */\n  public hVPosition(params: IParams): boolean {\n    this.cursorPosition(params);\n    return true;\n  }\n\n  /**\n   * CSI Ps g  Tab Clear (TBC).\n   *     Ps = 0  -> Clear Current Column (default).\n   *     Ps = 3  -> Clear All.\n   * Potentially:\n   *   Ps = 2  -> Clear Stops on Line.\n   *   http://vt100.net/annarbor/aaa-ug/section6.html\n   *\n   * @vt: #Y CSI TBC   \"Tab Clear\" \"CSI Ps g\"  \"Clear tab stops at current position (0) or all (3) (default=0).\"\n   * Clearing tabstops off the active row (Ps = 2, VT100) is currently not supported.\n   */\n  public tabClear(params: IParams): boolean {\n    const param = params.params[0];\n    if (param === 0) {\n      delete this._activeBuffer.tabs[this._activeBuffer.x];\n    } else if (param === 3) {\n      this._activeBuffer.tabs = {};\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps I\n   *   Cursor Forward Tabulation Ps tab stops (default = 1) (CHT).\n   *\n   * @vt: #Y CSI CHT   \"Cursor Horizontal Tabulation\" \"CSI Ps I\" \"Move cursor `Ps` times tabs forward (default=1).\"\n   */\n  public cursorForwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.nextStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps Z  Cursor Backward Tabulation Ps tab stops (default = 1) (CBT).\n   *\n   * @vt: #Y CSI CBT   \"Cursor Backward Tabulation\"  \"CSI Ps Z\"  \"Move cursor `Ps` tabs backward (default=1).\"\n   */\n  public cursorBackwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.prevStop();\n    }\n    return true;\n  }\n\n\n  /**\n   * Helper method to erase cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal.\n   * @param y row index\n   * @param start first cell index to be erased\n   * @param end   end - 1 is last erased cell\n   * @param cleanWrap clear the isWrapped flag\n   */\n  private _eraseInBufferLine(y: number, start: number, end: number, clearWrap: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n    line.replaceCells(\n      start,\n      end,\n      this._activeBuffer.getNullCell(this._eraseAttrData()),\n      this._eraseAttrData()\n    );\n    if (clearWrap) {\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * Helper method to reset cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal and the isWrapped property is set to false.\n   * @param y row index\n   */\n  private _resetBufferLine(y: number): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n    line.fill(this._activeBuffer.getNullCell(this._eraseAttrData()));\n    this._bufferService.buffer.clearMarkers(this._activeBuffer.ybase + y);\n    line.isWrapped = false;\n  }\n\n  /**\n   * CSI Ps J  Erase in Display (ED).\n   *     Ps = 0  -> Erase Below (default).\n   *     Ps = 1  -> Erase Above.\n   *     Ps = 2  -> Erase All.\n   *     Ps = 3  -> Erase Saved Lines (xterm).\n   * CSI ? Ps J\n   *   Erase in Display (DECSED).\n   *     Ps = 0  -> Selective Erase Below (default).\n   *     Ps = 1  -> Selective Erase Above.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI ED  \"Erase In Display\"  \"CSI Ps J\"  \"Erase various parts of the viewport.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                       |\n   * | -- | ------------------------------------------------------------ |\n   * | 0  | Erase from the cursor through the end of the viewport.       |\n   * | 1  | Erase from the beginning of the viewport through the cursor. |\n   * | 2  | Erase complete viewport.                                     |\n   * | 3  | Erase scrollback.                                            |\n   *\n   * @vt: #P[Protection attributes are not supported.] CSI DECSED   \"Selective Erase In Display\"  \"CSI ? Ps J\"  \"Currently the same as ED.\"\n   */\n  public eraseInDisplay(params: IParams): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    let j;\n    switch (params.params[0]) {\n      case 0:\n        j = this._activeBuffer.y;\n        this._dirtyRowService.markDirty(j);\n        this._eraseInBufferLine(j++, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0);\n        for (; j < this._bufferService.rows; j++) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(j);\n        break;\n      case 1:\n        j = this._activeBuffer.y;\n        this._dirtyRowService.markDirty(j);\n        // Deleted front part of line and everything before. This line will no longer be wrapped.\n        this._eraseInBufferLine(j, 0, this._activeBuffer.x + 1, true);\n        if (this._activeBuffer.x + 1 >= this._bufferService.cols) {\n          // Deleted entire previous line. This next line can no longer be wrapped.\n          this._activeBuffer.lines.get(j + 1)!.isWrapped = false;\n        }\n        while (j--) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(0);\n        break;\n      case 2:\n        j = this._bufferService.rows;\n        this._dirtyRowService.markDirty(j - 1);\n        while (j--) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(0);\n        break;\n      case 3:\n        // Clear scrollback (everything not in viewport)\n        const scrollBackSize = this._activeBuffer.lines.length - this._bufferService.rows;\n        if (scrollBackSize > 0) {\n          this._activeBuffer.lines.trimStart(scrollBackSize);\n          this._activeBuffer.ybase = Math.max(this._activeBuffer.ybase - scrollBackSize, 0);\n          this._activeBuffer.ydisp = Math.max(this._activeBuffer.ydisp - scrollBackSize, 0);\n          // Force a scroll event to refresh viewport\n          this._onScroll.fire(0);\n        }\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps K  Erase in Line (EL).\n   *     Ps = 0  -> Erase to Right (default).\n   *     Ps = 1  -> Erase to Left.\n   *     Ps = 2  -> Erase All.\n   * CSI ? Ps K\n   *   Erase in Line (DECSEL).\n   *     Ps = 0  -> Selective Erase to Right (default).\n   *     Ps = 1  -> Selective Erase to Left.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI EL    \"Erase In Line\"  \"CSI Ps K\"  \"Erase various parts of the active row.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                   |\n   * | -- | -------------------------------------------------------- |\n   * | 0  | Erase from the cursor through the end of the row.        |\n   * | 1  | Erase from the beginning of the line through the cursor. |\n   * | 2  | Erase complete line.                                     |\n   *\n   * @vt: #P[Protection attributes are not supported.] CSI DECSEL   \"Selective Erase In Line\"  \"CSI ? Ps K\"  \"Currently the same as EL.\"\n   */\n  public eraseInLine(params: IParams): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    switch (params.params[0]) {\n      case 0:\n        this._eraseInBufferLine(this._activeBuffer.y, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0);\n        break;\n      case 1:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._activeBuffer.x + 1, false);\n        break;\n      case 2:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._bufferService.cols, true);\n        break;\n    }\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps L\n   * Insert Ps Line(s) (default = 1) (IL).\n   *\n   * @vt: #Y CSI IL  \"Insert Line\"   \"CSI Ps L\"  \"Insert `Ps` blank lines at active row (default=1).\"\n   * For every inserted line at the scroll top one line at the scroll bottom gets removed.\n   * The cursor is set to the first column.\n   * IL has no effect if the cursor is outside the scroll margins.\n   */\n  public insertLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    const scrollBottomRowsOffset = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    const scrollBottomAbsolute = this._bufferService.rows - 1 + this._activeBuffer.ybase - scrollBottomRowsOffset + 1;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1L\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(scrollBottomAbsolute - 1, 1);\n      this._activeBuffer.lines.splice(row, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps M\n   * Delete Ps Line(s) (default = 1) (DL).\n   *\n   * @vt: #Y CSI DL  \"Delete Line\"   \"CSI Ps M\"  \"Delete `Ps` lines at active row (default=1).\"\n   * For every deleted line at the scroll top one blank line at the scroll bottom gets appended.\n   * The cursor is set to the first column.\n   * DL has no effect if the cursor is outside the scroll margins.\n   */\n  public deleteLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    let j: number;\n    j = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    j = this._bufferService.rows - 1 + this._activeBuffer.ybase - j;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1M\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(row, 1);\n      this._activeBuffer.lines.splice(j, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps @\n   * Insert Ps (Blank) Character(s) (default = 1) (ICH).\n   *\n   * @vt: #Y CSI ICH  \"Insert Characters\"   \"CSI Ps @\"  \"Insert `Ps` (blank) characters (default = 1).\"\n   * The ICH sequence inserts `Ps` blank characters. The cursor remains at the beginning of the blank characters.\n   * Text between the cursor and right margin moves to the right. Characters moved past the right margin are lost.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public insertChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.insertCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowService.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps P\n   * Delete Ps Character(s) (default = 1) (DCH).\n   *\n   * @vt: #Y CSI DCH   \"Delete Character\"  \"CSI Ps P\"  \"Delete `Ps` characters (default=1).\"\n   * As characters are deleted, the remaining characters between the cursor and right margin move to the left.\n   * Character attributes move with the characters. The terminal adds blank characters at the right margin.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public deleteChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.deleteCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowService.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps S  Scroll up Ps lines (default = 1) (SU).\n   *\n   * @vt: #Y CSI SU  \"Scroll Up\"   \"CSI Ps S\"  \"Scroll `Ps` lines up (default=1).\"\n   *\n   *\n   * FIXME: scrolled out lines at top = 1 should add to scrollback (xterm)\n   */\n  public scrollUp(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps T  Scroll down Ps lines (default = 1) (SD).\n   *\n   * @vt: #Y CSI SD  \"Scroll Down\"   \"CSI Ps T\"  \"Scroll `Ps` lines down (default=1).\"\n   */\n  public scrollDown(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 0, this._activeBuffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP @  Scroll left Ps columns (default = 1) (SL) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/00\n   * Parameter default value: Pn = 1\n   * SL causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the left; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always left shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SL  \"Scroll Left\" \"CSI Ps SP @\" \"Scroll viewport `Ps` times to the left.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the left.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollLeft(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP A  Scroll right Ps columns (default = 1) (SR) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/01\n   * Parameter default value: Pn = 1\n   * SR causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the right; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always right shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SR  \"Scroll Right\"  \"CSI Ps SP A\"   \"Scroll viewport `Ps` times to the right.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the right.\n   * Content at the right margin is lost.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollRight(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' }\n   * Insert Ps Column(s) (default = 1) (DECIC), VT420 and up.\n   *\n   * @vt: #Y CSI DECIC \"Insert Columns\"  \"CSI Ps ' }\"  \"Insert `Ps` columns at cursor position.\"\n   * DECIC inserts `Ps` times blank columns at the cursor position for all lines with the scroll margins,\n   * moving content to the right. Content at the right margin is lost.\n   * DECIC has no effect outside the scrolling margins.\n   */\n  public insertColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' ~\n   * Delete Ps Column(s) (default = 1) (DECDC), VT420 and up.\n   *\n   * @vt: #Y CSI DECDC \"Delete Columns\"  \"CSI Ps ' ~\"  \"Delete `Ps` columns at cursor position.\"\n   * DECDC deletes `Ps` times columns at the cursor position for all lines with the scroll margins,\n   * moving content to the left. Blank columns are added at the right margin.\n   * DECDC has no effect outside the scrolling margins.\n   */\n  public deleteColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps X\n   * Erase Ps Character(s) (default = 1) (ECH).\n   *\n   * @vt: #Y CSI ECH   \"Erase Character\"   \"CSI Ps X\"  \"Erase `Ps` characters from current cursor position to the right (default=1).\"\n   * ED erases `Ps` characters from current cursor position to the right.\n   * ED works inside or outside the scrolling margins.\n   */\n  public eraseChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.replaceCells(\n        this._activeBuffer.x,\n        this._activeBuffer.x + (params.params[0] || 1),\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowService.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps b  Repeat the preceding graphic character Ps times (REP).\n   * From ECMA 48 (@see http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-048.pdf)\n   *    Notation: (Pn)\n   *    Representation: CSI Pn 06/02\n   *    Parameter default value: Pn = 1\n   *    REP is used to indicate that the preceding character in the data stream,\n   *    if it is a graphic character (represented by one or more bit combinations) including SPACE,\n   *    is to be repeated n times, where n equals the value of Pn.\n   *    If the character preceding REP is a control function or part of a control function,\n   *    the effect of REP is not defined by this Standard.\n   *\n   * Since we propagate the terminal as xterm-256color we have to follow xterm's behavior:\n   *    - fullwidth + surrogate chars are ignored\n   *    - for combining chars only the base char gets repeated\n   *    - text attrs are applied normally\n   *    - wrap around is respected\n   *    - any valid sequence resets the carried forward char\n   *\n   * Note: To get reset on a valid sequence working correctly without much runtime penalty,\n   * the preceding codepoint is stored on the parser in `this.print` and reset during `parser.parse`.\n   *\n   * @vt: #Y CSI REP   \"Repeat Preceding Character\"    \"CSI Ps b\"  \"Repeat preceding character `Ps` times (default=1).\"\n   * REP repeats the previous character `Ps` times advancing the cursor, also wrapping if DECAWM is set.\n   * REP has no effect if the sequence does not follow a printable ASCII character\n   * (NOOP for any other sequence in between or NON ASCII characters).\n   */\n  public repeatPrecedingCharacter(params: IParams): boolean {\n    if (!this._parser.precedingCodepoint) {\n      return true;\n    }\n    // call print to insert the chars and handle correct wrapping\n    const length = params.params[0] || 1;\n    const data = new Uint32Array(length);\n    for (let i = 0; i < length; ++i) {\n      data[i] = this._parser.precedingCodepoint;\n    }\n    this.print(data, 0, data.length);\n    return true;\n  }\n\n  /**\n   * CSI Ps c  Send Device Attributes (Primary DA).\n   *     Ps = 0  or omitted -> request attributes from terminal.  The\n   *     response depends on the decTerminalID resource setting.\n   *     -> CSI ? 1 ; 2 c  (``VT100 with Advanced Video Option'')\n   *     -> CSI ? 1 ; 0 c  (``VT101 with No Options'')\n   *     -> CSI ? 6 c  (``VT102'')\n   *     -> CSI ? 6 0 ; 1 ; 2 ; 6 ; 8 ; 9 ; 1 5 ; c  (``VT220'')\n   *   The VT100-style response parameters do not mean anything by\n   *   themselves.  VT220 parameters do, telling the host what fea-\n   *   tures the terminal supports:\n   *     Ps = 1  -> 132-columns.\n   *     Ps = 2  -> Printer.\n   *     Ps = 6  -> Selective erase.\n   *     Ps = 8  -> User-defined keys.\n   *     Ps = 9  -> National replacement character sets.\n   *     Ps = 1 5  -> Technical characters.\n   *     Ps = 2 2  -> ANSI color, e.g., VT525.\n   *     Ps = 2 9  -> ANSI text locator (i.e., DEC Locator mode).\n   *\n   * @vt: #Y CSI DA1   \"Primary Device Attributes\"     \"CSI c\"  \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesPrimary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    if (this._is('xterm') || this._is('rxvt-unicode') || this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?1;2c');\n    } else if (this._is('linux')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?6c');\n    }\n    return true;\n  }\n\n  /**\n   * CSI > Ps c\n   *   Send Device Attributes (Secondary DA).\n   *     Ps = 0  or omitted -> request the terminal's identification\n   *     code.  The response depends on the decTerminalID resource set-\n   *     ting.  It should apply only to VT220 and up, but xterm extends\n   *     this to VT100.\n   *     -> CSI  > Pp ; Pv ; Pc c\n   *   where Pp denotes the terminal type\n   *     Pp = 0  -> ``VT100''.\n   *     Pp = 1  -> ``VT220''.\n   *   and Pv is the firmware version (for xterm, this was originally\n   *   the XFree86 patch number, starting with 95).  In a DEC termi-\n   *   nal, Pc indicates the ROM cartridge registration number and is\n   *   always zero.\n   * More information:\n   *   xterm/charproc.c - line 2012, for more information.\n   *   vim responds with ^[[?0c or ^[[?1c after the terminal's response (?)\n   *\n   * @vt: #Y CSI DA2   \"Secondary Device Attributes\"   \"CSI > c\" \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesSecondary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    // xterm and urxvt\n    // seem to spit this\n    // out around ~370 times (?).\n    if (this._is('xterm')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>0;276;0c');\n    } else if (this._is('rxvt-unicode')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>85;95;0c');\n    } else if (this._is('linux')) {\n      // not supported by linux console.\n      // linux console echoes parameters.\n      this._coreService.triggerDataEvent(params.params[0] + 'c');\n    } else if (this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>83;40003;0c');\n    }\n    return true;\n  }\n\n  /**\n   * Evaluate if the current terminal is the given argument.\n   * @param term The terminal name to evaluate\n   */\n  private _is(term: string): boolean {\n    return (this._optionsService.rawOptions.termName + '').indexOf(term) === 0;\n  }\n\n  /**\n   * CSI Pm h  Set Mode (SM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Insert Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Automatic Newline (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI SM    \"Set Mode\"  \"CSI Pm h\"  \"Set various terminal modes.\"\n   * Supported param values by SM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Insert Mode (IRM).                     | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Automatic Newline (LNM). Always off.   | #N      |\n   */\n  public setMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = true;\n          break;\n        case 20:\n          // this._t.convertEol = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm h\n   *   DEC Private Mode Set (DECSET).\n   *     Ps = 1  -> Application Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate USASCII for character sets G0-G3\n   *     (DECANM), and set VT100 mode.\n   *     Ps = 3  -> 132 Column Mode (DECCOLM).\n   *     Ps = 4  -> Smooth (Slow) Scroll (DECSCLM).\n   *     Ps = 5  -> Reverse Video (DECSCNM).\n   *     Ps = 6  -> Origin Mode (DECOM).\n   *     Ps = 7  -> Wraparound Mode (DECAWM).\n   *     Ps = 8  -> Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Send Mouse X & Y on button press.  See the sec-\n   *     tion Mouse Tracking.\n   *     Ps = 1 0  -> Show toolbar (rxvt).\n   *     Ps = 1 2  -> Start Blinking Cursor (att610).\n   *     Ps = 1 8  -> Print form feed (DECPFF).\n   *     Ps = 1 9  -> Set print extent to full screen (DECPEX).\n   *     Ps = 2 5  -> Show Cursor (DECTCEM).\n   *     Ps = 3 0  -> Show scrollbar (rxvt).\n   *     Ps = 3 5  -> Enable font-shifting functions (rxvt).\n   *     Ps = 3 8  -> Enter Tektronix Mode (DECTEK).\n   *     Ps = 4 0  -> Allow 80 -> 132 Mode.\n   *     Ps = 4 1  -> more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Enable Nation Replacement Character sets (DECN-\n   *     RCM).\n   *     Ps = 4 4  -> Turn On Margin Bell.\n   *     Ps = 4 5  -> Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Start Logging.  This is normally disabled by a\n   *     compile-time option.\n   *     Ps = 4 7  -> Use Alternate Screen Buffer.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 6 6  -> Application keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends backspace (DECBKM).\n   *     Ps = 1 0 0 0  -> Send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Enable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Scroll to bottom on tty output (rxvt).\n   *     Ps = 1 0 1 1  -> Scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Interpret \"meta\" key, sets eighth bit.\n   *     (enables the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Enable special modifiers for Alt and Num-\n   *     Lock keys.  (This enables the numLock resource).\n   *     Ps = 1 0 3 6  -> Send ESC   when Meta modifies a key.  (This\n   *     enables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send DEL from the editing-keypad Delete\n   *     key.\n   *     Ps = 1 0 3 9  -> Send ESC  when Alt modifies a key.  (This\n   *     enables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Keep selection even if not highlighted.\n   *     (This enables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the CLIPBOARD selection.  (This enables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Enable Urgency window manager hint when\n   *     Control-G is received.  (This enables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Enable raising of the window when Control-G\n   *     is received.  (enables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Alternate Screen Buffer.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Save cursor as in DECSC.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Save cursor as in DECSC and use Alternate\n   *     Screen Buffer, clearing it first.  (This may be disabled by\n   *     the titeInhibit resource).  This combines the effects of the 1\n   *     0 4 7  and 1 0 4 8  modes.  Use this with terminfo-based\n   *     applications rather than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Set terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Set Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Set HP function-key mode.\n   *     Ps = 1 0 5 3  -> Set SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Set legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Set VT220 keyboard emulation.\n   *     Ps = 2 0 0 4  -> Set bracketed paste mode.\n   * Modes:\n   *   http: *vt100.net/docs/vt220-rm/chapter4.html\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECSET  \"DEC Private Set Mode\" \"CSI ? Pm h\"  \"Set various terminal attributes.\"\n   * Supported param values by DECSET:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | --------|\n   * | 1     | Application Cursor Keys (DECCKM).                       | #Y      |\n   * | 2     | Designate US-ASCII for character sets G0-G3 (DECANM).   | #Y      |\n   * | 3     | 132 Column Mode (DECCOLM).                              | #Y      |\n   * | 6     | Origin Mode (DECOM).                                    | #Y      |\n   * | 7     | Auto-wrap Mode (DECAWM).                                | #Y      |\n   * | 8     | Auto-repeat Keys (DECARM). Always on.                   | #N      |\n   * | 9     | X10 xterm mouse protocol.                               | #Y      |\n   * | 12    | Start Blinking Cursor.                                  | #Y      |\n   * | 25    | Show Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | Reverse wrap-around.                                    | #Y      |\n   * | 47    | Use Alternate Screen Buffer.                            | #Y      |\n   * | 66    | Application keypad (DECNKM).                            | #Y      |\n   * | 1000  | X11 xterm mouse protocol.                               | #Y      |\n   * | 1002  | Use Cell Motion Mouse Tracking.                         | #Y      |\n   * | 1003  | Use All Motion Mouse Tracking.                          | #Y      |\n   * | 1004  | Send FocusIn/FocusOut events                            | #Y      |\n   * | 1005  | Enable UTF-8 Mouse Mode.                                | #N      |\n   * | 1006  | Enable SGR Mouse Mode.                                  | #Y      |\n   * | 1015  | Enable urxvt Mouse Mode.                                | #N      |\n   * | 1047  | Use Alternate Screen Buffer.                            | #Y      |\n   * | 1048  | Save cursor as in DECSC.                                | #Y      |\n   * | 1049  | Save cursor and switch to alternate buffer clearing it. | #P[Does not clear the alternate buffer.] |\n   * | 2004  | Set bracketed paste mode.                               | #Y      |\n   *\n   *\n   * FIXME: implement DECSCNM, 1049 should clear altbuffer\n   */\n  public setModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = true;\n          break;\n        case 2:\n          this._charsetService.setgCharset(0, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(1, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(2, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(3, DEFAULT_CHARSET);\n          // set VT100 mode here\n          break;\n        case 3:\n          /**\n           * DECCOLM - 132 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(132, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = true;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = true;\n          break;\n        case 12:\n          // this.cursorBlink = true;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = true;\n          break;\n        case 66:\n          this._logService.debug('Serial port requested application keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = true;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n          // no release, no motion, no wheel, no modifiers.\n          this._coreMouseService.activeProtocol = 'X10';\n          break;\n        case 1000: // vt200 mouse\n          // no motion.\n          this._coreMouseService.activeProtocol = 'VT200';\n          break;\n        case 1002: // button event mouse\n          this._coreMouseService.activeProtocol = 'DRAG';\n          break;\n        case 1003: // any event mouse\n          // any event - sends motion events,\n          // even if there is no button held down.\n          this._coreMouseService.activeProtocol = 'ANY';\n          break;\n        case 1004: // send focusin/focusout events\n          // focusin: ^[[I\n          // focusout: ^[[O\n          this._coreService.decPrivateModes.sendFocus = true;\n          this._onRequestSendFocus.fire();\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'SGR';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1015 not supported (see #2507)');\n          break;\n        case 25: // show cursor\n          this._coreService.isCursorHidden = false;\n          break;\n        case 1048: // alt screen cursor\n          this.saveCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n          this.saveCursor();\n        // FALL-THROUGH\n        case 47: // alt screen buffer\n        case 1047: // alt screen buffer\n          this._bufferService.buffers.activateAltBuffer(this._eraseAttrData());\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI Pm l  Reset Mode (RM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Replace Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Normal Linefeed (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI RM    \"Reset Mode\"  \"CSI Pm l\"  \"Set various terminal attributes.\"\n   * Supported param values by RM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Replace Mode (IRM). (default)          | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Normal Linefeed (LNM). Always off.     | #N      |\n   *\n   *\n   * FIXME: why is LNM commented out?\n   */\n  public resetMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = false;\n          break;\n        case 20:\n          // this._t.convertEol = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm l\n   *   DEC Private Mode Reset (DECRST).\n   *     Ps = 1  -> Normal Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate VT52 mode (DECANM).\n   *     Ps = 3  -> 80 Column Mode (DECCOLM).\n   *     Ps = 4  -> Jump (Fast) Scroll (DECSCLM).\n   *     Ps = 5  -> Normal Video (DECSCNM).\n   *     Ps = 6  -> Normal Cursor Mode (DECOM).\n   *     Ps = 7  -> No Wraparound Mode (DECAWM).\n   *     Ps = 8  -> No Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Don't send Mouse X & Y on button press.\n   *     Ps = 1 0  -> Hide toolbar (rxvt).\n   *     Ps = 1 2  -> Stop Blinking Cursor (att610).\n   *     Ps = 1 8  -> Don't print form feed (DECPFF).\n   *     Ps = 1 9  -> Limit print to scrolling region (DECPEX).\n   *     Ps = 2 5  -> Hide Cursor (DECTCEM).\n   *     Ps = 3 0  -> Don't show scrollbar (rxvt).\n   *     Ps = 3 5  -> Disable font-shifting functions (rxvt).\n   *     Ps = 4 0  -> Disallow 80 -> 132 Mode.\n   *     Ps = 4 1  -> No more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Disable Nation Replacement Character sets (DEC-\n   *     NRCM).\n   *     Ps = 4 4  -> Turn Off Margin Bell.\n   *     Ps = 4 5  -> No Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Stop Logging.  (This is normally disabled by a\n   *     compile-time option).\n   *     Ps = 4 7  -> Use Normal Screen Buffer.\n   *     Ps = 6 6  -> Numeric keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends delete (DECBKM).\n   *     Ps = 1 0 0 0  -> Don't send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Don't use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Don't use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Don't use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Don't send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Disable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Don't scroll to bottom on tty output\n   *     (rxvt).\n   *     Ps = 1 0 1 1  -> Don't scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Don't interpret \"meta\" key.  (This disables\n   *     the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Disable special modifiers for Alt and Num-\n   *     Lock keys.  (This disables the numLock resource).\n   *     Ps = 1 0 3 6  -> Don't send ESC  when Meta modifies a key.\n   *     (This disables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send VT220 Remove from the editing-keypad\n   *     Delete key.\n   *     Ps = 1 0 3 9  -> Don't send ESC  when Alt modifies a key.\n   *     (This disables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Do not keep selection when not highlighted.\n   *     (This disables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the PRIMARY selection.  (This disables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Disable Urgency window manager hint when\n   *     Control-G is received.  (This disables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Disable raising of the window when Control-\n   *     G is received.  (This disables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Normal Screen Buffer, clearing screen\n   *     first if in the Alternate Screen.  (This may be disabled by\n   *     the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Restore cursor as in DECRC.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Use Normal Screen Buffer and restore cursor\n   *     as in DECRC.  (This may be disabled by the titeInhibit\n   *     resource).  This combines the effects of the 1 0 4 7  and 1 0\n   *     4 8  modes.  Use this with terminfo-based applications rather\n   *     than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Reset terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Reset Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Reset HP function-key mode.\n   *     Ps = 1 0 5 3  -> Reset SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Reset legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Reset keyboard emulation to Sun/PC style.\n   *     Ps = 2 0 0 4  -> Reset bracketed paste mode.\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECRST  \"DEC Private Reset Mode\" \"CSI ? Pm l\"  \"Reset various terminal attributes.\"\n   * Supported param values by DECRST:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | ------- |\n   * | 1     | Normal Cursor Keys (DECCKM).                            | #Y      |\n   * | 2     | Designate VT52 mode (DECANM).                           | #N      |\n   * | 3     | 80 Column Mode (DECCOLM).                               | #B[Switches to old column width instead of 80.] |\n   * | 6     | Normal Cursor Mode (DECOM).                             | #Y      |\n   * | 7     | No Wraparound Mode (DECAWM).                            | #Y      |\n   * | 8     | No Auto-repeat Keys (DECARM).                           | #N      |\n   * | 9     | Don't send Mouse X & Y on button press.                 | #Y      |\n   * | 12    | Stop Blinking Cursor.                                   | #Y      |\n   * | 25    | Hide Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | No reverse wrap-around.                                 | #Y      |\n   * | 47    | Use Normal Screen Buffer.                               | #Y      |\n   * | 66    | Numeric keypad (DECNKM).                                | #Y      |\n   * | 1000  | Don't send Mouse reports.                               | #Y      |\n   * | 1002  | Don't use Cell Motion Mouse Tracking.                   | #Y      |\n   * | 1003  | Don't use All Motion Mouse Tracking.                    | #Y      |\n   * | 1004  | Don't send FocusIn/FocusOut events.                     | #Y      |\n   * | 1005  | Disable UTF-8 Mouse Mode.                               | #N      |\n   * | 1006  | Disable SGR Mouse Mode.                                 | #Y      |\n   * | 1015  | Disable urxvt Mouse Mode.                               | #N      |\n   * | 1047  | Use Normal Screen Buffer (clearing screen if in alt).   | #Y      |\n   * | 1048  | Restore cursor as in DECRC.                             | #Y      |\n   * | 1049  | Use Normal Screen Buffer and restore cursor.            | #Y      |\n   * | 2004  | Reset bracketed paste mode.                             | #Y      |\n   *\n   *\n   * FIXME: DECCOLM is currently broken (already fixed in window options PR)\n   */\n  public resetModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = false;\n          break;\n        case 3:\n          /**\n           * DECCOLM - 80 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(80, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = false;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = false;\n          break;\n        case 12:\n          // this.cursorBlink = false;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = false;\n          break;\n        case 66:\n          this._logService.debug('Switching back to normal keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = false;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n        case 1000: // vt200 mouse\n        case 1002: // button event mouse\n        case 1003: // any event mouse\n          this._coreMouseService.activeProtocol = 'NONE';\n          break;\n        case 1004: // send focusin/focusout events\n          this._coreService.decPrivateModes.sendFocus = false;\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1015 not supported (see #2507)');\n          break;\n        case 25: // hide cursor\n          this._coreService.isCursorHidden = true;\n          break;\n        case 1048: // alt screen cursor\n          this.restoreCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n        // FALL-THROUGH\n        case 47: // normal screen buffer\n        case 1047: // normal screen buffer - clearing it first\n          // Ensure the selection manager has the correct buffer\n          this._bufferService.buffers.activateNormalBuffer();\n          if (params.params[i] === 1049) {\n            this.restoreCursor();\n          }\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Helper to write color information packed with color mode.\n   */\n  private _updateAttrColor(color: number, mode: number, c1: number, c2: number, c3: number): number {\n    if (mode === 2) {\n      color |= Attributes.CM_RGB;\n      color &= ~Attributes.RGB_MASK;\n      color |= AttributeData.fromColorRGB([c1, c2, c3]);\n    } else if (mode === 5) {\n      color &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n      color |= Attributes.CM_P256 | (c1 & 0xff);\n    }\n    return color;\n  }\n\n  /**\n   * Helper to extract and apply color params/subparams.\n   * Returns advance for params index.\n   */\n  private _extractColor(params: IParams, pos: number, attr: IAttributeData): number {\n    // normalize params\n    // meaning: [target, CM, ign, val, val, val]\n    // RGB    : [ 38/48,  2, ign,   r,   g,   b]\n    // P256   : [ 38/48,  5, ign,   v, ign, ign]\n    const accu = [0, 0, -1, 0, 0, 0];\n\n    // alignment placeholder for non color space sequences\n    let cSpace = 0;\n\n    // return advance we took in params\n    let advance = 0;\n\n    do {\n      accu[advance + cSpace] = params.params[pos + advance];\n      if (params.hasSubParams(pos + advance)) {\n        const subparams = params.getSubParams(pos + advance)!;\n        let i = 0;\n        do {\n          if (accu[1] === 5) {\n            cSpace = 1;\n          }\n          accu[advance + i + 1 + cSpace] = subparams[i];\n        } while (++i < subparams.length && i + advance + 1 + cSpace < accu.length);\n        break;\n      }\n      // exit early if can decide color mode with semicolons\n      if ((accu[1] === 5 && advance + cSpace >= 2)\n        || (accu[1] === 2 && advance + cSpace >= 5)) {\n        break;\n      }\n      // offset colorSpace slot for semicolon mode\n      if (accu[1]) {\n        cSpace = 1;\n      }\n    } while (++advance + pos < params.length && advance + cSpace < accu.length);\n\n    // set default values to 0\n    for (let i = 2; i < accu.length; ++i) {\n      if (accu[i] === -1) {\n        accu[i] = 0;\n      }\n    }\n\n    // apply colors\n    switch (accu[0]) {\n      case 38:\n        attr.fg = this._updateAttrColor(attr.fg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 48:\n        attr.bg = this._updateAttrColor(attr.bg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 58:\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = this._updateAttrColor(attr.extended.underlineColor, accu[1], accu[3], accu[4], accu[5]);\n    }\n\n    return advance;\n  }\n\n  /**\n   * SGR 4 subparams:\n   *    4:0   -   equal to SGR 24 (turn off all underline)\n   *    4:1   -   equal to SGR 4 (single underline)\n   *    4:2   -   equal to SGR 21 (double underline)\n   *    4:3   -   curly underline\n   *    4:4   -   dotted underline\n   *    4:5   -   dashed underline\n   */\n  private _processUnderline(style: number, attr: IAttributeData): void {\n    // treat extended attrs as immutable, thus always clone from old one\n    // this is needed since the buffer only holds references to it\n    attr.extended = attr.extended.clone();\n\n    // default to 1 == single underline\n    if (!~style || style > 5) {\n      style = 1;\n    }\n    attr.extended.underlineStyle = style;\n    attr.fg |= FgFlags.UNDERLINE;\n\n    // 0 deactivates underline\n    if (style === 0) {\n      attr.fg &= ~FgFlags.UNDERLINE;\n    }\n\n    // update HAS_EXTENDED in BG\n    attr.updateExtended();\n  }\n\n  /**\n   * CSI Pm m  Character Attributes (SGR).\n   *\n   * @vt: #P[See below for supported attributes.]    CSI SGR   \"Select Graphic Rendition\"  \"CSI Pm m\"  \"Set/Reset various text attributes.\"\n   * SGR selects one or more character attributes at the same time. Multiple params (up to 32)\n   * are applied in order from left to right. The changed attributes are applied to all new\n   * characters received. If you move characters in the viewport by scrolling or any other means,\n   * then the attributes move with the characters.\n   *\n   * Supported param values by SGR:\n   *\n   * | Param     | Meaning                                                  | Support |\n   * | --------- | -------------------------------------------------------- | ------- |\n   * | 0         | Normal (default). Resets any other preceding SGR.        | #Y      |\n   * | 1         | Bold. (also see `options.drawBoldTextInBrightColors`)    | #Y      |\n   * | 2         | Faint, decreased intensity.                              | #Y      |\n   * | 3         | Italic.                                                  | #Y      |\n   * | 4         | Underlined (see below for style support).                | #Y      |\n   * | 5         | Slowly blinking.                                         | #N      |\n   * | 6         | Rapidly blinking.                                        | #N      |\n   * | 7         | Inverse. Flips foreground and background color.          | #Y      |\n   * | 8         | Invisible (hidden).                                      | #Y      |\n   * | 9         | Crossed-out characters (strikethrough).                  | #Y      |\n   * | 21        | Doubly underlined.                                       | #P[Currently outputs a single underline.] |\n   * | 22        | Normal (neither bold nor faint).                         | #Y      |\n   * | 23        | No italic.                                               | #Y      |\n   * | 24        | Not underlined.                                          | #Y      |\n   * | 25        | Steady (not blinking).                                   | #Y      |\n   * | 27        | Positive (not inverse).                                  | #Y      |\n   * | 28        | Visible (not hidden).                                    | #Y      |\n   * | 29        | Not Crossed-out (strikethrough).                         | #Y      |\n   * | 30        | Foreground color: Black.                                 | #Y      |\n   * | 31        | Foreground color: Red.                                   | #Y      |\n   * | 32        | Foreground color: Green.                                 | #Y      |\n   * | 33        | Foreground color: Yellow.                                | #Y      |\n   * | 34        | Foreground color: Blue.                                  | #Y      |\n   * | 35        | Foreground color: Magenta.                               | #Y      |\n   * | 36        | Foreground color: Cyan.                                  | #Y      |\n   * | 37        | Foreground color: White.                                 | #Y      |\n   * | 38        | Foreground color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 39        | Foreground color: Default (original).                    | #Y      |\n   * | 40        | Background color: Black.                                 | #Y      |\n   * | 41        | Background color: Red.                                   | #Y      |\n   * | 42        | Background color: Green.                                 | #Y      |\n   * | 43        | Background color: Yellow.                                | #Y      |\n   * | 44        | Background color: Blue.                                  | #Y      |\n   * | 45        | Background color: Magenta.                               | #Y      |\n   * | 46        | Background color: Cyan.                                  | #Y      |\n   * | 47        | Background color: White.                                 | #Y      |\n   * | 48        | Background color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 49        | Background color: Default (original).                    | #Y      |\n   * | 90 - 97   | Bright foreground color (analogous to 30 - 37).          | #Y      |\n   * | 100 - 107 | Bright background color (analogous to 40 - 47).          | #Y      |\n   *\n   * Underline supports subparams to denote the style in the form `4 : x`:\n   *\n   * | x      | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | No underline. Same as `SGR 24 m`.                             | #Y      |\n   * | 1      | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   * | 2      | Double underline.                                             | #P[Currently outputs a single underline.] |\n   * | 3      | Curly underline.                                              | #P[Currently outputs a single underline.] |\n   * | 4      | Dotted underline.                                             | #P[Currently outputs a single underline.] |\n   * | 5      | Dashed underline.                                             | #P[Currently outputs a single underline.] |\n   * | other  | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   *\n   * Extended colors are supported for foreground (Ps=38) and background (Ps=48) as follows:\n   *\n   * | Ps + 1 | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | Implementation defined.                                       | #N      |\n   * | 1      | Transparent.                                                  | #N      |\n   * | 2      | RGB color as `Ps ; 2 ; R ; G ; B` or `Ps : 2 : : R : G : B`.  | #Y      |\n   * | 3      | CMY color.                                                    | #N      |\n   * | 4      | CMYK color.                                                   | #N      |\n   * | 5      | Indexed (256 colors) as `Ps ; 5 ; INDEX` or `Ps : 5 : INDEX`. | #Y      |\n   *\n   *\n   * FIXME: blinking is implemented in attrs, but not working in renderers?\n   * FIXME: remove dead branch for p=100\n   */\n  public charAttributes(params: IParams): boolean {\n    // Optimize a single SGR0.\n    if (params.length === 1 && params.params[0] === 0) {\n      this._curAttrData.fg = DEFAULT_ATTR_DATA.fg;\n      this._curAttrData.bg = DEFAULT_ATTR_DATA.bg;\n      return true;\n    }\n\n    const l = params.length;\n    let p;\n    const attr = this._curAttrData;\n\n    for (let i = 0; i < l; i++) {\n      p = params.params[i];\n      if (p >= 30 && p <= 37) {\n        // fg color 8\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 30);\n      } else if (p >= 40 && p <= 47) {\n        // bg color 8\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 40);\n      } else if (p >= 90 && p <= 97) {\n        // fg color 16\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 90) | 8;\n      } else if (p >= 100 && p <= 107) {\n        // bg color 16\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 100) | 8;\n      } else if (p === 0) {\n        // default\n        attr.fg = DEFAULT_ATTR_DATA.fg;\n        attr.bg = DEFAULT_ATTR_DATA.bg;\n      } else if (p === 1) {\n        // bold text\n        attr.fg |= FgFlags.BOLD;\n      } else if (p === 3) {\n        // italic text\n        attr.bg |= BgFlags.ITALIC;\n      } else if (p === 4) {\n        // underlined text\n        attr.fg |= FgFlags.UNDERLINE;\n        this._processUnderline(params.hasSubParams(i) ? params.getSubParams(i)![0] : UnderlineStyle.SINGLE, attr);\n      } else if (p === 5) {\n        // blink\n        attr.fg |= FgFlags.BLINK;\n      } else if (p === 7) {\n        // inverse and positive\n        // test with: echo -e '\\e[31m\\e[42mhello\\e[7mworld\\e[27mhi\\e[m'\n        attr.fg |= FgFlags.INVERSE;\n      } else if (p === 8) {\n        // invisible\n        attr.fg |= FgFlags.INVISIBLE;\n      } else if (p === 9) {\n        // strikethrough\n        attr.fg |= FgFlags.STRIKETHROUGH;\n      } else if (p === 2) {\n        // dimmed text\n        attr.bg |= BgFlags.DIM;\n      } else if (p === 21) {\n        // double underline\n        this._processUnderline(UnderlineStyle.DOUBLE, attr);\n      } else if (p === 22) {\n        // not bold nor faint\n        attr.fg &= ~FgFlags.BOLD;\n        attr.bg &= ~BgFlags.DIM;\n      } else if (p === 23) {\n        // not italic\n        attr.bg &= ~BgFlags.ITALIC;\n      } else if (p === 24) {\n        // not underlined\n        attr.fg &= ~FgFlags.UNDERLINE;\n      } else if (p === 25) {\n        // not blink\n        attr.fg &= ~FgFlags.BLINK;\n      } else if (p === 27) {\n        // not inverse\n        attr.fg &= ~FgFlags.INVERSE;\n      } else if (p === 28) {\n        // not invisible\n        attr.fg &= ~FgFlags.INVISIBLE;\n      } else if (p === 29) {\n        // not strikethrough\n        attr.fg &= ~FgFlags.STRIKETHROUGH;\n      } else if (p === 39) {\n        // reset fg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 49) {\n        // reset bg\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 38 || p === 48 || p === 58) {\n        // fg color 256 and RGB\n        i += this._extractColor(params, i, attr);\n      } else if (p === 59) {\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = -1;\n        attr.updateExtended();\n      } else if (p === 100) { // FIXME: dead branch, p=100 already handled above!\n        // reset fg/bg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else {\n        this._logService.debug('Unknown SGR attribute: %d.', p);\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps n  Device Status Report (DSR).\n   *     Ps = 5  -> Status Report.  Result (``OK'') is\n   *   CSI 0 n\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column].\n   *   Result is\n   *   CSI r ; c R\n   * CSI ? Ps n\n   *   Device Status Report (DSR, DEC-specific).\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column] as CSI\n   *     ? r ; c R (assumes page is zero).\n   *     Ps = 1 5  -> Report Printer status as CSI ? 1 0  n  (ready).\n   *     or CSI ? 1 1  n  (not ready).\n   *     Ps = 2 5  -> Report UDK status as CSI ? 2 0  n  (unlocked)\n   *     or CSI ? 2 1  n  (locked).\n   *     Ps = 2 6  -> Report Keyboard status as\n   *   CSI ? 2 7  ;  1  ;  0  ;  0  n  (North American).\n   *   The last two parameters apply to VT400 & up, and denote key-\n   *   board ready and LK01 respectively.\n   *     Ps = 5 3  -> Report Locator status as\n   *   CSI ? 5 3  n  Locator available, if compiled-in, or\n   *   CSI ? 5 0  n  No Locator, if not.\n   *\n   * @vt: #Y CSI DSR   \"Device Status Report\"  \"CSI Ps n\"  \"Request cursor position (CPR) with `Ps` = 6.\"\n   */\n  public deviceStatus(params: IParams): boolean {\n    switch (params.params[0]) {\n      case 5:\n        // status report\n        this._coreService.triggerDataEvent(`${C0.ESC}[0n`);\n        break;\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[${y};${x}R`);\n        break;\n    }\n    return true;\n  }\n\n  // @vt: #P[Only CPR is supported.]  CSI DECDSR  \"DEC Device Status Report\"  \"CSI ? Ps n\"  \"Only CPR is supported (same as DSR).\"\n  public deviceStatusPrivate(params: IParams): boolean {\n    // modern xterm doesnt seem to\n    // respond to any of these except ?6, 6, and 5\n    switch (params.params[0]) {\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[?${y};${x}R`);\n        break;\n      case 15:\n        // no printer\n        // this.handler(C0.ESC + '[?11n');\n        break;\n      case 25:\n        // dont support user defined keys\n        // this.handler(C0.ESC + '[?21n');\n        break;\n      case 26:\n        // north american keyboard\n        // this.handler(C0.ESC + '[?27;1;0;0n');\n        break;\n      case 53:\n        // no dec locator/mouse\n        // this.handler(C0.ESC + '[?50n');\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI ! p   Soft terminal reset (DECSTR).\n   * http://vt100.net/docs/vt220-rm/table4-10.html\n   *\n   * @vt: #Y CSI DECSTR  \"Soft Terminal Reset\"   \"CSI ! p\"   \"Reset several terminal attributes to initial state.\"\n   * There are two terminal reset sequences - RIS and DECSTR. While RIS performs almost a full terminal bootstrap,\n   * DECSTR only resets certain attributes. For most needs DECSTR should be sufficient.\n   *\n   * The following terminal attributes are reset to default values:\n   * - IRM is reset (dafault = false)\n   * - scroll margins are reset (default = viewport size)\n   * - erase attributes are reset to default\n   * - charsets are reset\n   * - DECSC data is reset to initial values\n   * - DECOM is reset to absolute mode\n   *\n   *\n   * FIXME: there are several more attributes missing (see VT520 manual)\n   */\n  public softReset(params: IParams): boolean {\n    this._coreService.isCursorHidden = false;\n    this._onRequestSyncScrollBar.fire();\n    this._activeBuffer.scrollTop = 0;\n    this._activeBuffer.scrollBottom = this._bufferService.rows - 1;\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._coreService.reset();\n    this._charsetService.reset();\n\n    // reset DECSC data\n    this._activeBuffer.savedX = 0;\n    this._activeBuffer.savedY = this._activeBuffer.ybase;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n\n    // reset DECOM\n    this._coreService.decPrivateModes.origin = false;\n    return true;\n  }\n\n  /**\n   * CSI Ps SP q  Set cursor style (DECSCUSR, VT520).\n   *   Ps = 0  -> blinking block.\n   *   Ps = 1  -> blinking block (default).\n   *   Ps = 2  -> steady block.\n   *   Ps = 3  -> blinking underline.\n   *   Ps = 4  -> steady underline.\n   *   Ps = 5  -> blinking bar (xterm).\n   *   Ps = 6  -> steady bar (xterm).\n   *\n   * @vt: #Y CSI DECSCUSR  \"Set Cursor Style\"  \"CSI Ps SP q\"   \"Set cursor style.\"\n   * Supported cursor styles:\n   *  - empty, 0 or 1: steady block\n   *  - 2: blink block\n   *  - 3: steady underline\n   *  - 4: blink underline\n   *  - 5: steady bar\n   *  - 6: blink bar\n   */\n  public setCursorStyle(params: IParams): boolean {\n    const param = params.params[0] || 1;\n    switch (param) {\n      case 1:\n      case 2:\n        this._optionsService.options.cursorStyle = 'block';\n        break;\n      case 3:\n      case 4:\n        this._optionsService.options.cursorStyle = 'underline';\n        break;\n      case 5:\n      case 6:\n        this._optionsService.options.cursorStyle = 'bar';\n        break;\n    }\n    const isBlinking = param % 2 === 1;\n    this._optionsService.options.cursorBlink = isBlinking;\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps r\n   *   Set Scrolling Region [top;bottom] (default = full size of win-\n   *   dow) (DECSTBM).\n   *\n   * @vt: #Y CSI DECSTBM \"Set Top and Bottom Margin\" \"CSI Ps ; Ps r\" \"Set top and bottom margins of the viewport [top;bottom] (default = viewport size).\"\n   */\n  public setScrollRegion(params: IParams): boolean {\n    const top = params.params[0] || 1;\n    let bottom: number;\n\n    if (params.length < 2 || (bottom = params.params[1]) > this._bufferService.rows || bottom === 0) {\n      bottom = this._bufferService.rows;\n    }\n\n    if (bottom > top) {\n      this._activeBuffer.scrollTop = top - 1;\n      this._activeBuffer.scrollBottom = bottom - 1;\n      this._setCursor(0, 0);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps ; Ps t - Various window manipulations and reports (xterm)\n   *\n   * Note: Only those listed below are supported. All others are left to integrators and\n   * need special treatment based on the embedding environment.\n   *\n   *    Ps = 1 4                                                          supported\n   *      Report xterm text area size in pixels.\n   *      Result is CSI 4 ; height ; width t\n   *    Ps = 14 ; 2                                                       not implemented\n   *    Ps = 16                                                           supported\n   *      Report xterm character cell size in pixels.\n   *      Result is CSI 6 ; height ; width t\n   *    Ps = 18                                                           supported\n   *      Report the size of the text area in characters.\n   *      Result is CSI 8 ; height ; width t\n   *    Ps = 20                                                           supported\n   *      Report xterm window's icon label.\n   *      Result is OSC L label ST\n   *    Ps = 21                                                           supported\n   *      Report xterm window's title.\n   *      Result is OSC l label ST\n   *    Ps = 22 ; 0  -> Save xterm icon and window title on stack.        supported\n   *    Ps = 22 ; 1  -> Save xterm icon title on stack.                   supported\n   *    Ps = 22 ; 2  -> Save xterm window title on stack.                 supported\n   *    Ps = 23 ; 0  -> Restore xterm icon and window title from stack.   supported\n   *    Ps = 23 ; 1  -> Restore xterm icon title from stack.              supported\n   *    Ps = 23 ; 2  -> Restore xterm window title from stack.            supported\n   *    Ps >= 24                                                          not implemented\n   */\n  public windowOptions(params: IParams): boolean {\n    if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n      return true;\n    }\n    const second = (params.length > 1) ? params.params[1] : 0;\n    switch (params.params[0]) {\n      case 14:  // GetWinSizePixels, returns CSI 4 ; height ; width t\n        if (second !== 2) {\n          this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_WIN_SIZE_PIXELS);\n        }\n        break;\n      case 16:  // GetCellSizePixels, returns CSI 6 ; height ; width t\n        this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_CELL_SIZE_PIXELS);\n        break;\n      case 18:  // GetWinSizeChars, returns CSI 8 ; height ; width t\n        if (this._bufferService) {\n          this._coreService.triggerDataEvent(`${C0.ESC}[8;${this._bufferService.rows};${this._bufferService.cols}t`);\n        }\n        break;\n      case 22:  // PushTitle\n        if (second === 0 || second === 2) {\n          this._windowTitleStack.push(this._windowTitle);\n          if (this._windowTitleStack.length > STACK_LIMIT) {\n            this._windowTitleStack.shift();\n          }\n        }\n        if (second === 0 || second === 1) {\n          this._iconNameStack.push(this._iconName);\n          if (this._iconNameStack.length > STACK_LIMIT) {\n            this._iconNameStack.shift();\n          }\n        }\n        break;\n      case 23:  // PopTitle\n        if (second === 0 || second === 2) {\n          if (this._windowTitleStack.length) {\n            this.setTitle(this._windowTitleStack.pop()!);\n          }\n        }\n        if (second === 0 || second === 1) {\n          if (this._iconNameStack.length) {\n            this.setIconName(this._iconNameStack.pop()!);\n          }\n        }\n        break;\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI s\n   * ESC 7\n   *   Save cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCOSC   \"Save Cursor\"   \"CSI s\"   \"Save cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  SC   \"Save Cursor\"   \"ESC 7\"   \"Save cursor position, charmap and text attributes.\"\n   */\n  public saveCursor(params?: IParams): boolean {\n    this._activeBuffer.savedX = this._activeBuffer.x;\n    this._activeBuffer.savedY = this._activeBuffer.ybase + this._activeBuffer.y;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n    return true;\n  }\n\n\n  /**\n   * CSI u\n   * ESC 8\n   *   Restore cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCORC \"Restore Cursor\"  \"CSI u\"   \"Restore cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  RC \"Restore Cursor\"  \"ESC 8\"   \"Restore cursor position, charmap and text attributes.\"\n   */\n  public restoreCursor(params?: IParams): boolean {\n    this._activeBuffer.x = this._activeBuffer.savedX || 0;\n    this._activeBuffer.y = Math.max(this._activeBuffer.savedY - this._activeBuffer.ybase, 0);\n    this._curAttrData.fg = this._activeBuffer.savedCurAttrData.fg;\n    this._curAttrData.bg = this._activeBuffer.savedCurAttrData.bg;\n    this._charsetService.charset = (this as any)._savedCharset;\n    if (this._activeBuffer.savedCharset) {\n      this._charsetService.charset = this._activeBuffer.savedCharset;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n\n  /**\n   * OSC 2; <data> ST (set window title)\n   *   Proxy to set window title.\n   *\n   * @vt: #P[Icon name is not exposed.]   OSC    0   \"Set Windows Title and Icon Name\"  \"OSC 0 ; Pt BEL\"  \"Set window title and icon name.\"\n   * Icon name is not supported. For Window Title see below.\n   *\n   * @vt: #Y     OSC    2   \"Set Windows Title\"  \"OSC 2 ; Pt BEL\"  \"Set window title.\"\n   * xterm.js does not manipulate the title directly, instead exposes changes via the event `Terminal.onTitleChange`.\n   */\n  public setTitle(data: string): boolean {\n    this._windowTitle = data;\n    this._onTitleChange.fire(data);\n    return true;\n  }\n\n  /**\n   * OSC 1; <data> ST\n   * Note: Icon name is not exposed.\n   */\n  public setIconName(data: string): boolean {\n    this._iconName = data;\n    return true;\n  }\n\n  /**\n   * OSC 4; <num> ; <text> ST (set ANSI color <num> to <text>)\n   *\n   * @vt: #Y    OSC    4    \"Set ANSI color\"   \"OSC 4 ; c ; spec BEL\" \"Change color number `c` to the color specified by `spec`.\"\n   * `c` is the color index between 0 and 255. The color format of `spec` is derived from `XParseColor` (see OSC 10 for supported formats).\n   * There may be multipe `c ; spec` pairs present in the same instruction.\n   * If `spec` contains `?` the terminal returns a sequence with the currently set color.\n   */\n  public setOrReportIndexedColor(data: string): boolean {\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    while (slots.length > 1) {\n      const idx = slots.shift() as string;\n      const spec = slots.shift() as string;\n      if (/^\\d+$/.exec(idx)) {\n        const index = parseInt(idx);\n        if (0 <= index && index < 256) {\n          if (spec === '?') {\n            event.push({ type: ColorRequestType.REPORT, index });\n          } else {\n            const color = parseColor(spec);\n            if (color) {\n              event.push({ type: ColorRequestType.SET, index, color });\n            }\n          }\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  // special colors - OSC 10 | 11 | 12\n  private _specialColors = [ColorIndex.FOREGROUND, ColorIndex.BACKGROUND, ColorIndex.CURSOR];\n\n  /**\n   * Apply colors requests for special colors in OSC 10 | 11 | 12.\n   * Since these commands are stacking from multiple parameters,\n   * we handle them in a loop with an entry offset to `_specialColors`.\n   */\n  private _setOrReportSpecialColor(data: string, offset: number): boolean {\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i, ++offset) {\n      if (offset >= this._specialColors.length) break;\n      if (slots[i] === '?') {\n        this._onColor.fire([{ type: ColorRequestType.REPORT, index: this._specialColors[offset] }]);\n      } else {\n        const color = parseColor(slots[i]);\n        if (color) {\n          this._onColor.fire([{ type: ColorRequestType.SET, index: this._specialColors[offset], color }]);\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * OSC 10 ; <xcolor name>|<?> ST - set or query default foreground color\n   *\n   * @vt: #Y  OSC   10    \"Set or query default foreground color\"   \"OSC 10 ; Pt BEL\"  \"Set or query default foreground color.\"\n   * To set the color, the following color specification formats are supported:\n   * - `rgb:<red>/<green>/<blue>` for  `<red>, <green>, <blue>` in `h | hh | hhh | hhhh`, where\n   *   `h` is a single hexadecimal digit (case insignificant). The different widths scale\n   *   from 4 bit (`h`) to 16 bit (`hhhh`) and get converted to 8 bit (`hh`).\n   * - `#RGB` - 4 bits per channel, expanded to `#R0G0B0`\n   * - `#RRGGBB` - 8 bits per channel\n   * - `#RRRGGGBBB` - 12 bits per channel, truncated to `#RRGGBB`\n   * - `#RRRRGGGGBBBB` - 16 bits per channel, truncated to `#RRGGBB`\n   *\n   * **Note:** X11 named colors are currently unsupported.\n   *\n   * If `Pt` contains `?` instead of a color specification, the terminal\n   * returns a sequence with the current default foreground color\n   * (use that sequence to restore the color after changes).\n   *\n   * **Note:** Other than xterm, xterm.js does not support OSC 12 - 19.\n   * Therefore stacking multiple `Pt` separated by `;` only works for the first two entries.\n   */\n  public setOrReportFgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 0);\n  }\n\n  /**\n   * OSC 11 ; <xcolor name>|<?> ST - set or query default background color\n   *\n   * @vt: #Y  OSC   11    \"Set or query default background color\"   \"OSC 11 ; Pt BEL\"  \"Same as OSC 10, but for default background.\"\n   */\n  public setOrReportBgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 1);\n  }\n\n  /**\n   * OSC 12 ; <xcolor name>|<?> ST - set or query default cursor color\n   *\n   * @vt: #Y  OSC   12    \"Set or query default cursor color\"   \"OSC 12 ; Pt BEL\"  \"Same as OSC 10, but for default cursor color.\"\n   */\n  public setOrReportCursorColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 2);\n  }\n\n  /**\n   * OSC 104 ; <num> ST - restore ANSI color <num>\n   *\n   * @vt: #Y  OSC   104    \"Reset ANSI color\"   \"OSC 104 ; c BEL\" \"Reset color number `c` to themed color.\"\n   * `c` is the color index between 0 and 255. This function restores the default color for `c` as\n   * specified by the loaded theme. Any number of `c` parameters may be given.\n   * If no parameters are given, the entire indexed color table will be reset.\n   */\n  public restoreIndexedColor(data: string): boolean {\n    if (!data) {\n      this._onColor.fire([{ type: ColorRequestType.RESTORE }]);\n      return true;\n    }\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i) {\n      if (/^\\d+$/.exec(slots[i])) {\n        const index = parseInt(slots[i]);\n        if (0 <= index && index < 256) {\n          event.push({ type: ColorRequestType.RESTORE, index });\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  /**\n   * OSC 110 ST - restore default foreground color\n   *\n   * @vt: #Y  OSC   110    \"Restore default foreground color\"   \"OSC 110 BEL\"  \"Restore default foreground to themed color.\"\n   */\n  public restoreFgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: ColorIndex.FOREGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 111 ST - restore default background color\n   *\n   * @vt: #Y  OSC   111    \"Restore default background color\"   \"OSC 111 BEL\"  \"Restore default background to themed color.\"\n   */\n  public restoreBgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: ColorIndex.BACKGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 112 ST - restore default cursor color\n   *\n   * @vt: #Y  OSC   112    \"Restore default cursor color\"   \"OSC 112 BEL\"  \"Restore default cursor to themed color.\"\n   */\n  public restoreCursorColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: ColorIndex.CURSOR }]);\n    return true;\n  }\n\n  /**\n   * ESC E\n   * C1.NEL\n   *   DEC mnemonic: NEL (https://vt100.net/docs/vt510-rm/NEL)\n   *   Moves cursor to first position on next line.\n   *\n   * @vt: #Y   C1    NEL   \"Next Line\"   \"\\x85\"    \"Move the cursor to the beginning of the next row.\"\n   * @vt: #Y   ESC   NEL   \"Next Line\"   \"ESC E\"   \"Move the cursor to the beginning of the next row.\"\n   */\n  public nextLine(): boolean {\n    this._activeBuffer.x = 0;\n    this.index();\n    return true;\n  }\n\n  /**\n   * ESC =\n   *   DEC mnemonic: DECKPAM (https://vt100.net/docs/vt510-rm/DECKPAM.html)\n   *   Enables the numeric keypad to send application sequences to the host.\n   */\n  public keypadApplicationMode(): boolean {\n    this._logService.debug('Serial port requested application keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = true;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC >\n   *   DEC mnemonic: DECKPNM (https://vt100.net/docs/vt510-rm/DECKPNM.html)\n   *   Enables the keypad to send numeric characters to the host.\n   */\n  public keypadNumericMode(): boolean {\n    this._logService.debug('Switching back to normal keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = false;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC % @\n   * ESC % G\n   *   Select default character set. UTF-8 is not supported (string are unicode anyways)\n   *   therefore ESC % G does the same.\n   */\n  public selectDefaultCharset(): boolean {\n    this._charsetService.setgLevel(0);\n    this._charsetService.setgCharset(0, DEFAULT_CHARSET); // US (default)\n    return true;\n  }\n\n  /**\n   * ESC ( C\n   *   Designate G0 Character Set, VT100, ISO 2022.\n   * ESC ) C\n   *   Designate G1 Character Set (ISO 2022, VT100).\n   * ESC * C\n   *   Designate G2 Character Set (ISO 2022, VT220).\n   * ESC + C\n   *   Designate G3 Character Set (ISO 2022, VT220).\n   * ESC - C\n   *   Designate G1 Character Set (VT300).\n   * ESC . C\n   *   Designate G2 Character Set (VT300).\n   * ESC / C\n   *   Designate G3 Character Set (VT300). C = A  -> ISO Latin-1 Supplemental. - Supported?\n   */\n  public selectCharset(collectAndFlag: string): boolean {\n    if (collectAndFlag.length !== 2) {\n      this.selectDefaultCharset();\n      return true;\n    }\n    if (collectAndFlag[0] === '/') {\n      return true;  // TODO: Is this supported?\n    }\n    this._charsetService.setgCharset(GLEVEL[collectAndFlag[0]], CHARSETS[collectAndFlag[1]] || DEFAULT_CHARSET);\n    return true;\n  }\n\n  /**\n   * ESC D\n   * C1.IND\n   *   DEC mnemonic: IND (https://vt100.net/docs/vt510-rm/IND.html)\n   *   Moves the cursor down one line in the same column.\n   *\n   * @vt: #Y   C1    IND   \"Index\"   \"\\x84\"    \"Move the cursor one line down scrolling if needed.\"\n   * @vt: #Y   ESC   IND   \"Index\"   \"ESC D\"   \"Move the cursor one line down scrolling if needed.\"\n   */\n  public index(): boolean {\n    this._restrictCursor();\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * ESC H\n   * C1.HTS\n   *   DEC mnemonic: HTS (https://vt100.net/docs/vt510-rm/HTS.html)\n   *   Sets a horizontal tab stop at the column position indicated by\n   *   the value of the active column when the terminal receives an HTS.\n   *\n   * @vt: #Y   C1    HTS   \"Horizontal Tabulation Set\" \"\\x88\"    \"Places a tab stop at the current cursor position.\"\n   * @vt: #Y   ESC   HTS   \"Horizontal Tabulation Set\" \"ESC H\"   \"Places a tab stop at the current cursor position.\"\n   */\n  public tabSet(): boolean {\n    this._activeBuffer.tabs[this._activeBuffer.x] = true;\n    return true;\n  }\n\n  /**\n   * ESC M\n   * C1.RI\n   *   DEC mnemonic: HTS\n   *   Moves the cursor up one line in the same column. If the cursor is at the top margin,\n   *   the page scrolls down.\n   *\n   * @vt: #Y ESC  IR \"Reverse Index\" \"ESC M\"  \"Move the cursor one line up scrolling if needed.\"\n   */\n  public reverseIndex(): boolean {\n    this._restrictCursor();\n    if (this._activeBuffer.y === this._activeBuffer.scrollTop) {\n      // possibly move the code below to term.reverseScroll();\n      // test: echo -ne '\\e[1;1H\\e[44m\\eM\\e[0m'\n      // blankLine(true) is xterm/linux behavior\n      const scrollRegionHeight = this._activeBuffer.scrollBottom - this._activeBuffer.scrollTop;\n      this._activeBuffer.lines.shiftElements(this._activeBuffer.ybase + this._activeBuffer.y, scrollRegionHeight, 1);\n      this._activeBuffer.lines.set(this._activeBuffer.ybase + this._activeBuffer.y, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n      this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    } else {\n      this._activeBuffer.y--;\n      this._restrictCursor(); // quickfix to not run out of bounds\n    }\n    return true;\n  }\n\n  /**\n   * ESC c\n   *   DEC mnemonic: RIS (https://vt100.net/docs/vt510-rm/RIS.html)\n   *   Reset to initial state.\n   */\n  public fullReset(): boolean {\n    this._parser.reset();\n    this._onRequestReset.fire();\n    return true;\n  }\n\n  public reset(): void {\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._eraseAttrDataInternal = DEFAULT_ATTR_DATA.clone();\n  }\n\n  /**\n   * back_color_erase feature for xterm.\n   */\n  private _eraseAttrData(): IAttributeData {\n    this._eraseAttrDataInternal.bg &= ~(Attributes.CM_MASK | 0xFFFFFF);\n    this._eraseAttrDataInternal.bg |= this._curAttrData.bg & ~0xFC000000;\n    return this._eraseAttrDataInternal;\n  }\n\n  /**\n   * ESC n\n   * ESC o\n   * ESC |\n   * ESC }\n   * ESC ~\n   *   DEC mnemonic: LS (https://vt100.net/docs/vt510-rm/LS.html)\n   *   When you use a locking shift, the character set remains in GL or GR until\n   *   you use another locking shift. (partly supported)\n   */\n  public setgLevel(level: number): boolean {\n    this._charsetService.setgLevel(level);\n    return true;\n  }\n\n  /**\n   * ESC # 8\n   *   DEC mnemonic: DECALN (https://vt100.net/docs/vt510-rm/DECALN.html)\n   *   This control function fills the complete screen area with\n   *   a test pattern (E) used for adjusting screen alignment.\n   *\n   * @vt: #Y   ESC   DECALN   \"Screen Alignment Pattern\"  \"ESC # 8\"  \"Fill viewport with a test pattern (E).\"\n   */\n  public screenAlignmentPattern(): boolean {\n    // prepare cell data\n    const cell = new CellData();\n    cell.content = 1 << Content.WIDTH_SHIFT | 'E'.charCodeAt(0);\n    cell.fg = this._curAttrData.fg;\n    cell.bg = this._curAttrData.bg;\n\n\n    this._setCursor(0, 0);\n    for (let yOffset = 0; yOffset < this._bufferService.rows; ++yOffset) {\n      const row = this._activeBuffer.ybase + this._activeBuffer.y + yOffset;\n      const line = this._activeBuffer.lines.get(row);\n      if (line) {\n        line.fill(cell);\n        line.isWrapped = false;\n      }\n    }\n    this._dirtyRowService.markAllDirty();\n    this._setCursor(0, 0);\n    return true;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  constructor() {\n  }\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    for (const d of this._disposables) {\n      d.dispose();\n    }\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   * @returns The disposable.\n   */\n  public register<T extends IDisposable>(d: T): T {\n    this._disposables.push(d);\n    return d;\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n\n/**\n * Dispose of all disposables in an array and set its length to 0.\n */\nexport function disposeArray(disposables: IDisposable[]): void {\n  for (const d of disposables) {\n    d.dispose();\n  }\n  disposables.length = 0;\n}\n\n/**\n * Creates a disposable that will dispose of an array of disposables when disposed.\n */\nexport function getDisposeArrayDisposable(array: IDisposable[]): IDisposable {\n  return { dispose: () => disposeArray(array) };\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface INavigator {\n  userAgent: string;\n  language: string;\n  platform: string;\n}\n\n// We're declaring a navigator global here as we expect it in all runtimes (node and browser), but\n// we want this module to live in common.\ndeclare const navigator: INavigator;\n\nconst isNode = (typeof navigator === 'undefined') ? true : false;\nconst userAgent = (isNode) ? 'node' : navigator.userAgent;\nconst platform = (isNode) ? 'node' : navigator.platform;\n\nexport const isFirefox = userAgent.includes('Firefox');\nexport const isLegacyEdge = userAgent.includes('Edge');\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\n\n// Find the users platform. We use this to interpret the meta key\n// and ISO third level shifts.\n// http://stackoverflow.com/q/19877924/577598\nexport const isMac = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'].includes(platform);\nexport const isIpad = platform === 'iPad';\nexport const isIphone = platform === 'iPhone';\nexport const isWindows = ['Windows', 'Win16', 'Win32', 'WinCE'].includes(platform);\nexport const isLinux = platform.indexOf('Linux') >= 0;\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * A generic list that is maintained in sorted order and allows values with duplicate keys. This\n * list is based on binary search and as such locating a key will take O(log n) amortized, this\n * includes the by key iterator.\n */\nexport class SortedList<T> {\n  private readonly _array: T[] = [];\n\n  constructor(\n    private readonly _getKey: (value: T) => number\n  ) {\n  }\n\n  public clear(): void {\n    this._array.length = 0;\n  }\n\n  public insert(value: T): void {\n    if (this._array.length === 0) {\n      this._array.push(value);\n      return;\n    }\n    const i = this._search(this._getKey(value), 0, this._array.length - 1);\n    this._array.splice(i, 0, value);\n  }\n\n  public delete(value: T): boolean {\n    if (this._array.length === 0) {\n      return false;\n    }\n    const key = this._getKey(value);\n    let i = this._search(key, 0, this._array.length - 1);\n    if (this._getKey(this._array[i]) !== key) {\n      return false;\n    }\n    do {\n      if (this._array[i] === value) {\n        this._array.splice(i, 1);\n        return true;\n      }\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n    return false;\n  }\n\n  public *getKeyIterator(key: number): IterableIterator<T> {\n    if (this._array.length === 0) {\n      return;\n    }\n    let i = this._search(key, 0, this._array.length - 1);\n    if (i < 0 || i >= this._array.length) {\n      return;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return;\n    }\n    do {\n      yield this._array[i];\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n  }\n\n  public values(): IterableIterator<T> {\n    return this._array.values();\n  }\n\n  private _search(key: number, min: number, max: number): number {\n    if (max < min) {\n      return min;\n    }\n    let mid = Math.floor((min + max) / 2);\n    if (this._getKey(this._array[mid]) > key) {\n      return this._search(key, min, mid - 1);\n    }\n    if (this._getKey(this._array[mid]) < key) {\n      return this._search(key, mid + 1, max);\n    }\n    // Value found! Since keys can be duplicates, move the result index back to the lowest index\n    // that matches the key.\n    while (mid > 0 && this._getKey(this._array[mid - 1]) === key) {\n      mid--;\n    }\n    return mid;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport type TypedArray = Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Int8Array | Int16Array | Int32Array | Float32Array | Float64Array;\n\n\n/**\n * polyfill for TypedArray.fill\n * This is needed to support .fill in all safari versions and IE 11.\n */\nexport function fill<T extends TypedArray>(array: T, value: number, start?: number, end?: number): T {\n  // all modern engines that support .fill\n  if (array.fill) {\n    return array.fill(value, start, end) as T;\n  }\n  return fillFallback(array, value, start, end);\n}\n\nexport function fillFallback<T extends TypedArray>(array: T, value: number, start: number = 0, end: number = array.length): T {\n  // safari and IE 11\n  // since IE 11 does not support Array.prototype.fill either\n  // we cannot use the suggested polyfill from MDN\n  // instead we simply fall back to looping\n  if (start >= array.length) {\n    return array;\n  }\n  start = (array.length + start) % array.length;\n  if (end >= array.length) {\n    end = array.length;\n  } else {\n    end = (array.length + end) % array.length;\n  }\n  for (let i = start; i < end; ++i) {\n    array[i] = value;\n  }\n  return array;\n}\n\n/**\n * Concat two typed arrays `a` and `b`.\n * Returns a new typed array.\n */\nexport function concat<T extends TypedArray>(a: T, b: T): T {\n  const result = new (a.constructor as any)(a.length + b.length);\n  result.set(a);\n  result.set(b, a.length);\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CHAR_DATA_CODE_INDEX, NULL_CELL_CODE, WHITESPACE_CELL_CODE } from 'common/buffer/Constants';\nimport { IBufferService } from 'common/services/Services';\n\nexport function updateWindowsModeWrappedState(bufferService: IBufferService): void {\n  // Winpty does not support wraparound mode which means that lines will never\n  // be marked as wrapped. This causes issues for things like copying a line\n  // retaining the wrapped new line characters or if consumers are listening\n  // in on the data stream.\n  //\n  // The workaround for this is to listen to every incoming line feed and mark\n  // the line as wrapped if the last character in the previous line is not a\n  // space. This is certainly not without its problems, but generally on\n  // Windows when text reaches the end of the terminal it's likely going to be\n  // wrapped.\n  const line = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y - 1);\n  const lastChar = line?.get(bufferService.cols - 1);\n\n  const nextLine = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y);\n  if (nextLine && lastChar) {\n    nextLine.isWrapped = (lastChar[CHAR_DATA_CODE_INDEX] !== NULL_CELL_CODE && lastChar[CHAR_DATA_CODE_INDEX] !== WHITESPACE_CELL_CODE);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IAttributeData, IColorRGB, IExtendedAttrs } from 'common/Types';\nimport { Attributes, FgFlags, BgFlags, UnderlineStyle } from 'common/buffer/Constants';\n\nexport class AttributeData implements IAttributeData {\n  public static toColorRGB(value: number): IColorRGB {\n    return [\n      value >>> Attributes.RED_SHIFT & 255,\n      value >>> Attributes.GREEN_SHIFT & 255,\n      value & 255\n    ];\n  }\n\n  public static fromColorRGB(value: IColorRGB): number {\n    return (value[0] & 255) << Attributes.RED_SHIFT | (value[1] & 255) << Attributes.GREEN_SHIFT | value[2] & 255;\n  }\n\n  public clone(): IAttributeData {\n    const newObj = new AttributeData();\n    newObj.fg = this.fg;\n    newObj.bg = this.bg;\n    newObj.extended = this.extended.clone();\n    return newObj;\n  }\n\n  // data\n  public fg = 0;\n  public bg = 0;\n  public extended = new ExtendedAttrs();\n\n  // flags\n  public isInverse(): number       { return this.fg & FgFlags.INVERSE; }\n  public isBold(): number          { return this.fg & FgFlags.BOLD; }\n  public isUnderline(): number     { return this.fg & FgFlags.UNDERLINE; }\n  public isBlink(): number         { return this.fg & FgFlags.BLINK; }\n  public isInvisible(): number     { return this.fg & FgFlags.INVISIBLE; }\n  public isItalic(): number        { return this.bg & BgFlags.ITALIC; }\n  public isDim(): number           { return this.bg & BgFlags.DIM; }\n  public isStrikethrough(): number { return this.fg & FgFlags.STRIKETHROUGH; }\n\n  // color modes\n  public getFgColorMode(): number { return this.fg & Attributes.CM_MASK; }\n  public getBgColorMode(): number { return this.bg & Attributes.CM_MASK; }\n  public isFgRGB(): boolean       { return (this.fg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isBgRGB(): boolean       { return (this.bg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isFgPalette(): boolean   { return (this.fg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.fg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isBgPalette(): boolean   { return (this.bg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.bg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isFgDefault(): boolean   { return (this.fg & Attributes.CM_MASK) === 0; }\n  public isBgDefault(): boolean   { return (this.bg & Attributes.CM_MASK) === 0; }\n  public isAttributeDefault(): boolean { return this.fg === 0 && this.bg === 0; }\n\n  // colors\n  public getFgColor(): number {\n    switch (this.fg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.fg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.fg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n  public getBgColor(): number {\n    switch (this.bg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.bg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.bg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n\n  // extended attrs\n  public hasExtendedAttrs(): number {\n    return this.bg & BgFlags.HAS_EXTENDED;\n  }\n  public updateExtended(): void {\n    if (this.extended.isEmpty()) {\n      this.bg &= ~BgFlags.HAS_EXTENDED;\n    } else {\n      this.bg |= BgFlags.HAS_EXTENDED;\n    }\n  }\n  public getUnderlineColor(): number {\n    if ((this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor) {\n      switch (this.extended.underlineColor & Attributes.CM_MASK) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:  return this.extended.underlineColor & Attributes.PCOLOR_MASK;\n        case Attributes.CM_RGB:   return this.extended.underlineColor & Attributes.RGB_MASK;\n        default:                  return this.getFgColor();\n      }\n    }\n    return this.getFgColor();\n  }\n  public getUnderlineColorMode(): number {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? this.extended.underlineColor & Attributes.CM_MASK\n      : this.getFgColorMode();\n  }\n  public isUnderlineColorRGB(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_RGB\n      : this.isFgRGB();\n  }\n  public isUnderlineColorPalette(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P16\n          || (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P256\n      : this.isFgPalette();\n  }\n  public isUnderlineColorDefault(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === 0\n      : this.isFgDefault();\n  }\n  public getUnderlineStyle(): UnderlineStyle {\n    return this.fg & FgFlags.UNDERLINE\n      ? (this.bg & BgFlags.HAS_EXTENDED ? this.extended.underlineStyle : UnderlineStyle.SINGLE)\n      : UnderlineStyle.NONE;\n  }\n}\n\n\n/**\n * Extended attributes for a cell.\n * Holds information about different underline styles and color.\n */\nexport class ExtendedAttrs implements IExtendedAttrs {\n  constructor(\n    // underline style, NONE is empty\n    public underlineStyle: UnderlineStyle = UnderlineStyle.NONE,\n    // underline color, -1 is empty (same as FG)\n    public underlineColor: number = -1\n  ) {}\n\n  public clone(): IExtendedAttrs {\n    return new ExtendedAttrs(this.underlineStyle, this.underlineColor);\n  }\n\n  /**\n   * Convenient method to indicate whether the object holds no additional information,\n   * that needs to be persistant in the buffer.\n   */\n  public isEmpty(): boolean {\n    return this.underlineStyle === UnderlineStyle.NONE;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CircularList, IInsertEvent } from 'common/CircularList';\nimport { IBuffer, BufferIndex, IBufferStringIterator, IBufferStringIteratorResult } from 'common/buffer/Types';\nimport { IBufferLine, ICellData, IAttributeData, ICharset } from 'common/Types';\nimport { BufferLine, DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { CellData } from 'common/buffer/CellData';\nimport { NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_CHAR_INDEX } from 'common/buffer/Constants';\nimport { reflowLargerApplyNewLayout, reflowLargerCreateNewLayout, reflowLargerGetLinesToRemove, reflowSmallerGetNewLineLengths, getWrappedLineTrimmedLength } from 'common/buffer/BufferReflow';\nimport { Marker } from 'common/buffer/Marker';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { ExtendedAttrs } from 'common/buffer/AttributeData';\n\nexport const MAX_BUFFER_SIZE = 4294967295; // 2^32 - 1\n\n/**\n * This class represents a terminal buffer (an internal state of the terminal), where the\n * following information is stored (in high-level):\n *   - text content of this particular buffer\n *   - cursor position\n *   - scroll position\n */\nexport class Buffer implements IBuffer {\n  public lines: CircularList<IBufferLine>;\n  public ydisp: number = 0;\n  public ybase: number = 0;\n  public y: number = 0;\n  public x: number = 0;\n  public scrollBottom: number;\n  public scrollTop: number;\n  // TODO: Type me\n  public tabs: any;\n  public savedY: number = 0;\n  public savedX: number = 0;\n  public savedCurAttrData = DEFAULT_ATTR_DATA.clone();\n  public savedCharset: ICharset | undefined = DEFAULT_CHARSET;\n  public markers: Marker[] = [];\n  private _nullCell: ICellData = CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n  private _whitespaceCell: ICellData = CellData.fromCharData([0, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE]);\n  private _cols: number;\n  private _rows: number;\n  private _isClearing: boolean = false;\n\n  constructor(\n    private _hasScrollback: boolean,\n    private _optionsService: IOptionsService,\n    private _bufferService: IBufferService\n  ) {\n    this._cols = this._bufferService.cols;\n    this._rows = this._bufferService.rows;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  public getNullCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._nullCell.fg = attr.fg;\n      this._nullCell.bg = attr.bg;\n      this._nullCell.extended = attr.extended;\n    } else {\n      this._nullCell.fg = 0;\n      this._nullCell.bg = 0;\n      this._nullCell.extended = new ExtendedAttrs();\n    }\n    return this._nullCell;\n  }\n\n  public getWhitespaceCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._whitespaceCell.fg = attr.fg;\n      this._whitespaceCell.bg = attr.bg;\n      this._whitespaceCell.extended = attr.extended;\n    } else {\n      this._whitespaceCell.fg = 0;\n      this._whitespaceCell.bg = 0;\n      this._whitespaceCell.extended = new ExtendedAttrs();\n    }\n    return this._whitespaceCell;\n  }\n\n  public getBlankLine(attr: IAttributeData, isWrapped?: boolean): IBufferLine {\n    return new BufferLine(this._bufferService.cols, this.getNullCell(attr), isWrapped);\n  }\n\n  public get hasScrollback(): boolean {\n    return this._hasScrollback && this.lines.maxLength > this._rows;\n  }\n\n  public get isCursorInViewport(): boolean {\n    const absoluteY = this.ybase + this.y;\n    const relativeY = absoluteY - this.ydisp;\n    return (relativeY >= 0 && relativeY < this._rows);\n  }\n\n  /**\n   * Gets the correct buffer length based on the rows provided, the terminal's\n   * scrollback and whether this buffer is flagged to have scrollback or not.\n   * @param rows The terminal rows to use in the calculation.\n   */\n  private _getCorrectBufferLength(rows: number): number {\n    if (!this._hasScrollback) {\n      return rows;\n    }\n\n    const correctBufferLength = rows + this._optionsService.rawOptions.scrollback;\n\n    return correctBufferLength > MAX_BUFFER_SIZE ? MAX_BUFFER_SIZE : correctBufferLength;\n  }\n\n  /**\n   * Fills the buffer's viewport with blank lines.\n   */\n  public fillViewportRows(fillAttr?: IAttributeData): void {\n    if (this.lines.length === 0) {\n      if (fillAttr === undefined) {\n        fillAttr = DEFAULT_ATTR_DATA;\n      }\n      let i = this._rows;\n      while (i--) {\n        this.lines.push(this.getBlankLine(fillAttr));\n      }\n    }\n  }\n\n  /**\n   * Clears the buffer to it's initial state, discarding all previous data.\n   */\n  public clear(): void {\n    this.ydisp = 0;\n    this.ybase = 0;\n    this.y = 0;\n    this.x = 0;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  /**\n   * Resizes the buffer, adjusting its data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    // store reference to null cell with default attrs\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n\n    // Increase max length if needed before adjustments to allow space to fill\n    // as required.\n    const newMaxLength = this._getCorrectBufferLength(newRows);\n    if (newMaxLength > this.lines.maxLength) {\n      this.lines.maxLength = newMaxLength;\n    }\n\n    // The following adjustments should only happen if the buffer has been\n    // initialized/filled.\n    if (this.lines.length > 0) {\n      // Deal with columns increasing (reducing needs to happen after reflow)\n      if (this._cols < newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n\n      // Resize rows in both directions as needed\n      let addToY = 0;\n      if (this._rows < newRows) {\n        for (let y = this._rows; y < newRows; y++) {\n          if (this.lines.length < newRows + this.ybase) {\n            if (this._optionsService.rawOptions.windowsMode) {\n              // Just add the new missing rows on Windows as conpty reprints the screen with it's\n              // view of the world. Once a line enters scrollback for conpty it remains there\n              this.lines.push(new BufferLine(newCols, nullCell));\n            } else {\n              if (this.ybase > 0 && this.lines.length <= this.ybase + this.y + addToY + 1) {\n                // There is room above the buffer and there are no empty elements below the line,\n                // scroll up\n                this.ybase--;\n                addToY++;\n                if (this.ydisp > 0) {\n                  // Viewport is at the top of the buffer, must increase downwards\n                  this.ydisp--;\n                }\n              } else {\n                // Add a blank line if there is no buffer left at the top to scroll to, or if there\n                // are blank lines after the cursor\n                this.lines.push(new BufferLine(newCols, nullCell));\n              }\n            }\n          }\n        }\n      } else { // (this._rows >= newRows)\n        for (let y = this._rows; y > newRows; y--) {\n          if (this.lines.length > newRows + this.ybase) {\n            if (this.lines.length > this.ybase + this.y + 1) {\n              // The line is a blank line below the cursor, remove it\n              this.lines.pop();\n            } else {\n              // The line is the cursor, scroll down\n              this.ybase++;\n              this.ydisp++;\n            }\n          }\n        }\n      }\n\n      // Reduce max length if needed after adjustments, this is done after as it\n      // would otherwise cut data from the bottom of the buffer.\n      if (newMaxLength < this.lines.maxLength) {\n        // Trim from the top of the buffer and adjust ybase and ydisp.\n        const amountToTrim = this.lines.length - newMaxLength;\n        if (amountToTrim > 0) {\n          this.lines.trimStart(amountToTrim);\n          this.ybase = Math.max(this.ybase - amountToTrim, 0);\n          this.ydisp = Math.max(this.ydisp - amountToTrim, 0);\n          this.savedY = Math.max(this.savedY - amountToTrim, 0);\n        }\n        this.lines.maxLength = newMaxLength;\n      }\n\n      // Make sure that the cursor stays on screen\n      this.x = Math.min(this.x, newCols - 1);\n      this.y = Math.min(this.y, newRows - 1);\n      if (addToY) {\n        this.y += addToY;\n      }\n      this.savedX = Math.min(this.savedX, newCols - 1);\n\n      this.scrollTop = 0;\n    }\n\n    this.scrollBottom = newRows - 1;\n\n    if (this._isReflowEnabled) {\n      this._reflow(newCols, newRows);\n\n      // Trim the end of the line off if cols shrunk\n      if (this._cols > newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n    }\n\n    this._cols = newCols;\n    this._rows = newRows;\n  }\n\n  private get _isReflowEnabled(): boolean {\n    return this._hasScrollback && !this._optionsService.rawOptions.windowsMode;\n  }\n\n  private _reflow(newCols: number, newRows: number): void {\n    if (this._cols === newCols) {\n      return;\n    }\n\n    // Iterate through rows, ignore the last one as it cannot be wrapped\n    if (newCols > this._cols) {\n      this._reflowLarger(newCols, newRows);\n    } else {\n      this._reflowSmaller(newCols, newRows);\n    }\n  }\n\n  private _reflowLarger(newCols: number, newRows: number): void {\n    const toRemove: number[] = reflowLargerGetLinesToRemove(this.lines, this._cols, newCols, this.ybase + this.y, this.getNullCell(DEFAULT_ATTR_DATA));\n    if (toRemove.length > 0) {\n      const newLayoutResult = reflowLargerCreateNewLayout(this.lines, toRemove);\n      reflowLargerApplyNewLayout(this.lines, newLayoutResult.layout);\n      this._reflowLargerAdjustViewport(newCols, newRows, newLayoutResult.countRemoved);\n    }\n  }\n\n  private _reflowLargerAdjustViewport(newCols: number, newRows: number, countRemoved: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Adjust viewport based on number of items removed\n    let viewportAdjustments = countRemoved;\n    while (viewportAdjustments-- > 0) {\n      if (this.ybase === 0) {\n        if (this.y > 0) {\n          this.y--;\n        }\n        if (this.lines.length < newRows) {\n          // Add an extra row at the bottom of the viewport\n          this.lines.push(new BufferLine(newCols, nullCell));\n        }\n      } else {\n        if (this.ydisp === this.ybase) {\n          this.ydisp--;\n        }\n        this.ybase--;\n      }\n    }\n    this.savedY = Math.max(this.savedY - countRemoved, 0);\n  }\n\n  private _reflowSmaller(newCols: number, newRows: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Gather all BufferLines that need to be inserted into the Buffer here so that they can be\n    // batched up and only committed once\n    const toInsert = [];\n    let countToInsert = 0;\n    // Go backwards as many lines may be trimmed and this will avoid considering them\n    for (let y = this.lines.length - 1; y >= 0; y--) {\n      // Check whether this line is a problem\n      let nextLine = this.lines.get(y) as BufferLine;\n      if (!nextLine || !nextLine.isWrapped && nextLine.getTrimmedLength() <= newCols) {\n        continue;\n      }\n\n      // Gather wrapped lines and adjust y to be the starting line\n      const wrappedLines: BufferLine[] = [nextLine];\n      while (nextLine.isWrapped && y > 0) {\n        nextLine = this.lines.get(--y) as BufferLine;\n        wrappedLines.unshift(nextLine);\n      }\n\n      // If these lines contain the cursor don't touch them, the program will handle fixing up\n      // wrapped lines with the cursor\n      const absoluteY = this.ybase + this.y;\n      if (absoluteY >= y && absoluteY < y + wrappedLines.length) {\n        continue;\n      }\n\n      const lastLineLength = wrappedLines[wrappedLines.length - 1].getTrimmedLength();\n      const destLineLengths = reflowSmallerGetNewLineLengths(wrappedLines, this._cols, newCols);\n      const linesToAdd = destLineLengths.length - wrappedLines.length;\n      let trimmedLines: number;\n      if (this.ybase === 0 && this.y !== this.lines.length - 1) {\n        // If the top section of the buffer is not yet filled\n        trimmedLines = Math.max(0, this.y - this.lines.maxLength + linesToAdd);\n      } else {\n        trimmedLines = Math.max(0, this.lines.length - this.lines.maxLength + linesToAdd);\n      }\n\n      // Add the new lines\n      const newLines: BufferLine[] = [];\n      for (let i = 0; i < linesToAdd; i++) {\n        const newLine = this.getBlankLine(DEFAULT_ATTR_DATA, true) as BufferLine;\n        newLines.push(newLine);\n      }\n      if (newLines.length > 0) {\n        toInsert.push({\n          // countToInsert here gets the actual index, taking into account other inserted items.\n          // using this we can iterate through the list forwards\n          start: y + wrappedLines.length + countToInsert,\n          newLines\n        });\n        countToInsert += newLines.length;\n      }\n      wrappedLines.push(...newLines);\n\n      // Copy buffer data to new locations, this needs to happen backwards to do in-place\n      let destLineIndex = destLineLengths.length - 1; // Math.floor(cellsNeeded / newCols);\n      let destCol = destLineLengths[destLineIndex]; // cellsNeeded % newCols;\n      if (destCol === 0) {\n        destLineIndex--;\n        destCol = destLineLengths[destLineIndex];\n      }\n      let srcLineIndex = wrappedLines.length - linesToAdd - 1;\n      let srcCol = lastLineLength;\n      while (srcLineIndex >= 0) {\n        const cellsToCopy = Math.min(srcCol, destCol);\n        if (wrappedLines[destLineIndex] === undefined) {\n          // Sanity check that the line exists, this has been known to fail for an unknown reason\n          // which would stop the reflow from happening if an exception would throw.\n          break;\n        }\n        wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol - cellsToCopy, destCol - cellsToCopy, cellsToCopy, true);\n        destCol -= cellsToCopy;\n        if (destCol === 0) {\n          destLineIndex--;\n          destCol = destLineLengths[destLineIndex];\n        }\n        srcCol -= cellsToCopy;\n        if (srcCol === 0) {\n          srcLineIndex--;\n          const wrappedLinesIndex = Math.max(srcLineIndex, 0);\n          srcCol = getWrappedLineTrimmedLength(wrappedLines, wrappedLinesIndex, this._cols);\n        }\n      }\n\n      // Null out the end of the line ends if a wide character wrapped to the following line\n      for (let i = 0; i < wrappedLines.length; i++) {\n        if (destLineLengths[i] < newCols) {\n          wrappedLines[i].setCell(destLineLengths[i], nullCell);\n        }\n      }\n\n      // Adjust viewport as needed\n      let viewportAdjustments = linesToAdd - trimmedLines;\n      while (viewportAdjustments-- > 0) {\n        if (this.ybase === 0) {\n          if (this.y < newRows - 1) {\n            this.y++;\n            this.lines.pop();\n          } else {\n            this.ybase++;\n            this.ydisp++;\n          }\n        } else {\n          // Ensure ybase does not exceed its maximum value\n          if (this.ybase < Math.min(this.lines.maxLength, this.lines.length + countToInsert) - newRows) {\n            if (this.ybase === this.ydisp) {\n              this.ydisp++;\n            }\n            this.ybase++;\n          }\n        }\n      }\n      this.savedY = Math.min(this.savedY + linesToAdd, this.ybase + newRows - 1);\n    }\n\n    // Rearrange lines in the buffer if there are any insertions, this is done at the end rather\n    // than earlier so that it's a single O(n) pass through the buffer, instead of O(n^2) from many\n    // costly calls to CircularList.splice.\n    if (toInsert.length > 0) {\n      // Record buffer insert events and then play them back backwards so that the indexes are\n      // correct\n      const insertEvents: IInsertEvent[] = [];\n\n      // Record original lines so they don't get overridden when we rearrange the list\n      const originalLines: BufferLine[] = [];\n      for (let i = 0; i < this.lines.length; i++) {\n        originalLines.push(this.lines.get(i) as BufferLine);\n      }\n      const originalLinesLength = this.lines.length;\n\n      let originalLineIndex = originalLinesLength - 1;\n      let nextToInsertIndex = 0;\n      let nextToInsert = toInsert[nextToInsertIndex];\n      this.lines.length = Math.min(this.lines.maxLength, this.lines.length + countToInsert);\n      let countInsertedSoFar = 0;\n      for (let i = Math.min(this.lines.maxLength - 1, originalLinesLength + countToInsert - 1); i >= 0; i--) {\n        if (nextToInsert && nextToInsert.start > originalLineIndex + countInsertedSoFar) {\n          // Insert extra lines here, adjusting i as needed\n          for (let nextI = nextToInsert.newLines.length - 1; nextI >= 0; nextI--) {\n            this.lines.set(i--, nextToInsert.newLines[nextI]);\n          }\n          i++;\n\n          // Create insert events for later\n          insertEvents.push({\n            index: originalLineIndex + 1,\n            amount: nextToInsert.newLines.length\n          });\n\n          countInsertedSoFar += nextToInsert.newLines.length;\n          nextToInsert = toInsert[++nextToInsertIndex];\n        } else {\n          this.lines.set(i, originalLines[originalLineIndex--]);\n        }\n      }\n\n      // Update markers\n      let insertCountEmitted = 0;\n      for (let i = insertEvents.length - 1; i >= 0; i--) {\n        insertEvents[i].index += insertCountEmitted;\n        this.lines.onInsertEmitter.fire(insertEvents[i]);\n        insertCountEmitted += insertEvents[i].amount;\n      }\n      const amountToTrim = Math.max(0, originalLinesLength + countToInsert - this.lines.maxLength);\n      if (amountToTrim > 0) {\n        this.lines.onTrimEmitter.fire(amountToTrim);\n      }\n    }\n  }\n\n  // private _reflowSmallerGetLinesNeeded()\n\n  /**\n   * Translates a string index back to a BufferIndex.\n   * To get the correct buffer position the string must start at `startCol` 0\n   * (default in translateBufferLineToString).\n   * The method also works on wrapped line strings given rows were not trimmed.\n   * The method operates on the CharData string length, there are no\n   * additional content or boundary checks. Therefore the string and the buffer\n   * should not be altered in between.\n   * TODO: respect trim flag after fixing #1685\n   * @param lineIndex line index the string was retrieved from\n   * @param stringIndex index within the string\n   * @param startCol column offset the string was retrieved from\n   */\n  public stringIndexToBufferIndex(lineIndex: number, stringIndex: number, trimRight: boolean = false): BufferIndex {\n    while (stringIndex) {\n      const line = this.lines.get(lineIndex);\n      if (!line) {\n        return [-1, -1];\n      }\n      const length = (trimRight) ? line.getTrimmedLength() : line.length;\n      for (let i = 0; i < length; ++i) {\n        if (line.get(i)[CHAR_DATA_WIDTH_INDEX]) {\n          // empty cells report a string length of 0, but get replaced\n          // with a whitespace in translateToString, thus replace with 1\n          stringIndex -= line.get(i)[CHAR_DATA_CHAR_INDEX].length || 1;\n        }\n        if (stringIndex < 0) {\n          return [lineIndex, i];\n        }\n      }\n      lineIndex++;\n    }\n    return [lineIndex, 0];\n  }\n\n  /**\n   * Translates a buffer line to a string, with optional start and end columns.\n   * Wide characters will count as two columns in the resulting string. This\n   * function is useful for getting the actual text underneath the raw selection\n   * position.\n   * @param line The line being translated.\n   * @param trimRight Whether to trim whitespace to the right.\n   * @param startCol The column to start at.\n   * @param endCol The column to end at.\n   */\n  public translateBufferLineToString(lineIndex: number, trimRight: boolean, startCol: number = 0, endCol?: number): string {\n    const line = this.lines.get(lineIndex);\n    if (!line) {\n      return '';\n    }\n    return line.translateToString(trimRight, startCol, endCol);\n  }\n\n  public getWrappedRangeForLine(y: number): { first: number, last: number } {\n    let first = y;\n    let last = y;\n    // Scan upwards for wrapped lines\n    while (first > 0 && this.lines.get(first)!.isWrapped) {\n      first--;\n    }\n    // Scan downwards for wrapped lines\n    while (last + 1 < this.lines.length && this.lines.get(last + 1)!.isWrapped) {\n      last++;\n    }\n    return { first, last };\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    if (i !== null && i !== undefined) {\n      if (!this.tabs[i]) {\n        i = this.prevStop(i);\n      }\n    } else {\n      this.tabs = {};\n      i = 0;\n    }\n\n    for (; i < this._cols; i += this._optionsService.rawOptions.tabStopWidth) {\n      this.tabs[i] = true;\n    }\n  }\n\n  /**\n   * Move the cursor to the previous tab stop from the given position (default is current).\n   * @param x The position to move the cursor to the previous tab stop.\n   */\n  public prevStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[--x] && x > 0);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Move the cursor one tab stop forward from the given position (default is current).\n   * @param x The position to move the cursor one tab stop forward.\n   */\n  public nextStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[++x] && x < this._cols);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Clears markers on single line.\n   * @param y The line to clear.\n   */\n  public clearMarkers(y: number): void {\n    this._isClearing = true;\n    for (let i = 0; i < this.markers.length; i++) {\n      if (this.markers[i].line === y) {\n        this.markers[i].dispose();\n        this.markers.splice(i--, 1);\n      }\n    }\n    this._isClearing = false;\n  }\n\n  /**\n   * Clears markers on all lines\n   */\n  public clearAllMarkers(): void {\n    this._isClearing = true;\n    for (let i = 0; i < this.markers.length; i++) {\n      this.markers[i].dispose();\n      this.markers.splice(i--, 1);\n    }\n    this._isClearing = false;\n  }\n\n  public addMarker(y: number): Marker {\n    const marker = new Marker(y);\n    this.markers.push(marker);\n    marker.register(this.lines.onTrim(amount => {\n      marker.line -= amount;\n      // The marker should be disposed when the line is trimmed from the buffer\n      if (marker.line < 0) {\n        marker.dispose();\n      }\n    }));\n    marker.register(this.lines.onInsert(event => {\n      if (marker.line >= event.index) {\n        marker.line += event.amount;\n      }\n    }));\n    marker.register(this.lines.onDelete(event => {\n      // Delete the marker if it's within the range\n      if (marker.line >= event.index && marker.line < event.index + event.amount) {\n        marker.dispose();\n      }\n\n      // Shift the marker if it's after the deleted range\n      if (marker.line > event.index) {\n        marker.line -= event.amount;\n      }\n    }));\n    marker.register(marker.onDispose(() => this._removeMarker(marker)));\n    return marker;\n  }\n\n  private _removeMarker(marker: Marker): void {\n    if (!this._isClearing) {\n      this.markers.splice(this.markers.indexOf(marker), 1);\n    }\n  }\n\n  public iterator(trimRight: boolean, startIndex?: number, endIndex?: number, startOverscan?: number, endOverscan?: number): IBufferStringIterator {\n    return new BufferStringIterator(this, trimRight, startIndex, endIndex, startOverscan, endOverscan);\n  }\n}\n\n/**\n * Iterator to get unwrapped content strings from the buffer.\n * The iterator returns at least the string data between the borders\n * `startIndex` and `endIndex` (exclusive) and will expand the lines\n * by `startOverscan` to the top and by `endOverscan` to the bottom,\n * if no new line was found in between.\n * It will never read/return string data beyond `startIndex - startOverscan`\n * or `endIndex + endOverscan`. Therefore the first and last line might be truncated.\n * It is possible to always get the full string for the first and last line as well\n * by setting the overscan values to the actual buffer length. This not recommended\n * since it might return the whole buffer within a single string in a worst case scenario.\n */\nexport class BufferStringIterator implements IBufferStringIterator {\n  private _current: number;\n\n  constructor(\n    private _buffer: IBuffer,\n    private _trimRight: boolean,\n    private _startIndex: number = 0,\n    private _endIndex: number = _buffer.lines.length,\n    private _startOverscan: number = 0,\n    private _endOverscan: number = 0\n  ) {\n    if (this._startIndex < 0) {\n      this._startIndex = 0;\n    }\n    if (this._endIndex > this._buffer.lines.length) {\n      this._endIndex = this._buffer.lines.length;\n    }\n    this._current = this._startIndex;\n  }\n\n  public hasNext(): boolean {\n    return this._current < this._endIndex;\n  }\n\n  public next(): IBufferStringIteratorResult {\n    const range = this._buffer.getWrappedRangeForLine(this._current);\n    // limit search window to overscan value at both borders\n    if (range.first < this._startIndex - this._startOverscan) {\n      range.first = this._startIndex - this._startOverscan;\n    }\n    if (range.last > this._endIndex + this._endOverscan) {\n      range.last = this._endIndex + this._endOverscan;\n    }\n    // limit to current buffer length\n    range.first = Math.max(range.first, 0);\n    range.last = Math.min(range.last, this._buffer.lines.length);\n    let content = '';\n    for (let i = range.first; i <= range.last; ++i) {\n      content += this._buffer.translateBufferLineToString(i, this._trimRight);\n    }\n    this._current = range.last + 1;\n    return { range, content };\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, IBufferLine, ICellData, IAttributeData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, Content, BgFlags } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * buffer memory layout:\n *\n *   |             uint32_t             |        uint32_t         |        uint32_t         |\n *   |             `content`            |          `FG`           |          `BG`           |\n *   | wcwidth(2) comb(1) codepoint(21) | flags(8) R(8) G(8) B(8) | flags(8) R(8) G(8) B(8) |\n */\n\n\n/** typed array slots taken by one cell */\nconst CELL_SIZE = 3;\n\n/**\n * Cell member indices.\n *\n * Direct access:\n *    `content = data[column * CELL_SIZE + Cell.CONTENT];`\n *    `fg = data[column * CELL_SIZE + Cell.FG];`\n *    `bg = data[column * CELL_SIZE + Cell.BG];`\n */\nconst enum Cell {\n  CONTENT = 0,\n  FG = 1, // currently simply holds all known attrs\n  BG = 2  // currently unused\n}\n\nexport const DEFAULT_ATTR_DATA = Object.freeze(new AttributeData());\n\n/**\n * Typed array based bufferline implementation.\n *\n * There are 2 ways to insert data into the cell buffer:\n * - `setCellFromCodepoint` + `addCodepointToCell`\n *   Use these for data that is already UTF32.\n *   Used during normal input in `InputHandler` for faster buffer access.\n * - `setCell`\n *   This method takes a CellData object and stores the data in the buffer.\n *   Use `CellData.fromCharData` to create the CellData object (e.g. from JS string).\n *\n * To retrieve data from the buffer use either one of the primitive methods\n * (if only one particular value is needed) or `loadCell`. For `loadCell` in a loop\n * memory allocs / GC pressure can be greatly reduced by reusing the CellData object.\n */\nexport class BufferLine implements IBufferLine {\n  protected _data: Uint32Array;\n  protected _combined: {[index: number]: string} = {};\n  protected _extendedAttrs: {[index: number]: ExtendedAttrs} = {};\n  public length: number;\n\n  constructor(cols: number, fillCellData?: ICellData, public isWrapped: boolean = false) {\n    this._data = new Uint32Array(cols * CELL_SIZE);\n    const cell = fillCellData || CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n    for (let i = 0; i < cols; ++i) {\n      this.setCell(i, cell);\n    }\n    this.length = cols;\n  }\n\n  /**\n   * Get cell data CharData.\n   * @deprecated\n   */\n  public get(index: number): CharData {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    const cp = content & Content.CODEPOINT_MASK;\n    return [\n      this._data[index * CELL_SIZE + Cell.FG],\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index]\n        : (cp) ? stringFromCodePoint(cp) : '',\n      content >> Content.WIDTH_SHIFT,\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index].charCodeAt(this._combined[index].length - 1)\n        : cp\n    ];\n  }\n\n  /**\n   * Set cell data from CharData.\n   * @deprecated\n   */\n  public set(index: number, value: CharData): void {\n    this._data[index * CELL_SIZE + Cell.FG] = value[CHAR_DATA_ATTR_INDEX];\n    if (value[CHAR_DATA_CHAR_INDEX].length > 1) {\n      this._combined[index] = value[1];\n      this._data[index * CELL_SIZE + Cell.CONTENT] = index | Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    } else {\n      this._data[index * CELL_SIZE + Cell.CONTENT] = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n\n  /**\n   * primitive getters\n   * use these when only one value is needed, otherwise use `loadCell`\n   */\n  public getWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT;\n  }\n\n  /** Test whether content has width. */\n  public hasWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.WIDTH_MASK;\n  }\n\n  /** Get FG cell component. */\n  public getFg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.FG];\n  }\n\n  /** Get BG cell component. */\n  public getBg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG];\n  }\n\n  /**\n   * Test whether contains any chars.\n   * Basically an empty has no content, but other cells might differ in FG/BG\n   * from real empty cells.\n   * */\n  public hasContent(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK;\n  }\n\n  /**\n   * Get codepoint of the cell.\n   * To be in line with `code` in CharData this either returns\n   * a single UTF32 codepoint or the last codepoint of a combined string.\n   */\n  public getCodePoint(index: number): number {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index].charCodeAt(this._combined[index].length - 1);\n    }\n    return content & Content.CODEPOINT_MASK;\n  }\n\n  /** Test whether the cell contains a combined string. */\n  public isCombined(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.IS_COMBINED_MASK;\n  }\n\n  /** Returns the string content of the cell. */\n  public getString(index: number): string {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index];\n    }\n    if (content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(content & Content.CODEPOINT_MASK);\n    }\n    // return empty string for empty cells\n    return '';\n  }\n\n  /**\n   * Load data at `index` into `cell`. This is used to access cells in a way that's more friendly\n   * to GC as it significantly reduced the amount of new objects/references needed.\n   */\n  public loadCell(index: number, cell: ICellData): ICellData {\n    const startIndex = index * CELL_SIZE;\n    cell.content = this._data[startIndex + Cell.CONTENT];\n    cell.fg = this._data[startIndex + Cell.FG];\n    cell.bg = this._data[startIndex + Cell.BG];\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      cell.combinedData = this._combined[index];\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      cell.extended = this._extendedAttrs[index];\n    }\n    return cell;\n  }\n\n  /**\n   * Set data at `index` to `cell`.\n   */\n  public setCell(index: number, cell: ICellData): void {\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      this._combined[index] = cell.combinedData;\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = cell.extended;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = cell.content;\n    this._data[index * CELL_SIZE + Cell.FG] = cell.fg;\n    this._data[index * CELL_SIZE + Cell.BG] = cell.bg;\n  }\n\n  /**\n   * Set cell data from input handler.\n   * Since the input handler see the incoming chars as UTF32 codepoints,\n   * it gets an optimized access method.\n   */\n  public setCellFromCodePoint(index: number, codePoint: number, width: number, fg: number, bg: number, eAttrs: IExtendedAttrs): void {\n    if (bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = eAttrs;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = codePoint | (width << Content.WIDTH_SHIFT);\n    this._data[index * CELL_SIZE + Cell.FG] = fg;\n    this._data[index * CELL_SIZE + Cell.BG] = bg;\n  }\n\n  /**\n   * Add a codepoint to a cell from input handler.\n   * During input stage combining chars with a width of 0 follow and stack\n   * onto a leading char. Since we already set the attrs\n   * by the previous `setDataFromCodePoint` call, we can omit it here.\n   */\n  public addCodepointToCell(index: number, codePoint: number): void {\n    let content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      // we already have a combined string, simply add\n      this._combined[index] += stringFromCodePoint(codePoint);\n    } else {\n      if (content & Content.CODEPOINT_MASK) {\n        // normal case for combining chars:\n        //  - move current leading char + new one into combined string\n        //  - set combined flag\n        this._combined[index] = stringFromCodePoint(content & Content.CODEPOINT_MASK) + stringFromCodePoint(codePoint);\n        content &= ~Content.CODEPOINT_MASK; // set codepoint in buffer to 0\n        content |= Content.IS_COMBINED_MASK;\n      } else {\n        // should not happen - we actually have no data in the cell yet\n        // simply set the data in the cell buffer with a width of 1\n        content = codePoint | (1 << Content.WIDTH_SHIFT);\n      }\n      this._data[index * CELL_SIZE + Cell.CONTENT] = content;\n    }\n  }\n\n  public insertCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n\n    // handle fullwidth at pos: reset cell one to the left if pos is second cell of a wide char\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = this.length - pos - n - 1; i >= 0; --i) {\n        this.setCell(pos + n + i, this.loadCell(pos + i, cell));\n      }\n      for (let i = 0; i < n; ++i) {\n        this.setCell(pos + i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at line end: reset last cell if it is first cell of a wide char\n    if (this.getWidth(this.length - 1) === 2) {\n      this.setCellFromCodePoint(this.length - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public deleteCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = 0; i < this.length - pos - n; ++i) {\n        this.setCell(pos + i, this.loadCell(pos + n + i, cell));\n      }\n      for (let i = this.length - n; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at pos:\n    // - reset pos-1 if wide char\n    // - reset pos if width==0 (previous second cell of a wide char)\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    if (this.getWidth(pos) === 0 && !this.hasContent(pos)) {\n      this.setCellFromCodePoint(pos, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public replaceCells(start: number, end: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    // handle fullwidth at start: reset cell one to the left if start is second cell of a wide char\n    if (start && this.getWidth(start - 1) === 2) {\n      this.setCellFromCodePoint(start - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    // handle fullwidth at last cell + 1: reset to empty cell if it is second part of a wide char\n    if (end < this.length && this.getWidth(end - 1) === 2) {\n      this.setCellFromCodePoint(end, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    while (start < end  && start < this.length) {\n      this.setCell(start++, fillCellData);\n    }\n  }\n\n  public resize(cols: number, fillCellData: ICellData): void {\n    if (cols === this.length) {\n      return;\n    }\n    if (cols > this.length) {\n      const data = new Uint32Array(cols * CELL_SIZE);\n      if (this.length) {\n        if (cols * CELL_SIZE < this._data.length) {\n          data.set(this._data.subarray(0, cols * CELL_SIZE));\n        } else {\n          data.set(this._data);\n        }\n      }\n      this._data = data;\n      for (let i = this.length; i < cols; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      if (cols) {\n        const data = new Uint32Array(cols * CELL_SIZE);\n        data.set(this._data.subarray(0, cols * CELL_SIZE));\n        this._data = data;\n        // Remove any cut off combined data, FIXME: repeat this for extended attrs\n        const keys = Object.keys(this._combined);\n        for (let i = 0; i < keys.length; i++) {\n          const key = parseInt(keys[i], 10);\n          if (key >= cols) {\n            delete this._combined[key];\n          }\n        }\n      } else {\n        this._data = new Uint32Array(0);\n        this._combined = {};\n      }\n    }\n    this.length = cols;\n  }\n\n  /** fill a line with fillCharData */\n  public fill(fillCellData: ICellData): void {\n    this._combined = {};\n    this._extendedAttrs = {};\n    for (let i = 0; i < this.length; ++i) {\n      this.setCell(i, fillCellData);\n    }\n  }\n\n  /** alter to a full copy of line  */\n  public copyFrom(line: BufferLine): void {\n    if (this.length !== line.length) {\n      this._data = new Uint32Array(line._data);\n    } else {\n      // use high speed copy if lengths are equal\n      this._data.set(line._data);\n    }\n    this.length = line.length;\n    this._combined = {};\n    for (const el in line._combined) {\n      this._combined[el] = line._combined[el];\n    }\n    this._extendedAttrs = {};\n    for (const el in line._extendedAttrs) {\n      this._extendedAttrs[el] = line._extendedAttrs[el];\n    }\n    this.isWrapped = line.isWrapped;\n  }\n\n  /** create a new clone */\n  public clone(): IBufferLine {\n    const newLine = new BufferLine(0);\n    newLine._data = new Uint32Array(this._data);\n    newLine.length = this.length;\n    for (const el in this._combined) {\n      newLine._combined[el] = this._combined[el];\n    }\n    for (const el in this._extendedAttrs) {\n      newLine._extendedAttrs[el] = this._extendedAttrs[el];\n    }\n    newLine.isWrapped = this.isWrapped;\n    return newLine;\n  }\n\n  public getTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public copyCellsFrom(src: BufferLine, srcCol: number, destCol: number, length: number, applyInReverse: boolean): void {\n    const srcData = src._data;\n    if (applyInReverse) {\n      for (let cell = length - 1; cell >= 0; cell--) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n      }\n    } else {\n      for (let cell = 0; cell < length; cell++) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n      }\n    }\n\n    // Move any combined data over as needed, FIXME: repeat for extended attrs\n    const srcCombinedKeys = Object.keys(src._combined);\n    for (let i = 0; i < srcCombinedKeys.length; i++) {\n      const key = parseInt(srcCombinedKeys[i], 10);\n      if (key >= srcCol) {\n        this._combined[key - srcCol + destCol] = src._combined[key];\n      }\n    }\n  }\n\n  public translateToString(trimRight: boolean = false, startCol: number = 0, endCol: number = this.length): string {\n    if (trimRight) {\n      endCol = Math.min(endCol, this.getTrimmedLength());\n    }\n    let result = '';\n    while (startCol < endCol) {\n      const content = this._data[startCol * CELL_SIZE + Cell.CONTENT];\n      const cp = content & Content.CODEPOINT_MASK;\n      result += (content & Content.IS_COMBINED_MASK) ? this._combined[startCol] : (cp) ? stringFromCodePoint(cp) : WHITESPACE_CELL_CHAR;\n      startCol += (content >> Content.WIDTH_SHIFT) || 1; // always advance by 1\n    }\n    return result;\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange } from 'xterm';\n\nexport function getRangeLength(range: IBufferRange, bufferCols: number): number {\n  if (range.start.y > range.end.y) {\n    throw new Error(`Buffer range end (${range.end.x}, ${range.end.y}) cannot be before start (${range.start.x}, ${range.start.y})`);\n  }\n  return bufferCols * (range.end.y - range.start.y) + (range.end.x - range.start.x + 1);\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { BufferLine } from 'common/buffer/BufferLine';\nimport { CircularList } from 'common/CircularList';\nimport { IBufferLine, ICellData } from 'common/Types';\n\nexport interface INewLayoutResult {\n  layout: number[];\n  countRemoved: number;\n}\n\n/**\n * Evaluates and returns indexes to be removed after a reflow larger occurs. Lines will be removed\n * when a wrapped line unwraps.\n * @param lines The buffer lines.\n * @param newCols The columns after resize.\n */\nexport function reflowLargerGetLinesToRemove(lines: CircularList<IBufferLine>, oldCols: number, newCols: number, bufferAbsoluteY: number, nullCell: ICellData): number[] {\n  // Gather all BufferLines that need to be removed from the Buffer here so that they can be\n  // batched up and only committed once\n  const toRemove: number[] = [];\n\n  for (let y = 0; y < lines.length - 1; y++) {\n    // Check if this row is wrapped\n    let i = y;\n    let nextLine = lines.get(++i) as BufferLine;\n    if (!nextLine.isWrapped) {\n      continue;\n    }\n\n    // Check how many lines it's wrapped for\n    const wrappedLines: BufferLine[] = [lines.get(y) as BufferLine];\n    while (i < lines.length && nextLine.isWrapped) {\n      wrappedLines.push(nextLine);\n      nextLine = lines.get(++i) as BufferLine;\n    }\n\n    // If these lines contain the cursor don't touch them, the program will handle fixing up wrapped\n    // lines with the cursor\n    if (bufferAbsoluteY >= y && bufferAbsoluteY < i) {\n      y += wrappedLines.length - 1;\n      continue;\n    }\n\n    // Copy buffer data to new locations\n    let destLineIndex = 0;\n    let destCol = getWrappedLineTrimmedLength(wrappedLines, destLineIndex, oldCols);\n    let srcLineIndex = 1;\n    let srcCol = 0;\n    while (srcLineIndex < wrappedLines.length) {\n      const srcTrimmedTineLength = getWrappedLineTrimmedLength(wrappedLines, srcLineIndex, oldCols);\n      const srcRemainingCells = srcTrimmedTineLength - srcCol;\n      const destRemainingCells = newCols - destCol;\n      const cellsToCopy = Math.min(srcRemainingCells, destRemainingCells);\n\n      wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol, destCol, cellsToCopy, false);\n\n      destCol += cellsToCopy;\n      if (destCol === newCols) {\n        destLineIndex++;\n        destCol = 0;\n      }\n      srcCol += cellsToCopy;\n      if (srcCol === srcTrimmedTineLength) {\n        srcLineIndex++;\n        srcCol = 0;\n      }\n\n      // Make sure the last cell isn't wide, if it is copy it to the current dest\n      if (destCol === 0 && destLineIndex !== 0) {\n        if (wrappedLines[destLineIndex - 1].getWidth(newCols - 1) === 2) {\n          wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[destLineIndex - 1], newCols - 1, destCol++, 1, false);\n          // Null out the end of the last row\n          wrappedLines[destLineIndex - 1].setCell(newCols - 1, nullCell);\n        }\n      }\n    }\n\n    // Clear out remaining cells or fragments could remain;\n    wrappedLines[destLineIndex].replaceCells(destCol, newCols, nullCell);\n\n    // Work backwards and remove any rows at the end that only contain null cells\n    let countToRemove = 0;\n    for (let i = wrappedLines.length - 1; i > 0; i--) {\n      if (i > destLineIndex || wrappedLines[i].getTrimmedLength() === 0) {\n        countToRemove++;\n      } else {\n        break;\n      }\n    }\n\n    if (countToRemove > 0) {\n      toRemove.push(y + wrappedLines.length - countToRemove); // index\n      toRemove.push(countToRemove);\n    }\n\n    y += wrappedLines.length - 1;\n  }\n  return toRemove;\n}\n\n/**\n * Creates and return the new layout for lines given an array of indexes to be removed.\n * @param lines The buffer lines.\n * @param toRemove The indexes to remove.\n */\nexport function reflowLargerCreateNewLayout(lines: CircularList<IBufferLine>, toRemove: number[]): INewLayoutResult {\n  const layout: number[] = [];\n  // First iterate through the list and get the actual indexes to use for rows\n  let nextToRemoveIndex = 0;\n  let nextToRemoveStart = toRemove[nextToRemoveIndex];\n  let countRemovedSoFar = 0;\n  for (let i = 0; i < lines.length; i++) {\n    if (nextToRemoveStart === i) {\n      const countToRemove = toRemove[++nextToRemoveIndex];\n\n      // Tell markers that there was a deletion\n      lines.onDeleteEmitter.fire({\n        index: i - countRemovedSoFar,\n        amount: countToRemove\n      });\n\n      i += countToRemove - 1;\n      countRemovedSoFar += countToRemove;\n      nextToRemoveStart = toRemove[++nextToRemoveIndex];\n    } else {\n      layout.push(i);\n    }\n  }\n  return {\n    layout,\n    countRemoved: countRemovedSoFar\n  };\n}\n\n/**\n * Applies a new layout to the buffer. This essentially does the same as many splice calls but it's\n * done all at once in a single iteration through the list since splice is very expensive.\n * @param lines The buffer lines.\n * @param newLayout The new layout to apply.\n */\nexport function reflowLargerApplyNewLayout(lines: CircularList<IBufferLine>, newLayout: number[]): void {\n  // Record original lines so they don't get overridden when we rearrange the list\n  const newLayoutLines: BufferLine[] = [];\n  for (let i = 0; i < newLayout.length; i++) {\n    newLayoutLines.push(lines.get(newLayout[i]) as BufferLine);\n  }\n\n  // Rearrange the list\n  for (let i = 0; i < newLayoutLines.length; i++) {\n    lines.set(i, newLayoutLines[i]);\n  }\n  lines.length = newLayout.length;\n}\n\n/**\n * Gets the new line lengths for a given wrapped line. The purpose of this function it to pre-\n * compute the wrapping points since wide characters may need to be wrapped onto the following line.\n * This function will return an array of numbers of where each line wraps to, the resulting array\n * will only contain the values `newCols` (when the line does not end with a wide character) and\n * `newCols - 1` (when the line does end with a wide character), except for the last value which\n * will contain the remaining items to fill the line.\n *\n * Calling this with a `newCols` value of `1` will lock up.\n *\n * @param wrappedLines The wrapped lines to evaluate.\n * @param oldCols The columns before resize.\n * @param newCols The columns after resize.\n */\nexport function reflowSmallerGetNewLineLengths(wrappedLines: BufferLine[], oldCols: number, newCols: number): number[] {\n  const newLineLengths: number[] = [];\n  const cellsNeeded = wrappedLines.map((l, i) => getWrappedLineTrimmedLength(wrappedLines, i, oldCols)).reduce((p, c) => p + c);\n\n  // Use srcCol and srcLine to find the new wrapping point, use that to get the cellsAvailable and\n  // linesNeeded\n  let srcCol = 0;\n  let srcLine = 0;\n  let cellsAvailable = 0;\n  while (cellsAvailable < cellsNeeded) {\n    if (cellsNeeded - cellsAvailable < newCols) {\n      // Add the final line and exit the loop\n      newLineLengths.push(cellsNeeded - cellsAvailable);\n      break;\n    }\n    srcCol += newCols;\n    const oldTrimmedLength = getWrappedLineTrimmedLength(wrappedLines, srcLine, oldCols);\n    if (srcCol > oldTrimmedLength) {\n      srcCol -= oldTrimmedLength;\n      srcLine++;\n    }\n    const endsWithWide = wrappedLines[srcLine].getWidth(srcCol - 1) === 2;\n    if (endsWithWide) {\n      srcCol--;\n    }\n    const lineLength = endsWithWide ? newCols - 1 : newCols;\n    newLineLengths.push(lineLength);\n    cellsAvailable += lineLength;\n  }\n\n  return newLineLengths;\n}\n\nexport function getWrappedLineTrimmedLength(lines: BufferLine[], i: number, cols: number): number {\n  // If this is the last row in the wrapped line, get the actual trimmed length\n  if (i === lines.length - 1) {\n    return lines[i].getTrimmedLength();\n  }\n  // Detect whether the following line starts with a wide character and the end of the current line\n  // is null, if so then we can be pretty sure the null character should be excluded from the line\n  // length]\n  const endsInNull = !(lines[i].hasContent(cols - 1)) && lines[i].getWidth(cols - 1) === 1;\n  const followingLineStartsWithWide = lines[i + 1].getWidth(0) === 2;\n  if (endsInNull && followingLineStartsWithWide) {\n    return cols - 1;\n  }\n  return cols;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IAttributeData } from 'common/Types';\nimport { Buffer } from 'common/buffer/Buffer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { Disposable } from 'common/Lifecycle';\n\n/**\n * The BufferSet represents the set of two buffers used by xterm terminals (normal and alt) and\n * provides also utilities for working with them.\n */\nexport class BufferSet extends Disposable implements IBufferSet {\n  private _normal!: Buffer;\n  private _alt!: Buffer;\n  private _activeBuffer!: Buffer;\n\n  private _onBufferActivate = this.register(new EventEmitter<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}>());\n  public get onBufferActivate(): IEvent<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}> { return this._onBufferActivate.event; }\n\n  /**\n   * Create a new BufferSet for the given terminal.\n   * @param _terminal - The terminal the BufferSet will belong to\n   */\n  constructor(\n    private readonly _optionsService: IOptionsService,\n    private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.reset();\n  }\n\n  public reset(): void {\n    this._normal = new Buffer(true, this._optionsService, this._bufferService);\n    this._normal.fillViewportRows();\n\n    // The alt buffer should never have scrollback.\n    // See http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-The-Alternate-Screen-Buffer\n    this._alt = new Buffer(false, this._optionsService, this._bufferService);\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n\n    this.setupTabStops();\n  }\n\n  /**\n   * Returns the alt Buffer of the BufferSet\n   */\n  public get alt(): Buffer {\n    return this._alt;\n  }\n\n  /**\n   * Returns the normal Buffer of the BufferSet\n   */\n  public get active(): Buffer {\n    return this._activeBuffer;\n  }\n\n  /**\n   * Returns the currently active Buffer of the BufferSet\n   */\n  public get normal(): Buffer {\n    return this._normal;\n  }\n\n  /**\n   * Sets the normal Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateNormalBuffer(): void {\n    if (this._activeBuffer === this._normal) {\n      return;\n    }\n    this._normal.x = this._alt.x;\n    this._normal.y = this._alt.y;\n    // The alt buffer should always be cleared when we switch to the normal\n    // buffer. This frees up memory since the alt buffer should always be new\n    // when activated.\n    this._alt.clear();\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n  }\n\n  /**\n   * Sets the alt Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateAltBuffer(fillAttr?: IAttributeData): void {\n    if (this._activeBuffer === this._alt) {\n      return;\n    }\n    // Since the alt buffer is always cleared when the normal buffer is\n    // activated, we want to fill it when switching to it.\n    this._alt.fillViewportRows(fillAttr);\n    this._alt.x = this._normal.x;\n    this._alt.y = this._normal.y;\n    this._activeBuffer = this._alt;\n    this._onBufferActivate.fire({\n      activeBuffer: this._alt,\n      inactiveBuffer: this._normal\n    });\n  }\n\n  /**\n   * Resizes both normal and alt buffers, adjusting their data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    this._normal.resize(newCols, newRows);\n    this._alt.resize(newCols, newRows);\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    this._normal.setupTabStops(i);\n    this._alt.setupTabStops(i);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, ICellData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, Content } from 'common/buffer/Constants';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * CellData - represents a single Cell in the terminal buffer.\n */\nexport class CellData extends AttributeData implements ICellData {\n  /** Helper to create CellData from CharData. */\n  public static fromCharData(value: CharData): CellData {\n    const obj = new CellData();\n    obj.setFromCharData(value);\n    return obj;\n  }\n  /** Primitives from terminal buffer. */\n  public content = 0;\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n  public combinedData = '';\n  /** Whether cell contains a combined string. */\n  public isCombined(): number {\n    return this.content & Content.IS_COMBINED_MASK;\n  }\n  /** Width of the cell. */\n  public getWidth(): number {\n    return this.content >> Content.WIDTH_SHIFT;\n  }\n  /** JS string of the content. */\n  public getChars(): string {\n    if (this.content & Content.IS_COMBINED_MASK) {\n      return this.combinedData;\n    }\n    if (this.content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(this.content & Content.CODEPOINT_MASK);\n    }\n    return '';\n  }\n  /**\n   * Codepoint of cell\n   * Note this returns the UTF32 codepoint of single chars,\n   * if content is a combined string it returns the codepoint\n   * of the last char in string to be in line with code in CharData.\n   * */\n  public getCode(): number {\n    return (this.isCombined())\n      ? this.combinedData.charCodeAt(this.combinedData.length - 1)\n      : this.content & Content.CODEPOINT_MASK;\n  }\n  /** Set data from CharData */\n  public setFromCharData(value: CharData): void {\n    this.fg = value[CHAR_DATA_ATTR_INDEX];\n    this.bg = 0;\n    let combined = false;\n    // surrogates and combined strings need special treatment\n    if (value[CHAR_DATA_CHAR_INDEX].length > 2) {\n      combined = true;\n    }\n    else if (value[CHAR_DATA_CHAR_INDEX].length === 2) {\n      const code = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0);\n      // if the 2-char string is a surrogate create single codepoint\n      // everything else is combined\n      if (0xD800 <= code && code <= 0xDBFF) {\n        const second = value[CHAR_DATA_CHAR_INDEX].charCodeAt(1);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          this.content = ((code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n        }\n        else {\n          combined = true;\n        }\n      }\n      else {\n        combined = true;\n      }\n    }\n    else {\n      this.content = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n    if (combined) {\n      this.combinedData = value[CHAR_DATA_CHAR_INDEX];\n      this.content = Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n  /** Get data as CharData. */\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const DEFAULT_COLOR = 256;\nexport const DEFAULT_ATTR = (0 << 18) | (DEFAULT_COLOR << 9) | (256 << 0);\n\nexport const CHAR_DATA_ATTR_INDEX = 0;\nexport const CHAR_DATA_CHAR_INDEX = 1;\nexport const CHAR_DATA_WIDTH_INDEX = 2;\nexport const CHAR_DATA_CODE_INDEX = 3;\n\n/**\n * Null cell - a real empty cell (containing nothing).\n * Note that code should always be 0 for a null cell as\n * several test condition of the buffer line rely on this.\n */\nexport const NULL_CELL_CHAR = '';\nexport const NULL_CELL_WIDTH = 1;\nexport const NULL_CELL_CODE = 0;\n\n/**\n * Whitespace cell.\n * This is meant as a replacement for empty cells when needed\n * during rendering lines to preserve correct aligment.\n */\nexport const WHITESPACE_CELL_CHAR = ' ';\nexport const WHITESPACE_CELL_WIDTH = 1;\nexport const WHITESPACE_CELL_CODE = 32;\n\n/**\n * Bitmasks for accessing data in `content`.\n */\nexport const enum Content {\n  /**\n   * bit 1..21    codepoint, max allowed in UTF32 is 0x10FFFF (21 bits taken)\n   *              read:   `codepoint = content & Content.codepointMask;`\n   *              write:  `content |= codepoint & Content.codepointMask;`\n   *                      shortcut if precondition `codepoint <= 0x10FFFF` is met:\n   *                      `content |= codepoint;`\n   */\n  CODEPOINT_MASK = 0x1FFFFF,\n\n  /**\n   * bit 22       flag indication whether a cell contains combined content\n   *              read:   `isCombined = content & Content.isCombined;`\n   *              set:    `content |= Content.isCombined;`\n   *              clear:  `content &= ~Content.isCombined;`\n   */\n  IS_COMBINED_MASK = 0x200000,  // 1 << 21\n\n  /**\n   * bit 1..22    mask to check whether a cell contains any string data\n   *              we need to check for codepoint and isCombined bits to see\n   *              whether a cell contains anything\n   *              read:   `isEmpty = !(content & Content.hasContent)`\n   */\n  HAS_CONTENT_MASK = 0x3FFFFF,\n\n  /**\n   * bit 23..24   wcwidth value of cell, takes 2 bits (ranges from 0..2)\n   *              read:   `width = (content & Content.widthMask) >> Content.widthShift;`\n   *                      `hasWidth = content & Content.widthMask;`\n   *                      as long as wcwidth is highest value in `content`:\n   *                      `width = content >> Content.widthShift;`\n   *              write:  `content |= (width << Content.widthShift) & Content.widthMask;`\n   *                      shortcut if precondition `0 <= width <= 3` is met:\n   *                      `content |= width << Content.widthShift;`\n   */\n  WIDTH_MASK = 0xC00000,   // 3 << 22\n  WIDTH_SHIFT = 22\n}\n\nexport const enum Attributes {\n  /**\n   * bit 1..8     blue in RGB, color in P256 and P16\n   */\n  BLUE_MASK = 0xFF,\n  BLUE_SHIFT = 0,\n  PCOLOR_MASK = 0xFF,\n  PCOLOR_SHIFT = 0,\n\n  /**\n   * bit 9..16    green in RGB\n   */\n  GREEN_MASK = 0xFF00,\n  GREEN_SHIFT = 8,\n\n  /**\n   * bit 17..24   red in RGB\n   */\n  RED_MASK = 0xFF0000,\n  RED_SHIFT = 16,\n\n  /**\n   * bit 25..26   color mode: DEFAULT (0) | P16 (1) | P256 (2) | RGB (3)\n   */\n  CM_MASK = 0x3000000,\n  CM_DEFAULT = 0,\n  CM_P16 = 0x1000000,\n  CM_P256 = 0x2000000,\n  CM_RGB = 0x3000000,\n\n  /**\n   * bit 1..24  RGB room\n   */\n  RGB_MASK = 0xFFFFFF\n}\n\nexport const enum FgFlags {\n  /**\n   * bit 27..32\n   */\n  INVERSE = 0x4000000,\n  BOLD = 0x8000000,\n  UNDERLINE = 0x10000000,\n  BLINK = 0x20000000,\n  INVISIBLE = 0x40000000,\n  STRIKETHROUGH = 0x80000000,\n}\n\nexport const enum BgFlags {\n  /**\n   * bit 27..32 (upper 3 unused)\n   */\n  ITALIC = 0x4000000,\n  DIM = 0x8000000,\n  HAS_EXTENDED = 0x10000000\n}\n\nexport const enum UnderlineStyle {\n  NONE = 0,\n  SINGLE = 1,\n  DOUBLE = 2,\n  CURLY = 3,\n  DOTTED = 4,\n  DASHED = 5\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IMarker } from 'common/Types';\n\nexport class Marker extends Disposable implements IMarker {\n  private static _nextId = 1;\n\n  private _id: number = Marker._nextId++;\n  public isDisposed: boolean = false;\n\n  public get id(): number { return this._id; }\n\n  private _onDispose = new EventEmitter<void>();\n  public get onDispose(): IEvent<void> { return this._onDispose.event; }\n\n  constructor(\n    public line: number\n  ) {\n    super();\n  }\n\n  public dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this.isDisposed = true;\n    this.line = -1;\n    // Emit before super.dispose such that dispose listeners get a change to react\n    this._onDispose.fire();\n    super.dispose();\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharset } from 'common/Types';\n\n/**\n * The character sets supported by the terminal. These enable several languages\n * to be represented within the terminal with only 8-bit encoding. See ISO 2022\n * for a discussion on character sets. Only VT100 character sets are supported.\n */\nexport const CHARSETS: { [key: string]: ICharset | undefined } = {};\n\n/**\n * The default character set, US.\n */\nexport const DEFAULT_CHARSET: ICharset | undefined = CHARSETS['B'];\n\n/**\n * DEC Special Character and Line Drawing Set.\n * Reference: http://vt100.net/docs/vt102-ug/table5-13.html\n * A lot of curses apps use this if they see TERM=xterm.\n * testing: echo -e '\\e(0a\\e(B'\n * The xterm output sometimes seems to conflict with the\n * reference above. xterm seems in line with the reference\n * when running vttest however.\n * The table below now uses xterm's output from vttest.\n */\nCHARSETS['0'] = {\n  '`': '\\u25c6', // '◆'\n  'a': '\\u2592', // '▒'\n  'b': '\\u2409', // '␉' (HT)\n  'c': '\\u240c', // '␌' (FF)\n  'd': '\\u240d', // '␍' (CR)\n  'e': '\\u240a', // '␊' (LF)\n  'f': '\\u00b0', // '°'\n  'g': '\\u00b1', // '±'\n  'h': '\\u2424', // '␤' (NL)\n  'i': '\\u240b', // '␋' (VT)\n  'j': '\\u2518', // '┘'\n  'k': '\\u2510', // '┐'\n  'l': '\\u250c', // '┌'\n  'm': '\\u2514', // '└'\n  'n': '\\u253c', // '┼'\n  'o': '\\u23ba', // '⎺'\n  'p': '\\u23bb', // '⎻'\n  'q': '\\u2500', // '─'\n  'r': '\\u23bc', // '⎼'\n  's': '\\u23bd', // '⎽'\n  't': '\\u251c', // '├'\n  'u': '\\u2524', // '┤'\n  'v': '\\u2534', // '┴'\n  'w': '\\u252c', // '┬'\n  'x': '\\u2502', // '│'\n  'y': '\\u2264', // '≤'\n  'z': '\\u2265', // '≥'\n  '{': '\\u03c0', // 'π'\n  '|': '\\u2260', // '≠'\n  '}': '\\u00a3', // '£'\n  '~': '\\u00b7'  // '·'\n};\n\n/**\n * British character set\n * ESC (A\n * Reference: http://vt100.net/docs/vt220-rm/table2-5.html\n */\nCHARSETS['A'] = {\n  '#': '£'\n};\n\n/**\n * United States character set\n * ESC (B\n */\nCHARSETS['B'] = undefined;\n\n/**\n * Dutch character set\n * ESC (4\n * Reference: http://vt100.net/docs/vt220-rm/table2-6.html\n */\nCHARSETS['4'] = {\n  '#': '£',\n  '@': '¾',\n  '[': 'ij',\n  '\\\\': '½',\n  ']': '|',\n  '{': '¨',\n  '|': 'f',\n  '}': '¼',\n  '~': '´'\n};\n\n/**\n * Finnish character set\n * ESC (C or ESC (5\n * Reference: http://vt100.net/docs/vt220-rm/table2-7.html\n */\nCHARSETS['C'] =\nCHARSETS['5'] = {\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * French character set\n * ESC (R\n * Reference: http://vt100.net/docs/vt220-rm/table2-8.html\n */\nCHARSETS['R'] = {\n  '#': '£',\n  '@': 'à',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': '§',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': '¨'\n};\n\n/**\n * French Canadian character set\n * ESC (Q\n * Reference: http://vt100.net/docs/vt220-rm/table2-9.html\n */\nCHARSETS['Q'] = {\n  '@': 'à',\n  '[': 'â',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  '`': 'ô',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': 'û'\n};\n\n/**\n * German character set\n * ESC (K\n * Reference: http://vt100.net/docs/vt220-rm/table2-10.html\n */\nCHARSETS['K'] = {\n  '@': '§',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Ü',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'ß'\n};\n\n/**\n * Italian character set\n * ESC (Y\n * Reference: http://vt100.net/docs/vt220-rm/table2-11.html\n */\nCHARSETS['Y'] = {\n  '#': '£',\n  '@': '§',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': 'é',\n  '`': 'ù',\n  '{': 'à',\n  '|': 'ò',\n  '}': 'è',\n  '~': 'ì'\n};\n\n/**\n * Norwegian/Danish character set\n * ESC (E or ESC (6\n * Reference: http://vt100.net/docs/vt220-rm/table2-12.html\n */\nCHARSETS['E'] =\nCHARSETS['6'] = {\n  '@': 'Ä',\n  '[': 'Æ',\n  '\\\\': 'Ø',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'ä',\n  '{': 'æ',\n  '|': 'ø',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Spanish character set\n * ESC (Z\n * Reference: http://vt100.net/docs/vt220-rm/table2-13.html\n */\nCHARSETS['Z'] = {\n  '#': '£',\n  '@': '§',\n  '[': '¡',\n  '\\\\': 'Ñ',\n  ']': '¿',\n  '{': '°',\n  '|': 'ñ',\n  '}': 'ç'\n};\n\n/**\n * Swedish character set\n * ESC (H or ESC (7\n * Reference: http://vt100.net/docs/vt220-rm/table2-14.html\n */\nCHARSETS['H'] =\nCHARSETS['7'] = {\n  '@': 'É',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Swiss character set\n * ESC (=\n * Reference: http://vt100.net/docs/vt220-rm/table2-15.html\n */\nCHARSETS['='] = {\n  '#': 'ù',\n  '@': 'à',\n  '[': 'é',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '_': 'è',\n  '`': 'ô',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'û'\n};\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * C0 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C0 {\n  /** Null (Caret = ^@, C = \\0) */\n  export const NUL = '\\x00';\n  /** Start of Heading (Caret = ^A) */\n  export const SOH = '\\x01';\n  /** Start of Text (Caret = ^B) */\n  export const STX = '\\x02';\n  /** End of Text (Caret = ^C) */\n  export const ETX = '\\x03';\n  /** End of Transmission (Caret = ^D) */\n  export const EOT = '\\x04';\n  /** Enquiry (Caret = ^E) */\n  export const ENQ = '\\x05';\n  /** Acknowledge (Caret = ^F) */\n  export const ACK = '\\x06';\n  /** Bell (Caret = ^G, C = \\a) */\n  export const BEL = '\\x07';\n  /** Backspace (Caret = ^H, C = \\b) */\n  export const BS  = '\\x08';\n  /** Character Tabulation, Horizontal Tabulation (Caret = ^I, C = \\t) */\n  export const HT  = '\\x09';\n  /** Line Feed (Caret = ^J, C = \\n) */\n  export const LF  = '\\x0a';\n  /** Line Tabulation, Vertical Tabulation (Caret = ^K, C = \\v) */\n  export const VT  = '\\x0b';\n  /** Form Feed (Caret = ^L, C = \\f) */\n  export const FF  = '\\x0c';\n  /** Carriage Return (Caret = ^M, C = \\r) */\n  export const CR  = '\\x0d';\n  /** Shift Out (Caret = ^N) */\n  export const SO  = '\\x0e';\n  /** Shift In (Caret = ^O) */\n  export const SI  = '\\x0f';\n  /** Data Link Escape (Caret = ^P) */\n  export const DLE = '\\x10';\n  /** Device Control One (XON) (Caret = ^Q) */\n  export const DC1 = '\\x11';\n  /** Device Control Two (Caret = ^R) */\n  export const DC2 = '\\x12';\n  /** Device Control Three (XOFF) (Caret = ^S) */\n  export const DC3 = '\\x13';\n  /** Device Control Four (Caret = ^T) */\n  export const DC4 = '\\x14';\n  /** Negative Acknowledge (Caret = ^U) */\n  export const NAK = '\\x15';\n  /** Synchronous Idle (Caret = ^V) */\n  export const SYN = '\\x16';\n  /** End of Transmission Block (Caret = ^W) */\n  export const ETB = '\\x17';\n  /** Cancel (Caret = ^X) */\n  export const CAN = '\\x18';\n  /** End of Medium (Caret = ^Y) */\n  export const EM  = '\\x19';\n  /** Substitute (Caret = ^Z) */\n  export const SUB = '\\x1a';\n  /** Escape (Caret = ^[, C = \\e) */\n  export const ESC = '\\x1b';\n  /** File Separator (Caret = ^\\) */\n  export const FS  = '\\x1c';\n  /** Group Separator (Caret = ^]) */\n  export const GS  = '\\x1d';\n  /** Record Separator (Caret = ^^) */\n  export const RS  = '\\x1e';\n  /** Unit Separator (Caret = ^_) */\n  export const US  = '\\x1f';\n  /** Space */\n  export const SP  = '\\x20';\n  /** Delete (Caret = ^?) */\n  export const DEL = '\\x7f';\n}\n\n/**\n * C1 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C1 {\n  /** padding character */\n  export const PAD = '\\x80';\n  /** High Octet Preset */\n  export const HOP = '\\x81';\n  /** Break Permitted Here */\n  export const BPH = '\\x82';\n  /** No Break Here */\n  export const NBH = '\\x83';\n  /** Index */\n  export const IND = '\\x84';\n  /** Next Line */\n  export const NEL = '\\x85';\n  /** Start of Selected Area */\n  export const SSA = '\\x86';\n  /** End of Selected Area */\n  export const ESA = '\\x87';\n  /** Horizontal Tabulation Set */\n  export const HTS = '\\x88';\n  /** Horizontal Tabulation With Justification */\n  export const HTJ = '\\x89';\n  /** Vertical Tabulation Set */\n  export const VTS = '\\x8a';\n  /** Partial Line Down */\n  export const PLD = '\\x8b';\n  /** Partial Line Up */\n  export const PLU = '\\x8c';\n  /** Reverse Index */\n  export const RI = '\\x8d';\n  /** Single-Shift 2 */\n  export const SS2 = '\\x8e';\n  /** Single-Shift 3 */\n  export const SS3 = '\\x8f';\n  /** Device Control String */\n  export const DCS = '\\x90';\n  /** Private Use 1 */\n  export const PU1 = '\\x91';\n  /** Private Use 2 */\n  export const PU2 = '\\x92';\n  /** Set Transmit State */\n  export const STS = '\\x93';\n  /** Destructive backspace, intended to eliminate ambiguity about meaning of BS. */\n  export const CCH = '\\x94';\n  /** Message Waiting */\n  export const MW = '\\x95';\n  /** Start of Protected Area */\n  export const SPA = '\\x96';\n  /** End of Protected Area */\n  export const EPA = '\\x97';\n  /** Start of String */\n  export const SOS = '\\x98';\n  /** Single Graphic Character Introducer */\n  export const SGCI = '\\x99';\n  /** Single Character Introducer */\n  export const SCI = '\\x9a';\n  /** Control Sequence Introducer */\n  export const CSI = '\\x9b';\n  /** String Terminator */\n  export const ST = '\\x9c';\n  /** Operating System Command */\n  export const OSC = '\\x9d';\n  /** Privacy Message */\n  export const PM = '\\x9e';\n  /** Application Program Command */\n  export const APC = '\\x9f';\n}\nexport namespace C1_ESCAPED {\n  export const ST = `${C0.ESC}\\\\`;\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IKeyboardEvent, IKeyboardResult, KeyboardResultType } from 'common/Types';\nimport { C0 } from 'common/data/EscapeSequences';\n\n// reg + shift key mappings for digits and special chars\nconst KEYCODE_KEY_MAPPINGS: { [key: number]: [string, string]} = {\n  // digits 0-9\n  48: ['0', ')'],\n  49: ['1', '!'],\n  50: ['2', '@'],\n  51: ['3', '#'],\n  52: ['4', '$'],\n  53: ['5', '%'],\n  54: ['6', '^'],\n  55: ['7', '&'],\n  56: ['8', '*'],\n  57: ['9', '('],\n\n  // special chars\n  186: [';', ':'],\n  187: ['=', '+'],\n  188: [',', '<'],\n  189: ['-', '_'],\n  190: ['.', '>'],\n  191: ['/', '?'],\n  192: ['`', '~'],\n  219: ['[', '{'],\n  220: ['\\\\', '|'],\n  221: [']', '}'],\n  222: ['\\'', '\"']\n};\n\nexport function evaluateKeyboardEvent(\n  ev: IKeyboardEvent,\n  applicationCursorMode: boolean,\n  isMac: boolean,\n  macOptionIsMeta: boolean\n): IKeyboardResult {\n  const result: IKeyboardResult = {\n    type: KeyboardResultType.SEND_KEY,\n    // Whether to cancel event propagation (NOTE: this may not be needed since the event is\n    // canceled at the end of keyDown\n    cancel: false,\n    // The new key even to emit\n    key: undefined\n  };\n  const modifiers = (ev.shiftKey ? 1 : 0) | (ev.altKey ? 2 : 0) | (ev.ctrlKey ? 4 : 0) | (ev.metaKey ? 8 : 0);\n  switch (ev.keyCode) {\n    case 0:\n      if (ev.key === 'UIKeyInputUpArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OA';\n        } else {\n          result.key = C0.ESC + '[A';\n        }\n      }\n      else if (ev.key === 'UIKeyInputLeftArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OD';\n        } else {\n          result.key = C0.ESC + '[D';\n        }\n      }\n      else if (ev.key === 'UIKeyInputRightArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OC';\n        } else {\n          result.key = C0.ESC + '[C';\n        }\n      }\n      else if (ev.key === 'UIKeyInputDownArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OB';\n        } else {\n          result.key = C0.ESC + '[B';\n        }\n      }\n      break;\n    case 8:\n      // backspace\n      if (ev.shiftKey) {\n        result.key = C0.BS; // ^H\n        break;\n      } else if (ev.altKey) {\n        result.key = C0.ESC + C0.DEL; // \\e ^?\n        break;\n      }\n      result.key = C0.DEL; // ^?\n      break;\n    case 9:\n      // tab\n      if (ev.shiftKey) {\n        result.key = C0.ESC + '[Z';\n        break;\n      }\n      result.key = C0.HT;\n      result.cancel = true;\n      break;\n    case 13:\n      // return/enter\n      result.key = ev.altKey ? C0.ESC + C0.CR : C0.CR;\n      result.cancel = true;\n      break;\n    case 27:\n      // escape\n      result.key = C0.ESC;\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.ESC;\n      }\n      result.cancel = true;\n      break;\n    case 37:\n      // left-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'D';\n        // HACK: Make Alt + left-arrow behave like Ctrl + left-arrow: move one word backwards\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3D') {\n          result.key = C0.ESC + (isMac ? 'b' : '[1;5D');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OD';\n      } else {\n        result.key = C0.ESC + '[D';\n      }\n      break;\n    case 39:\n      // right-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'C';\n        // HACK: Make Alt + right-arrow behave like Ctrl + right-arrow: move one word forward\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3C') {\n          result.key = C0.ESC + (isMac ? 'f' : '[1;5C');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OC';\n      } else {\n        result.key = C0.ESC + '[C';\n      }\n      break;\n    case 38:\n      // up-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'A';\n        // HACK: Make Alt + up-arrow behave like Ctrl + up-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3A') {\n          result.key = C0.ESC + '[1;5A';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OA';\n      } else {\n        result.key = C0.ESC + '[A';\n      }\n      break;\n    case 40:\n      // down-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'B';\n        // HACK: Make Alt + down-arrow behave like Ctrl + down-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3B') {\n          result.key = C0.ESC + '[1;5B';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OB';\n      } else {\n        result.key = C0.ESC + '[B';\n      }\n      break;\n    case 45:\n      // insert\n      if (!ev.shiftKey && !ev.ctrlKey) {\n        // <Ctrl> or <Shift> + <Insert> are used to\n        // copy-paste on some systems.\n        result.key = C0.ESC + '[2~';\n      }\n      break;\n    case 46:\n      // delete\n      if (modifiers) {\n        result.key = C0.ESC + '[3;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[3~';\n      }\n      break;\n    case 36:\n      // home\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'H';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OH';\n      } else {\n        result.key = C0.ESC + '[H';\n      }\n      break;\n    case 35:\n      // end\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'F';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OF';\n      } else {\n        result.key = C0.ESC + '[F';\n      }\n      break;\n    case 33:\n      // page up\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_UP;\n      } else if (ev.ctrlKey) {\n        result.key = C0.ESC + '[5;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[5~';\n      }\n      break;\n    case 34:\n      // page down\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_DOWN;\n      } else if (ev.ctrlKey) {\n        result.key = C0.ESC + '[6;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[6~';\n      }\n      break;\n    case 112:\n      // F1-F12\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'P';\n      } else {\n        result.key = C0.ESC + 'OP';\n      }\n      break;\n    case 113:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'Q';\n      } else {\n        result.key = C0.ESC + 'OQ';\n      }\n      break;\n    case 114:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'R';\n      } else {\n        result.key = C0.ESC + 'OR';\n      }\n      break;\n    case 115:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'S';\n      } else {\n        result.key = C0.ESC + 'OS';\n      }\n      break;\n    case 116:\n      if (modifiers) {\n        result.key = C0.ESC + '[15;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[15~';\n      }\n      break;\n    case 117:\n      if (modifiers) {\n        result.key = C0.ESC + '[17;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[17~';\n      }\n      break;\n    case 118:\n      if (modifiers) {\n        result.key = C0.ESC + '[18;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[18~';\n      }\n      break;\n    case 119:\n      if (modifiers) {\n        result.key = C0.ESC + '[19;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[19~';\n      }\n      break;\n    case 120:\n      if (modifiers) {\n        result.key = C0.ESC + '[20;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[20~';\n      }\n      break;\n    case 121:\n      if (modifiers) {\n        result.key = C0.ESC + '[21;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[21~';\n      }\n      break;\n    case 122:\n      if (modifiers) {\n        result.key = C0.ESC + '[23;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[23~';\n      }\n      break;\n    case 123:\n      if (modifiers) {\n        result.key = C0.ESC + '[24;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[24~';\n      }\n      break;\n    default:\n      // a-z and space\n      if (ev.ctrlKey && !ev.shiftKey && !ev.altKey && !ev.metaKey) {\n        if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          result.key = String.fromCharCode(ev.keyCode - 64);\n        } else if (ev.keyCode === 32) {\n          result.key = C0.NUL;\n        } else if (ev.keyCode >= 51 && ev.keyCode <= 55) {\n          // escape, file sep, group sep, record sep, unit sep\n          result.key = String.fromCharCode(ev.keyCode - 51 + 27);\n        } else if (ev.keyCode === 56) {\n          result.key = C0.DEL;\n        } else if (ev.keyCode === 219) {\n          result.key = C0.ESC;\n        } else if (ev.keyCode === 220) {\n          result.key = C0.FS;\n        } else if (ev.keyCode === 221) {\n          result.key = C0.GS;\n        }\n      } else if ((!isMac || macOptionIsMeta) && ev.altKey && !ev.metaKey) {\n        // On macOS this is a third level shift when !macOptionIsMeta. Use <Esc> instead.\n        const keyMapping = KEYCODE_KEY_MAPPINGS[ev.keyCode];\n        const key = keyMapping?.[!ev.shiftKey ? 0 : 1];\n        if (key) {\n          result.key = C0.ESC + key;\n        } else if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          const keyCode = ev.ctrlKey ? ev.keyCode - 64 : ev.keyCode + 32;\n          let keyString = String.fromCharCode(keyCode);\n          if (ev.shiftKey) {\n            keyString = keyString.toUpperCase();\n          }\n          result.key = C0.ESC + keyString;\n        } else if (ev.key === 'Dead' && ev.code.startsWith('Key')) {\n          // Reference: https://github.com/xtermjs/xterm.js/issues/3725\n          // Alt will produce a \"dead key\" (initate composition) with some\n          // of the letters in US layout (e.g. N/E/U).\n          // It's safe to match against Key* since no other `code` values begin with \"Key\".\n          // https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code/code_values#code_values_on_mac\n          let keyString = ev.code.slice(3, 4);\n          if (!ev.shiftKey) {\n            keyString = keyString.toLowerCase();\n          }\n          result.key = C0.ESC + keyString;\n          result.cancel = true;\n        }\n      } else if (isMac && !ev.altKey && !ev.ctrlKey && !ev.shiftKey && ev.metaKey) {\n        if (ev.keyCode === 65) { // cmd + a\n          result.type = KeyboardResultType.SELECT_ALL;\n        }\n      } else if (ev.key && !ev.ctrlKey && !ev.altKey && !ev.metaKey && ev.keyCode >= 48 && ev.key.length === 1) {\n        // Include only keys that that result in a _single_ character; don't include num lock, volume up, etc.\n        result.key = ev.key;\n      } else if (ev.key && ev.ctrlKey) {\n        if (ev.key === '_') { // ^_\n          result.key = C0.US;\n        }\n        if (ev.key === '@') { // ^ + shift + 2 = ^ + @\n          result.key = C0.NUL;\n        }\n      }\n      break;\n  }\n\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Polyfill - Convert UTF32 codepoint into JS string.\n * Note: The built-in String.fromCodePoint happens to be much slower\n *       due to additional sanity checks. We can avoid them since\n *       we always operate on legal UTF32 (granted by the input decoders)\n *       and use this faster version instead.\n */\nexport function stringFromCodePoint(codePoint: number): string {\n  if (codePoint > 0xFFFF) {\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10) + 0xD800) + String.fromCharCode((codePoint % 0x400) + 0xDC00);\n  }\n  return String.fromCharCode(codePoint);\n}\n\n/**\n * Convert UTF32 char codes into JS string.\n * Basically the same as `stringFromCodePoint` but for multiple codepoints\n * in a loop (which is a lot faster).\n */\nexport function utf32ToString(data: Uint32Array, start: number = 0, end: number = data.length): string {\n  let result = '';\n  for (let i = start; i < end; ++i) {\n    let codepoint = data[i];\n    if (codepoint > 0xFFFF) {\n      // JS strings are encoded as UTF16, thus a non BMP codepoint gets converted into a surrogate pair\n      // conversion rules:\n      //  - subtract 0x10000 from code point, leaving a 20 bit number\n      //  - add high 10 bits to 0xD800  --> first surrogate\n      //  - add low 10 bits to 0xDC00   --> second surrogate\n      codepoint -= 0x10000;\n      result += String.fromCharCode((codepoint >> 10) + 0xD800) + String.fromCharCode((codepoint % 0x400) + 0xDC00);\n    } else {\n      result += String.fromCharCode(codepoint);\n    }\n  }\n  return result;\n}\n\n/**\n * StringToUtf32 - decodes UTF16 sequences into UTF32 codepoints.\n * To keep the decoder in line with JS strings it handles single surrogates as UCS2.\n */\nexport class StringToUtf32 {\n  private _interim: number = 0;\n\n  /**\n   * Clears interim and resets decoder to clean state.\n   */\n  public clear(): void {\n    this._interim = 0;\n  }\n\n  /**\n   * Decode JS string to UTF32 codepoints.\n   * The methods assumes stream input and will store partly transmitted\n   * surrogate pairs and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided input data does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: string, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let startPos = 0;\n\n    // handle leftover surrogate high\n    if (this._interim) {\n      const second = input.charCodeAt(startPos++);\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        target[size++] = (this._interim - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        // illegal codepoint (USC2 handling)\n        target[size++] = this._interim;\n        target[size++] = second;\n      }\n      this._interim = 0;\n    }\n\n    for (let i = startPos; i < length; ++i) {\n      const code = input.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          this._interim = code;\n          return size;\n        }\n        const second = input.charCodeAt(i);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          target[size++] = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          // illegal codepoint (USC2 handling)\n          target[size++] = code;\n          target[size++] = second;\n        }\n        continue;\n      }\n      if (code === 0xFEFF) {\n        // BOM\n        continue;\n      }\n      target[size++] = code;\n    }\n    return size;\n  }\n}\n\n/**\n * Utf8Decoder - decodes UTF8 byte sequences into UTF32 codepoints.\n */\nexport class Utf8ToUtf32 {\n  public interim: Uint8Array = new Uint8Array(3);\n\n  /**\n   * Clears interim bytes and resets decoder to clean state.\n   */\n  public clear(): void {\n    this.interim.fill(0);\n  }\n\n  /**\n   * Decodes UTF8 byte sequences in `input` to UTF32 codepoints in `target`.\n   * The methods assumes stream input and will store partly transmitted bytes\n   * and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided data chunk does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: Uint8Array, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let byte1: number;\n    let byte2: number;\n    let byte3: number;\n    let byte4: number;\n    let codepoint = 0;\n    let startPos = 0;\n\n    // handle leftover bytes\n    if (this.interim[0]) {\n      let discardInterim = false;\n      let cp = this.interim[0];\n      cp &= ((((cp & 0xE0) === 0xC0)) ? 0x1F : (((cp & 0xF0) === 0xE0)) ? 0x0F : 0x07);\n      let pos = 0;\n      let tmp: number;\n      while ((tmp = this.interim[++pos] & 0x3F) && pos < 4) {\n        cp <<= 6;\n        cp |= tmp;\n      }\n      // missing bytes - read ahead from input\n      const type = (((this.interim[0] & 0xE0) === 0xC0)) ? 2 : (((this.interim[0] & 0xF0) === 0xE0)) ? 3 : 4;\n      const missing = type - pos;\n      while (startPos < missing) {\n        if (startPos >= length) {\n          return 0;\n        }\n        tmp = input[startPos++];\n        if ((tmp & 0xC0) !== 0x80) {\n          // wrong continuation, discard interim bytes completely\n          startPos--;\n          discardInterim = true;\n          break;\n        } else {\n          // need to save so we can continue short inputs in next call\n          this.interim[pos++] = tmp;\n          cp <<= 6;\n          cp |= tmp & 0x3F;\n        }\n      }\n      if (!discardInterim) {\n        // final test is type dependent\n        if (type === 2) {\n          if (cp < 0x80) {\n            // wrong starter byte\n            startPos--;\n          } else {\n            target[size++] = cp;\n          }\n        } else if (type === 3) {\n          if (cp < 0x0800 || (cp >= 0xD800 && cp <= 0xDFFF) || cp === 0xFEFF) {\n            // illegal codepoint or BOM\n          } else {\n            target[size++] = cp;\n          }\n        } else {\n          if (cp < 0x010000 || cp > 0x10FFFF) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        }\n      }\n      this.interim.fill(0);\n    }\n\n    // loop through input\n    const fourStop = length - 4;\n    let i = startPos;\n    while (i < length) {\n      /**\n       * ASCII shortcut with loop unrolled to 4 consecutive ASCII chars.\n       * This is a compromise between speed gain for ASCII\n       * and penalty for non ASCII:\n       * For best ASCII performance the char should be stored directly into target,\n       * but even a single attempt to write to target and compare afterwards\n       * penalizes non ASCII really bad (-50%), thus we load the char into byteX first,\n       * which reduces ASCII performance by ~15%.\n       * This trial for ASCII reduces non ASCII performance by ~10% which seems acceptible\n       * compared to the gains.\n       * Note that this optimization only takes place for 4 consecutive ASCII chars,\n       * for any shorter it bails out. Worst case - all 4 bytes being read but\n       * thrown away due to the last being a non ASCII char (-10% performance).\n       */\n      while (i < fourStop\n        && !((byte1 = input[i]) & 0x80)\n        && !((byte2 = input[i + 1]) & 0x80)\n        && !((byte3 = input[i + 2]) & 0x80)\n        && !((byte4 = input[i + 3]) & 0x80))\n      {\n        target[size++] = byte1;\n        target[size++] = byte2;\n        target[size++] = byte3;\n        target[size++] = byte4;\n        i += 4;\n      }\n\n      // reread byte1\n      byte1 = input[i++];\n\n      // 1 byte\n      if (byte1 < 0x80) {\n        target[size++] = byte1;\n\n        // 2 bytes\n      } else if ((byte1 & 0xE0) === 0xC0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x1F) << 6 | (byte2 & 0x3F);\n        if (codepoint < 0x80) {\n          // wrong starter byte\n          i--;\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 3 bytes\n      } else if ((byte1 & 0xF0) === 0xE0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x0F) << 12 | (byte2 & 0x3F) << 6 | (byte3 & 0x3F);\n        if (codepoint < 0x0800 || (codepoint >= 0xD800 && codepoint <= 0xDFFF) || codepoint === 0xFEFF) {\n          // illegal codepoint or BOM, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 4 bytes\n      } else if ((byte1 & 0xF8) === 0xF0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          this.interim[2] = byte3;\n          return size;\n        }\n        byte4 = input[i++];\n        if ((byte4 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x07) << 18 | (byte2 & 0x3F) << 12 | (byte3 & 0x3F) << 6 | (byte4 & 0x3F);\n        if (codepoint < 0x010000 || codepoint > 0x10FFFF) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n      } else {\n        // illegal byte, just skip\n      }\n    }\n    return size;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeVersionProvider } from 'common/services/Services';\nimport { fill } from 'common/TypedArrayUtils';\n\ntype CharWidth = 0 | 1 | 2;\n\nconst BMP_COMBINING = [\n  [0x0300, 0x036F], [0x0483, 0x0486], [0x0488, 0x0489],\n  [0x0591, 0x05BD], [0x05BF, 0x05BF], [0x05C1, 0x05C2],\n  [0x05C4, 0x05C5], [0x05C7, 0x05C7], [0x0600, 0x0603],\n  [0x0610, 0x0615], [0x064B, 0x065E], [0x0670, 0x0670],\n  [0x06D6, 0x06E4], [0x06E7, 0x06E8], [0x06EA, 0x06ED],\n  [0x070F, 0x070F], [0x0711, 0x0711], [0x0730, 0x074A],\n  [0x07A6, 0x07B0], [0x07EB, 0x07F3], [0x0901, 0x0902],\n  [0x093C, 0x093C], [0x0941, 0x0948], [0x094D, 0x094D],\n  [0x0951, 0x0954], [0x0962, 0x0963], [0x0981, 0x0981],\n  [0x09BC, 0x09BC], [0x09C1, 0x09C4], [0x09CD, 0x09CD],\n  [0x09E2, 0x09E3], [0x0A01, 0x0A02], [0x0A3C, 0x0A3C],\n  [0x0A41, 0x0A42], [0x0A47, 0x0A48], [0x0A4B, 0x0A4D],\n  [0x0A70, 0x0A71], [0x0A81, 0x0A82], [0x0ABC, 0x0ABC],\n  [0x0AC1, 0x0AC5], [0x0AC7, 0x0AC8], [0x0ACD, 0x0ACD],\n  [0x0AE2, 0x0AE3], [0x0B01, 0x0B01], [0x0B3C, 0x0B3C],\n  [0x0B3F, 0x0B3F], [0x0B41, 0x0B43], [0x0B4D, 0x0B4D],\n  [0x0B56, 0x0B56], [0x0B82, 0x0B82], [0x0BC0, 0x0BC0],\n  [0x0BCD, 0x0BCD], [0x0C3E, 0x0C40], [0x0C46, 0x0C48],\n  [0x0C4A, 0x0C4D], [0x0C55, 0x0C56], [0x0CBC, 0x0CBC],\n  [0x0CBF, 0x0CBF], [0x0CC6, 0x0CC6], [0x0CCC, 0x0CCD],\n  [0x0CE2, 0x0CE3], [0x0D41, 0x0D43], [0x0D4D, 0x0D4D],\n  [0x0DCA, 0x0DCA], [0x0DD2, 0x0DD4], [0x0DD6, 0x0DD6],\n  [0x0E31, 0x0E31], [0x0E34, 0x0E3A], [0x0E47, 0x0E4E],\n  [0x0EB1, 0x0EB1], [0x0EB4, 0x0EB9], [0x0EBB, 0x0EBC],\n  [0x0EC8, 0x0ECD], [0x0F18, 0x0F19], [0x0F35, 0x0F35],\n  [0x0F37, 0x0F37], [0x0F39, 0x0F39], [0x0F71, 0x0F7E],\n  [0x0F80, 0x0F84], [0x0F86, 0x0F87], [0x0F90, 0x0F97],\n  [0x0F99, 0x0FBC], [0x0FC6, 0x0FC6], [0x102D, 0x1030],\n  [0x1032, 0x1032], [0x1036, 0x1037], [0x1039, 0x1039],\n  [0x1058, 0x1059], [0x1160, 0x11FF], [0x135F, 0x135F],\n  [0x1712, 0x1714], [0x1732, 0x1734], [0x1752, 0x1753],\n  [0x1772, 0x1773], [0x17B4, 0x17B5], [0x17B7, 0x17BD],\n  [0x17C6, 0x17C6], [0x17C9, 0x17D3], [0x17DD, 0x17DD],\n  [0x180B, 0x180D], [0x18A9, 0x18A9], [0x1920, 0x1922],\n  [0x1927, 0x1928], [0x1932, 0x1932], [0x1939, 0x193B],\n  [0x1A17, 0x1A18], [0x1B00, 0x1B03], [0x1B34, 0x1B34],\n  [0x1B36, 0x1B3A], [0x1B3C, 0x1B3C], [0x1B42, 0x1B42],\n  [0x1B6B, 0x1B73], [0x1DC0, 0x1DCA], [0x1DFE, 0x1DFF],\n  [0x200B, 0x200F], [0x202A, 0x202E], [0x2060, 0x2063],\n  [0x206A, 0x206F], [0x20D0, 0x20EF], [0x302A, 0x302F],\n  [0x3099, 0x309A], [0xA806, 0xA806], [0xA80B, 0xA80B],\n  [0xA825, 0xA826], [0xFB1E, 0xFB1E], [0xFE00, 0xFE0F],\n  [0xFE20, 0xFE23], [0xFEFF, 0xFEFF], [0xFFF9, 0xFFFB]\n];\nconst HIGH_COMBINING = [\n  [0x10A01, 0x10A03], [0x10A05, 0x10A06], [0x10A0C, 0x10A0F],\n  [0x10A38, 0x10A3A], [0x10A3F, 0x10A3F], [0x1D167, 0x1D169],\n  [0x1D173, 0x1D182], [0x1D185, 0x1D18B], [0x1D1AA, 0x1D1AD],\n  [0x1D242, 0x1D244], [0xE0001, 0xE0001], [0xE0020, 0xE007F],\n  [0xE0100, 0xE01EF]\n];\n\n// BMP lookup table, lazy initialized during first addon loading\nlet table: Uint8Array;\n\nfunction bisearch(ucs: number, data: number[][]): boolean {\n  let min = 0;\n  let max = data.length - 1;\n  let mid;\n  if (ucs < data[0][0] || ucs > data[max][1]) {\n    return false;\n  }\n  while (max >= min) {\n    mid = (min + max) >> 1;\n    if (ucs > data[mid][1]) {\n      min = mid + 1;\n    } else if (ucs < data[mid][0]) {\n      max = mid - 1;\n    } else {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport class UnicodeV6 implements IUnicodeVersionProvider {\n  public readonly version = '6';\n\n  constructor() {\n    // init lookup table once\n    if (!table) {\n      table = new Uint8Array(65536);\n      fill(table, 1);\n      table[0] = 0;\n      // control chars\n      fill(table, 0, 1, 32);\n      fill(table, 0, 0x7f, 0xa0);\n\n      // apply wide char rules first\n      // wide chars\n      fill(table, 2, 0x1100, 0x1160);\n      table[0x2329] = 2;\n      table[0x232a] = 2;\n      fill(table, 2, 0x2e80, 0xa4d0);\n      table[0x303f] = 1;  // wrongly in last line\n\n      fill(table, 2, 0xac00, 0xd7a4);\n      fill(table, 2, 0xf900, 0xfb00);\n      fill(table, 2, 0xfe10, 0xfe1a);\n      fill(table, 2, 0xfe30, 0xfe70);\n      fill(table, 2, 0xff00, 0xff61);\n      fill(table, 2, 0xffe0, 0xffe7);\n\n      // apply combining last to ensure we overwrite\n      // wrongly wide set chars:\n      //    the original algo evals combining first and falls\n      //    through to wide check so we simply do here the opposite\n      // combining 0\n      for (let r = 0; r < BMP_COMBINING.length; ++r) {\n        fill(table, 0, BMP_COMBINING[r][0], BMP_COMBINING[r][1] + 1);\n      }\n    }\n  }\n\n  public wcwidth(num: number): CharWidth {\n    if (num < 32) return 0;\n    if (num < 127) return 1;\n    if (num < 65536) return table[num] as CharWidth;\n    if (bisearch(num, HIGH_COMBINING)) return 0;\n    if ((num >= 0x20000 && num <= 0x2fffd) || (num >= 0x30000 && num <= 0x3fffd)) return 2;\n    return 1;\n  }\n}\n","\n/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\n\ndeclare const setTimeout: (handler: () => void, timeout?: number) => void;\n\n/**\n * Safety watermark to avoid memory exhaustion and browser engine crash on fast data input.\n * Enable flow control to avoid this limit and make sure that your backend correctly\n * propagates this to the underlying pty. (see docs for further instructions)\n * Since this limit is meant as a safety parachute to prevent browser crashs,\n * it is set to a very high number. Typically xterm.js gets unresponsive with\n * a 100 times lower number (>500 kB).\n */\nconst DISCARD_WATERMARK = 50000000; // ~50 MB\n\n/**\n * The max number of ms to spend on writes before allowing the renderer to\n * catch up with a 0ms setTimeout. A value of < 33 to keep us close to\n * 30fps, and a value of < 16 to try to run at 60fps. Of course, the real FPS\n * depends on the time it takes for the renderer to draw the frame.\n */\nconst WRITE_TIMEOUT_MS = 12;\n\n/**\n * Threshold of max held chunks in the write buffer, that were already processed.\n * This is a tradeoff between extensive write buffer shifts (bad runtime) and high\n * memory consumption by data thats not used anymore.\n */\nconst WRITE_BUFFER_LENGTH_THRESHOLD = 50;\n\n// queueMicrotask polyfill for nodejs < v11\nconst qmt: (cb: () => void) => void = (typeof queueMicrotask === 'undefined')\n  ? (cb: () => void) => { Promise.resolve().then(cb); }\n  : queueMicrotask;\n\n\nexport class WriteBuffer {\n  private _writeBuffer: (string | Uint8Array)[] = [];\n  private _callbacks: ((() => void) | undefined)[] = [];\n  private _pendingData = 0;\n  private _bufferOffset = 0;\n  private _isSyncWriting = false;\n  private _syncCalls = 0;\n  public get onWriteParsed(): IEvent<void> { return this._onWriteParsed.event; }\n  private _onWriteParsed = new EventEmitter<void>();\n\n  constructor(private _action: (data: string | Uint8Array, promiseResult?: boolean) => void | Promise<boolean>) { }\n\n  /**\n   * @deprecated Unreliable, to be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    // stop writeSync recursions with maxSubsequentCalls argument\n    // This is dangerous to use as it will lose the current data chunk\n    // and return immediately.\n    if (maxSubsequentCalls !== undefined && this._syncCalls > maxSubsequentCalls) {\n      // comment next line if a whole loop block should only contain x `writeSync` calls\n      // (total flat vs. deep nested limit)\n      this._syncCalls = 0;\n      return;\n    }\n    // append chunk to buffer\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(undefined);\n\n    // increase recursion counter\n    this._syncCalls++;\n    // exit early if another writeSync loop is active\n    if (this._isSyncWriting) {\n      return;\n    }\n    this._isSyncWriting = true;\n\n    // force sync processing on pending data chunks to avoid in-band data scrambling\n    // does the same as innerWrite but without event loop\n    // we have to do it here as single loop steps to not corrupt loop subject\n    // by another writeSync call triggered from _action\n    let chunk: string | Uint8Array | undefined;\n    while (chunk = this._writeBuffer.shift()) {\n      this._action(chunk);\n      const cb = this._callbacks.shift();\n      if (cb) cb();\n    }\n    // reset to avoid reprocessing of chunks with scheduled innerWrite call\n    // stopping scheduled innerWrite by offset > length condition\n    this._pendingData = 0;\n    this._bufferOffset = 0x7FFFFFFF;\n\n    // allow another writeSync to loop\n    this._isSyncWriting = false;\n    this._syncCalls = 0;\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    if (this._pendingData > DISCARD_WATERMARK) {\n      throw new Error('write data discarded, use flow control to avoid losing data');\n    }\n\n    // schedule chunk processing for next event loop run\n    if (!this._writeBuffer.length) {\n      this._bufferOffset = 0;\n      setTimeout(() => this._innerWrite());\n    }\n\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(callback);\n  }\n\n  /**\n   * Inner write call, that enters the sliced chunk processing by timing.\n   *\n   * `lastTime` indicates, when the last _innerWrite call had started.\n   * It is used to aggregate async handler execution under a timeout constraint\n   * effectively lowering the redrawing needs, schematically:\n   *\n   *   macroTask _innerWrite:\n   *     if (Date.now() - (lastTime | 0) < WRITE_TIMEOUT_MS):\n   *        schedule microTask _innerWrite(lastTime)\n   *     else:\n   *        schedule macroTask _innerWrite(0)\n   *\n   *   overall execution order on task queues:\n   *\n   *   macrotasks:  [...]  -->  _innerWrite(0)  -->  [...]  -->  screenUpdate  -->  [...]\n   *         m  t:                    |\n   *         i  a:                  [...]\n   *         c  s:                    |\n   *         r  k:              while < timeout:\n   *         o  s:                _innerWrite(timeout)\n   *\n   * `promiseResult` depicts the promise resolve value of an async handler.\n   * This value gets carried forward through all saved stack states of the\n   * paused parser for proper continuation.\n   *\n   * Note, for pure sync code `lastTime` and `promiseResult` have no meaning.\n   */\n  protected _innerWrite(lastTime: number = 0, promiseResult: boolean = true): void {\n    const startTime = lastTime || Date.now();\n    while (this._writeBuffer.length > this._bufferOffset) {\n      const data = this._writeBuffer[this._bufferOffset];\n      const result = this._action(data, promiseResult);\n      if (result) {\n        /**\n         * If we get a promise as return value, we re-schedule the continuation\n         * as thenable on the promise and exit right away.\n         *\n         * The exit here means, that we block input processing at the current active chunk,\n         * the exact execution position within the chunk is preserved by the saved\n         * stack content in InputHandler and EscapeSequenceParser.\n         *\n         * Resuming happens automatically from that saved stack state.\n         * Also the resolved promise value is passed along the callstack to\n         * `EscapeSequenceParser.parse` to correctly resume the stopped handler loop.\n         *\n         * Exceptions on async handlers will be logged to console async, but do not interrupt\n         * the input processing (continues with next handler at the current input position).\n         */\n\n        /**\n         * If a promise takes long to resolve, we should schedule continuation behind setTimeout.\n         * This might already be too late, if our .then enters really late (executor + prev thens took very long).\n         * This cannot be solved here for the handler itself (it is the handlers responsibility to slice hard work),\n         * but we can at least schedule a screen update as we gain control.\n         */\n        const continuation: (r: boolean) => void = (r: boolean) => Date.now() - startTime >= WRITE_TIMEOUT_MS\n          ? setTimeout(() => this._innerWrite(0, r))\n          : this._innerWrite(startTime, r);\n\n        /**\n         * Optimization considerations:\n         * The continuation above favors FPS over throughput by eval'ing `startTime` on resolve.\n         * This might schedule too many screen updates with bad throughput drops (in case a slow\n         * resolving handler sliced its work properly behind setTimeout calls). We cannot spot\n         * this condition here, also the renderer has no way to spot nonsense updates either.\n         * FIXME: A proper fix for this would track the FPS at the renderer entry level separately.\n         *\n         * If favoring of FPS shows bad throughtput impact, use the following instead. It favors\n         * throughput by eval'ing `startTime` upfront pulling at least one more chunk into the\n         * current microtask queue (executed before setTimeout).\n         */\n        // const continuation: (r: boolean) => void = Date.now() - startTime >= WRITE_TIMEOUT_MS\n        //   ? r => setTimeout(() => this._innerWrite(0, r))\n        //   : r => this._innerWrite(startTime, r);\n\n        // Handle exceptions synchronously to current band position, idea:\n        // 1. spawn a single microtask which we allow to throw hard\n        // 2. spawn a promise immediately resolving to `true`\n        // (executed on the same queue, thus properly aligned before continuation happens)\n        result.catch(err => {\n          qmt(() => {throw err;});\n          return Promise.resolve(false);\n        }).then(continuation);\n        return;\n      }\n\n      const cb = this._callbacks[this._bufferOffset];\n      if (cb) cb();\n      this._bufferOffset++;\n      this._pendingData -= data.length;\n\n      if (Date.now() - startTime >= WRITE_TIMEOUT_MS) {\n        break;\n      }\n    }\n    if (this._writeBuffer.length > this._bufferOffset) {\n      // Allow renderer to catch up before processing the next batch\n      // trim already processed chunks if we are above threshold\n      if (this._bufferOffset > WRITE_BUFFER_LENGTH_THRESHOLD) {\n        this._writeBuffer = this._writeBuffer.slice(this._bufferOffset);\n        this._callbacks = this._callbacks.slice(this._bufferOffset);\n        this._bufferOffset = 0;\n      }\n      setTimeout(() => this._innerWrite());\n    } else {\n      this._writeBuffer.length = 0;\n      this._callbacks.length = 0;\n      this._pendingData = 0;\n      this._bufferOffset = 0;\n    }\n    this._onWriteParsed.fire();\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n\n// 'rgb:' rule - matching: r/g/b | rr/gg/bb | rrr/ggg/bbb | rrrr/gggg/bbbb (hex digits)\nconst RGB_REX = /^([\\da-f])\\/([\\da-f])\\/([\\da-f])$|^([\\da-f]{2})\\/([\\da-f]{2})\\/([\\da-f]{2})$|^([\\da-f]{3})\\/([\\da-f]{3})\\/([\\da-f]{3})$|^([\\da-f]{4})\\/([\\da-f]{4})\\/([\\da-f]{4})$/;\n// '#...' rule - matching any hex digits\nconst HASH_REX = /^[\\da-f]+$/;\n\n/**\n * Parse color spec to RGB values (8 bit per channel).\n * See `man xparsecolor` for details about certain format specifications.\n *\n * Supported formats:\n * - rgb:<red>/<green>/<blue> with <red>, <green>, <blue> in h | hh | hhh | hhhh\n * - #RGB, #RRGGBB, #RRRGGGBBB, #RRRRGGGGBBBB\n *\n * All other formats like rgbi: or device-independent string specifications\n * with float numbering are not supported.\n */\nexport function parseColor(data: string): [number, number, number] | undefined {\n  if (!data) return;\n  // also handle uppercases\n  let low = data.toLowerCase();\n  if (low.indexOf('rgb:') === 0) {\n    // 'rgb:' specifier\n    low = low.slice(4);\n    const m = RGB_REX.exec(low);\n    if (m) {\n      const base = m[1] ? 15 : m[4] ? 255 : m[7] ? 4095 : 65535;\n      return [\n        Math.round(parseInt(m[1] || m[4] || m[7] || m[10], 16) / base * 255),\n        Math.round(parseInt(m[2] || m[5] || m[8] || m[11], 16) / base * 255),\n        Math.round(parseInt(m[3] || m[6] || m[9] || m[12], 16) / base * 255)\n      ];\n    }\n  } else if (low.indexOf('#') === 0) {\n    // '#' specifier\n    low = low.slice(1);\n    if (HASH_REX.exec(low) && [3, 6, 9, 12].includes(low.length)) {\n      const adv = low.length / 3;\n      const result: [number, number, number] = [0, 0, 0];\n      for (let i = 0; i < 3; ++i) {\n        const c = parseInt(low.slice(adv * i, adv * i + adv), 16);\n        result[i] = adv === 1 ? c << 4 : adv === 2 ? c : adv === 3 ? c >> 4 : c >> 8;\n      }\n      return result;\n    }\n  }\n\n  // Named colors are currently not supported due to the large addition to the xterm.js bundle size\n  // they would add. In order to support named colors, we would need some way of optionally loading\n  // additional payloads so startup/download time is not bloated (see #3530).\n}\n\n// pad hex output to requested bit width\nfunction pad(n: number, bits: number): string {\n  const s = n.toString(16);\n  const s2 = s.length < 2 ? '0' + s : s;\n  switch (bits) {\n    case 4:\n      return s[0];\n    case 8:\n      return s2;\n    case 12:\n      return (s2 + s2).slice(0, 3);\n    default:\n      return s2 + s2;\n  }\n}\n\n/**\n * Convert a given color to rgb:../../.. string of `bits` depth.\n */\nexport function toRgbString(color: [number, number, number], bits: number = 16): string {\n  const [r, g, b] = color;\n  return `rgb:${pad(r, bits)}/${pad(g, bits)}/${pad(b, bits)}`;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Internal states of EscapeSequenceParser.\n */\nexport const enum ParserState {\n  GROUND = 0,\n  ESCAPE = 1,\n  ESCAPE_INTERMEDIATE = 2,\n  CSI_ENTRY = 3,\n  CSI_PARAM = 4,\n  CSI_INTERMEDIATE = 5,\n  CSI_IGNORE = 6,\n  SOS_PM_APC_STRING = 7,\n  OSC_STRING = 8,\n  DCS_ENTRY = 9,\n  DCS_PARAM = 10,\n  DCS_IGNORE = 11,\n  DCS_INTERMEDIATE = 12,\n  DCS_PASSTHROUGH = 13\n}\n\n/**\n* Internal actions of EscapeSequenceParser.\n*/\nexport const enum ParserAction {\n  IGNORE = 0,\n  ERROR = 1,\n  PRINT = 2,\n  EXECUTE = 3,\n  OSC_START = 4,\n  OSC_PUT = 5,\n  OSC_END = 6,\n  CSI_DISPATCH = 7,\n  PARAM = 8,\n  COLLECT = 9,\n  ESC_DISPATCH = 10,\n  CLEAR = 11,\n  DCS_HOOK = 12,\n  DCS_PUT = 13,\n  DCS_UNHOOK = 14\n}\n\n/**\n * Internal states of OscParser.\n */\nexport const enum OscState {\n  START = 0,\n  ID = 1,\n  PAYLOAD = 2,\n  ABORT = 3\n}\n\n// payload limit for OSC and DCS\nexport const PAYLOAD_LIMIT = 10000000;\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { IDcsHandler, IParams, IHandlerCollection, IDcsParser, DcsFallbackHandlerType, ISubParserStackState } from 'common/parser/Types';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { Params } from 'common/parser/Params';\nimport { PAYLOAD_LIMIT } from 'common/parser/Constants';\n\nconst EMPTY_HANDLERS: IDcsHandler[] = [];\n\nexport class DcsParser implements IDcsParser {\n  private _handlers: IHandlerCollection<IDcsHandler> = Object.create(null);\n  private _active: IDcsHandler[] = EMPTY_HANDLERS;\n  private _ident: number = 0;\n  private _handlerFb: DcsFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public registerHandler(ident: number, handler: IDcsHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n\n  public setHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public reset(): void {\n    // force cleanup leftover handlers\n    if (this._active.length) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].unhook(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n\n  public hook(ident: number, params: IParams): void {\n    // always reset leftover handlers\n    this.reset();\n    this._ident = ident;\n    this._active = this._handlers[ident] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'HOOK', params);\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].hook(params);\n      }\n    }\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public unhook(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'UNHOOK', success);\n    } else {\n      let handlerResult: boolean | Promise<boolean> = false;\n      let j = this._active.length - 1;\n      let fallThrough = false;\n      if (this._stack.paused) {\n        j = this._stack.loopPosition - 1;\n        handlerResult = promiseResult;\n        fallThrough = this._stack.fallThrough;\n        this._stack.paused = false;\n      }\n      if (!fallThrough && handlerResult === false) {\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].unhook(success);\n          if (handlerResult === true) {\n            break;\n          } else if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = false;\n            return handlerResult;\n          }\n        }\n        j--;\n      }\n      // cleanup left over handlers (fallThrough for async)\n      for (; j >= 0; j--) {\n        handlerResult = this._active[j].unhook(false);\n        if (handlerResult instanceof Promise) {\n          this._stack.paused = true;\n          this._stack.loopPosition = j;\n          this._stack.fallThrough = true;\n          return handlerResult;\n        }\n      }\n    }\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n}\n\n// predefine empty params as [0] (ZDM)\nconst EMPTY_PARAMS = new Params();\nEMPTY_PARAMS.addParam(0);\n\n/**\n * Convenient class to create a DCS handler from a single callback function.\n * Note: The payload is currently limited to 50 MB (hardcoded).\n */\nexport class DcsHandler implements IDcsHandler {\n  private _data = '';\n  private _params: IParams = EMPTY_PARAMS;\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string, params: IParams) => boolean | Promise<boolean>) { }\n\n  public hook(params: IParams): void {\n    // since we need to preserve params until `unhook`, we have to clone it\n    // (only borrowed from parser and spans multiple parser states)\n    // perf optimization:\n    // clone only, if we have non empty params, otherwise stick with default\n    this._params = (params.length > 1 || params.params[0]) ? params.clone() : EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public unhook(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data, this._params);\n      if (ret instanceof Promise) {\n        // need to hold data and params until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._params = EMPTY_PARAMS;\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._params = EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IOscHandler, IHandlerCollection, CsiHandlerType, OscFallbackHandlerType, IOscParser, EscHandlerType, IDcsParser, DcsFallbackHandlerType, IFunctionIdentifier, ExecuteFallbackHandlerType, CsiFallbackHandlerType, EscFallbackHandlerType, PrintHandlerType, PrintFallbackHandlerType, ExecuteHandlerType, IParserStackState, ParserStackType, ResumableHandlersType } from 'common/parser/Types';\nimport { ParserState, ParserAction } from 'common/parser/Constants';\nimport { Disposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { fill } from 'common/TypedArrayUtils';\nimport { Params } from 'common/parser/Params';\nimport { OscParser } from 'common/parser/OscParser';\nimport { DcsParser } from 'common/parser/DcsParser';\n\n/**\n * Table values are generated like this:\n *    index:  currentState << TableValue.INDEX_STATE_SHIFT | charCode\n *    value:  action << TableValue.TRANSITION_ACTION_SHIFT | nextState\n */\nconst enum TableAccess {\n  TRANSITION_ACTION_SHIFT = 4,\n  TRANSITION_STATE_MASK = 15,\n  INDEX_STATE_SHIFT = 8\n}\n\n/**\n * Transition table for EscapeSequenceParser.\n */\nexport class TransitionTable {\n  public table: Uint8Array;\n\n  constructor(length: number) {\n    this.table = new Uint8Array(length);\n  }\n\n  /**\n   * Set default transition.\n   * @param action default action\n   * @param next default next state\n   */\n  public setDefault(action: ParserAction, next: ParserState): void {\n    fill(this.table, action << TableAccess.TRANSITION_ACTION_SHIFT | next);\n  }\n\n  /**\n   * Add a transition to the transition table.\n   * @param code input character code\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public add(code: number, state: ParserState, action: ParserAction, next: ParserState): void {\n    this.table[state << TableAccess.INDEX_STATE_SHIFT | code] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n  }\n\n  /**\n   * Add transitions for multiple input character codes.\n   * @param codes input character code array\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public addMany(codes: number[], state: ParserState, action: ParserAction, next: ParserState): void {\n    for (let i = 0; i < codes.length; i++) {\n      this.table[state << TableAccess.INDEX_STATE_SHIFT | codes[i]] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n    }\n  }\n}\n\n\n// Pseudo-character placeholder for printable non-ascii characters (unicode).\nconst NON_ASCII_PRINTABLE = 0xA0;\n\n\n/**\n * VT500 compatible transition table.\n * Taken from https://vt100.net/emu/dec_ansi_parser.\n */\nexport const VT500_TRANSITION_TABLE = (function (): TransitionTable {\n  const table: TransitionTable = new TransitionTable(4095);\n\n  // range macro for byte\n  const BYTE_VALUES = 256;\n  const blueprint = Array.apply(null, Array(BYTE_VALUES)).map((unused: any, i: number) => i);\n  const r = (start: number, end: number): number[] => blueprint.slice(start, end);\n\n  // Default definitions.\n  const PRINTABLES = r(0x20, 0x7f); // 0x20 (SP) included, 0x7F (DEL) excluded\n  const EXECUTABLES = r(0x00, 0x18);\n  EXECUTABLES.push(0x19);\n  EXECUTABLES.push.apply(EXECUTABLES, r(0x1c, 0x20));\n\n  const states: number[] = r(ParserState.GROUND, ParserState.DCS_PASSTHROUGH + 1);\n  let state: any;\n\n  // set default transition\n  table.setDefault(ParserAction.ERROR, ParserState.GROUND);\n  // printables\n  table.addMany(PRINTABLES, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  // global anywhere rules\n  for (state in states) {\n    table.addMany([0x18, 0x1a, 0x99, 0x9a], state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x80, 0x90), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x90, 0x98), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.add(0x9c, state, ParserAction.IGNORE, ParserState.GROUND); // ST as terminator\n    table.add(0x1b, state, ParserAction.CLEAR, ParserState.ESCAPE);  // ESC\n    table.add(0x9d, state, ParserAction.OSC_START, ParserState.OSC_STRING);  // OSC\n    table.addMany([0x98, 0x9e, 0x9f], state, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n    table.add(0x9b, state, ParserAction.CLEAR, ParserState.CSI_ENTRY);  // CSI\n    table.add(0x90, state, ParserAction.CLEAR, ParserState.DCS_ENTRY);  // DCS\n  }\n  // rules for executables and 7f\n  table.addMany(EXECUTABLES, ParserState.GROUND, ParserAction.EXECUTE, ParserState.GROUND);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE, ParserAction.EXECUTE, ParserState.ESCAPE);\n  table.add(0x7f, ParserState.ESCAPE, ParserAction.IGNORE, ParserState.ESCAPE);\n  table.addMany(EXECUTABLES, ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  table.addMany(EXECUTABLES, ParserState.CSI_ENTRY, ParserAction.EXECUTE, ParserState.CSI_ENTRY);\n  table.add(0x7f, ParserState.CSI_ENTRY, ParserAction.IGNORE, ParserState.CSI_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.CSI_PARAM, ParserAction.EXECUTE, ParserState.CSI_PARAM);\n  table.add(0x7f, ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_PARAM);\n  table.addMany(EXECUTABLES, ParserState.CSI_IGNORE, ParserAction.EXECUTE, ParserState.CSI_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.CSI_INTERMEDIATE, ParserAction.EXECUTE, ParserState.CSI_INTERMEDIATE);\n  table.add(0x7f, ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE_INTERMEDIATE, ParserAction.EXECUTE, ParserState.ESCAPE_INTERMEDIATE);\n  table.add(0x7f, ParserState.ESCAPE_INTERMEDIATE, ParserAction.IGNORE, ParserState.ESCAPE_INTERMEDIATE);\n  // osc\n  table.add(0x5d, ParserState.ESCAPE, ParserAction.OSC_START, ParserState.OSC_STRING);\n  table.addMany(PRINTABLES, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(0x7f, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.addMany([0x9c, 0x1b, 0x18, 0x1a, 0x07], ParserState.OSC_STRING, ParserAction.OSC_END, ParserState.GROUND);\n  table.addMany(r(0x1c, 0x20), ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  // sos/pm/apc does nothing\n  table.addMany([0x58, 0x5e, 0x5f], ParserState.ESCAPE, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(PRINTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(EXECUTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.add(0x9c, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.GROUND);\n  table.add(0x7f, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  // csi entries\n  table.add(0x5b, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.CSI_ENTRY);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_ENTRY, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_ENTRY, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_PARAM, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_PARAM, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x20, 0x40), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(0x7f, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_INTERMEDIATE, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_INTERMEDIATE, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_PARAM, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  // esc_intermediate\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE_INTERMEDIATE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x30, 0x7f), ParserState.ESCAPE_INTERMEDIATE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x50), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x51, 0x58), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany([0x59, 0x5a, 0x5c], ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x60, 0x7f), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  // dcs entry\n  table.add(0x50, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.DCS_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.add(0x7f, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_ENTRY, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_PARAM);\n  table.addMany(EXECUTABLES, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x80), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.add(0x7f, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_PARAM, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_PARAM, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.add(0x7f, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_INTERMEDIATE, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_INTERMEDIATE, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_PARAM, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_ENTRY, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(EXECUTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.addMany(PRINTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.add(0x7f, ParserState.DCS_PASSTHROUGH, ParserAction.IGNORE, ParserState.DCS_PASSTHROUGH);\n  table.addMany([0x1b, 0x9c, 0x18, 0x1a], ParserState.DCS_PASSTHROUGH, ParserAction.DCS_UNHOOK, ParserState.GROUND);\n  // special handling of unicode chars\n  table.add(NON_ASCII_PRINTABLE, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  table.add(NON_ASCII_PRINTABLE, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(NON_ASCII_PRINTABLE, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  return table;\n})();\n\n\n/**\n * EscapeSequenceParser.\n * This class implements the ANSI/DEC compatible parser described by\n * Paul Williams (https://vt100.net/emu/dec_ansi_parser).\n *\n * To implement custom ANSI compliant escape sequences it is not needed to\n * alter this parser, instead consider registering a custom handler.\n * For non ANSI compliant sequences change the transition table with\n * the optional `transitions` constructor argument and\n * reimplement the `parse` method.\n *\n * This parser is currently hardcoded to operate in ZDM (Zero Default Mode)\n * as suggested by the original parser, thus empty parameters are set to 0.\n * This this is not in line with the latest ECMA-48 specification\n * (ZDM was part of the early specs and got completely removed later on).\n *\n * Other than the original parser from vt100.net this parser supports\n * sub parameters in digital parameters separated by colons. Empty sub parameters\n * are set to -1 (no ZDM for sub parameters).\n *\n * About prefix and intermediate bytes:\n * This parser follows the assumptions of the vt100.net parser with these restrictions:\n * - only one prefix byte is allowed as first parameter byte, byte range 0x3c .. 0x3f\n * - max. two intermediates are respected, byte range 0x20 .. 0x2f\n * Note that this is not in line with ECMA-48 which does not limit either of those.\n * Furthermore ECMA-48 allows the prefix byte range at any param byte position. Currently\n * there are no known sequences that follow the broader definition of the specification.\n *\n * TODO: implement error recovery hook via error handler return values\n */\nexport class EscapeSequenceParser extends Disposable implements IEscapeSequenceParser {\n  public initialState: number;\n  public currentState: number;\n  public precedingCodepoint: number;\n\n  // buffers over several parse calls\n  protected _params: Params;\n  protected _collect: number;\n\n  // handler lookup containers\n  protected _printHandler: PrintHandlerType;\n  protected _executeHandlers: { [flag: number]: ExecuteHandlerType };\n  protected _csiHandlers: IHandlerCollection<CsiHandlerType>;\n  protected _escHandlers: IHandlerCollection<EscHandlerType>;\n  protected _oscParser: IOscParser;\n  protected _dcsParser: IDcsParser;\n  protected _errorHandler: (state: IParsingState) => IParsingState;\n\n  // fallback handlers\n  protected _printHandlerFb: PrintFallbackHandlerType;\n  protected _executeHandlerFb: ExecuteFallbackHandlerType;\n  protected _csiHandlerFb: CsiFallbackHandlerType;\n  protected _escHandlerFb: EscFallbackHandlerType;\n  protected _errorHandlerFb: (state: IParsingState) => IParsingState;\n\n  // parser stack save for async handler support\n  protected _parseStack: IParserStackState = {\n    state: ParserStackType.NONE,\n    handlers: [],\n    handlerPos: 0,\n    transition: 0,\n    chunkPos: 0\n  };\n\n  constructor(\n    protected readonly _transitions: TransitionTable = VT500_TRANSITION_TABLE\n  ) {\n    super();\n\n    this.initialState = ParserState.GROUND;\n    this.currentState = this.initialState;\n    this._params = new Params(); // defaults to 32 storable params/subparams\n    this._params.addParam(0);    // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n\n    // set default fallback handlers and handler lookup containers\n    this._printHandlerFb = (data, start, end): void => { };\n    this._executeHandlerFb = (code: number): void => { };\n    this._csiHandlerFb = (ident: number, params: IParams): void => { };\n    this._escHandlerFb = (ident: number): void => { };\n    this._errorHandlerFb = (state: IParsingState): IParsingState => state;\n    this._printHandler = this._printHandlerFb;\n    this._executeHandlers = Object.create(null);\n    this._csiHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this._oscParser = new OscParser();\n    this._dcsParser = new DcsParser();\n    this._errorHandler = this._errorHandlerFb;\n\n    // swallow 7bit ST (ESC+\\)\n    this.registerEscHandler({ final: '\\\\' }, () => true);\n  }\n\n  protected _identifier(id: IFunctionIdentifier, finalRange: number[] = [0x40, 0x7e]): number {\n    let res = 0;\n    if (id.prefix) {\n      if (id.prefix.length > 1) {\n        throw new Error('only one byte as prefix supported');\n      }\n      res = id.prefix.charCodeAt(0);\n      if (res && 0x3c > res || res > 0x3f) {\n        throw new Error('prefix must be in range 0x3c .. 0x3f');\n      }\n    }\n    if (id.intermediates) {\n      if (id.intermediates.length > 2) {\n        throw new Error('only two bytes as intermediates are supported');\n      }\n      for (let i = 0; i < id.intermediates.length; ++i) {\n        const intermediate = id.intermediates.charCodeAt(i);\n        if (0x20 > intermediate || intermediate > 0x2f) {\n          throw new Error('intermediate must be in range 0x20 .. 0x2f');\n        }\n        res <<= 8;\n        res |= intermediate;\n      }\n    }\n    if (id.final.length !== 1) {\n      throw new Error('final must be a single byte');\n    }\n    const finalCode = id.final.charCodeAt(0);\n    if (finalRange[0] > finalCode || finalCode > finalRange[1]) {\n      throw new Error(`final must be in range ${finalRange[0]} .. ${finalRange[1]}`);\n    }\n    res <<= 8;\n    res |= finalCode;\n\n    return res;\n  }\n\n  public identToString(ident: number): string {\n    const res: string[] = [];\n    while (ident) {\n      res.push(String.fromCharCode(ident & 0xFF));\n      ident >>= 8;\n    }\n    return res.reverse().join('');\n  }\n\n  public dispose(): void {\n    this._csiHandlers = Object.create(null);\n    this._executeHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this._oscParser.dispose();\n    this._dcsParser.dispose();\n  }\n\n  public setPrintHandler(handler: PrintHandlerType): void {\n    this._printHandler = handler;\n  }\n  public clearPrintHandler(): void {\n    this._printHandler = this._printHandlerFb;\n  }\n\n  public registerEscHandler(id: IFunctionIdentifier, handler: EscHandlerType): IDisposable {\n    const ident = this._identifier(id, [0x30, 0x7e]);\n    if (this._escHandlers[ident] === undefined) {\n      this._escHandlers[ident] = [];\n    }\n    const handlerList = this._escHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearEscHandler(id: IFunctionIdentifier): void {\n    if (this._escHandlers[this._identifier(id, [0x30, 0x7e])]) delete this._escHandlers[this._identifier(id, [0x30, 0x7e])];\n  }\n  public setEscHandlerFallback(handler: EscFallbackHandlerType): void {\n    this._escHandlerFb = handler;\n  }\n\n  public setExecuteHandler(flag: string, handler: ExecuteHandlerType): void {\n    this._executeHandlers[flag.charCodeAt(0)] = handler;\n  }\n  public clearExecuteHandler(flag: string): void {\n    if (this._executeHandlers[flag.charCodeAt(0)]) delete this._executeHandlers[flag.charCodeAt(0)];\n  }\n  public setExecuteHandlerFallback(handler: ExecuteFallbackHandlerType): void {\n    this._executeHandlerFb = handler;\n  }\n\n  public registerCsiHandler(id: IFunctionIdentifier, handler: CsiHandlerType): IDisposable {\n    const ident = this._identifier(id);\n    if (this._csiHandlers[ident] === undefined) {\n      this._csiHandlers[ident] = [];\n    }\n    const handlerList = this._csiHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearCsiHandler(id: IFunctionIdentifier): void {\n    if (this._csiHandlers[this._identifier(id)]) delete this._csiHandlers[this._identifier(id)];\n  }\n  public setCsiHandlerFallback(callback: (ident: number, params: IParams) => void): void {\n    this._csiHandlerFb = callback;\n  }\n\n  public registerDcsHandler(id: IFunctionIdentifier, handler: IDcsHandler): IDisposable {\n    return this._dcsParser.registerHandler(this._identifier(id), handler);\n  }\n  public clearDcsHandler(id: IFunctionIdentifier): void {\n    this._dcsParser.clearHandler(this._identifier(id));\n  }\n  public setDcsHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._dcsParser.setHandlerFallback(handler);\n  }\n\n  public registerOscHandler(ident: number, handler: IOscHandler): IDisposable {\n    return this._oscParser.registerHandler(ident, handler);\n  }\n  public clearOscHandler(ident: number): void {\n    this._oscParser.clearHandler(ident);\n  }\n  public setOscHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._oscParser.setHandlerFallback(handler);\n  }\n\n  public setErrorHandler(callback: (state: IParsingState) => IParsingState): void {\n    this._errorHandler = callback;\n  }\n  public clearErrorHandler(): void {\n    this._errorHandler = this._errorHandlerFb;\n  }\n\n  /**\n   * Reset parser to initial values.\n   *\n   * This can also be used to lift the improper continuation error condition\n   * when dealing with async handlers. Use this only as a last resort to silence\n   * that error when the terminal has no pending data to be processed. Note that\n   * the interrupted async handler might continue its work in the future messing\n   * up the terminal state even further.\n   */\n  public reset(): void {\n    this.currentState = this.initialState;\n    this._oscParser.reset();\n    this._dcsParser.reset();\n    this._params.reset();\n    this._params.addParam(0); // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n    // abort pending continuation from async handler\n    // Here the RESET type indicates, that the next parse call will\n    // ignore any saved stack, instead continues sync with next codepoint from GROUND\n    if (this._parseStack.state !== ParserStackType.NONE) {\n      this._parseStack.state = ParserStackType.RESET;\n      this._parseStack.handlers = []; // also release handlers ref\n    }\n  }\n\n  /**\n   * Async parse support.\n   */\n  protected _preserveStack(\n    state: ParserStackType,\n    handlers: ResumableHandlersType,\n    handlerPos: number,\n    transition: number,\n    chunkPos: number\n  ): void {\n    this._parseStack.state = state;\n    this._parseStack.handlers = handlers;\n    this._parseStack.handlerPos = handlerPos;\n    this._parseStack.transition = transition;\n    this._parseStack.chunkPos = chunkPos;\n  }\n\n  /**\n   * Parse UTF32 codepoints in `data` up to `length`.\n   *\n   * Note: For several actions with high data load the parsing is optimized\n   * by using local read ahead loops with hardcoded conditions to\n   * avoid costly table lookups. Make sure that any change of table values\n   * will be reflected in the loop conditions as well and vice versa.\n   * Affected states/actions:\n   * - GROUND:PRINT\n   * - CSI_PARAM:PARAM\n   * - DCS_PARAM:PARAM\n   * - OSC_STRING:OSC_PUT\n   * - DCS_PASSTHROUGH:DCS_PUT\n   *\n   * Note on asynchronous handler support:\n   * Any handler returning a promise will be treated as asynchronous.\n   * To keep the in-band blocking working for async handlers, `parse` pauses execution,\n   * creates a stack save and returns the promise to the caller.\n   * For proper continuation of the paused state it is important\n   * to await the promise resolving. On resolve the parse must be repeated\n   * with the same chunk of data and the resolved value in `promiseResult`\n   * until no promise is returned.\n   *\n   * Important: With only sync handlers defined, parsing is completely synchronous as well.\n   * As soon as an async handler is involved, synchronous parsing is not possible anymore.\n   *\n   * Boilerplate for proper parsing of multiple chunks with async handlers:\n   *\n   * ```typescript\n   * async function parseMultipleChunks(chunks: Uint32Array[]): Promise<void> {\n   *   for (const chunk of chunks) {\n   *     let result: void | Promise<boolean>;\n   *     let prev: boolean | undefined;\n   *     while (result = parser.parse(chunk, chunk.length, prev)) {\n   *       prev = await result;\n   *     }\n   *   }\n   *   // finished parsing all chunks...\n   * }\n   * ```\n   */\n  public parse(data: Uint32Array, length: number, promiseResult?: boolean): void | Promise<boolean> {\n    let code = 0;\n    let transition = 0;\n    let start = 0;\n    let handlerResult: void | boolean | Promise<boolean>;\n\n    // resume from async handler\n    if (this._parseStack.state) {\n      // allow sync parser reset even in continuation mode\n      // Note: can be used to recover parser from improper continuation error below\n      if (this._parseStack.state === ParserStackType.RESET) {\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1; // continue with next codepoint in GROUND\n      } else {\n        if (promiseResult === undefined || this._parseStack.state === ParserStackType.FAIL) {\n          /**\n           * Reject further parsing on improper continuation after pausing.\n           * This is a really bad condition with screwed up execution order and prolly messed up\n           * terminal state, therefore we exit hard with an exception and reject any further parsing.\n           *\n           * Note: With `Terminal.write` usage this exception should never occur, as the top level\n           * calls are guaranteed to handle async conditions properly. If you ever encounter this\n           * exception in your terminal integration it indicates, that you injected data chunks to\n           * `InputHandler.parse` or `EscapeSequenceParser.parse` synchronously without waiting for\n           * continuation of a running async handler.\n           *\n           * It is possible to get rid of this error by calling `reset`. But dont rely on that,\n           * as the pending async handler still might mess up the terminal later. Instead fix the faulty\n           * async handling, so this error will not be thrown anymore.\n           */\n          this._parseStack.state = ParserStackType.FAIL;\n          throw new Error('improper continuation due to previous async handler, giving up parsing');\n        }\n\n        // we have to resume the old handler loop if:\n        // - return value of the promise was `false`\n        // - handlers are not exhausted yet\n        const handlers = this._parseStack.handlers;\n        let handlerPos = this._parseStack.handlerPos - 1;\n        switch (this._parseStack.state) {\n          case ParserStackType.CSI:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as CsiHandlerType[])[handlerPos](this._params);\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.ESC:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as EscHandlerType[])[handlerPos]();\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.DCS:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n          case ParserStackType.OSC:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n        }\n        // cleanup before continuing with the main sync loop\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1;\n        this.precedingCodepoint = 0;\n        this.currentState = this._parseStack.transition & TableAccess.TRANSITION_STATE_MASK;\n      }\n    }\n\n    // continue with main sync loop\n\n    // process input string\n    for (let i = start; i < length; ++i) {\n      code = data[i];\n\n      // normal transition & action lookup\n      transition = this._transitions.table[this.currentState << TableAccess.INDEX_STATE_SHIFT | (code < 0xa0 ? code : NON_ASCII_PRINTABLE)];\n      switch (transition >> TableAccess.TRANSITION_ACTION_SHIFT) {\n        case ParserAction.PRINT:\n          // read ahead with loop unrolling\n          // Note: 0x20 (SP) is included, 0x7F (DEL) is excluded\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.EXECUTE:\n          if (this._executeHandlers[code]) this._executeHandlers[code]();\n          else this._executeHandlerFb(code);\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.IGNORE:\n          break;\n        case ParserAction.ERROR:\n          const inject: IParsingState = this._errorHandler(\n            {\n              position: i,\n              code,\n              currentState: this.currentState,\n              collect: this._collect,\n              params: this._params,\n              abort: false\n            });\n          if (inject.abort) return;\n          // inject values: currently not implemented\n          break;\n        case ParserAction.CSI_DISPATCH:\n          // Trigger CSI Handler\n          const handlers = this._csiHandlers[this._collect << 8 | code];\n          let j = handlers ? handlers.length - 1 : -1;\n          for (; j >= 0; j--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlers[j](this._params);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.CSI, handlers, j, transition, i);\n              return handlerResult;\n            }\n          }\n          if (j < 0) {\n            this._csiHandlerFb(this._collect << 8 | code, this._params);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.PARAM:\n          // inner loop: digits (0x30 - 0x39) and ; (0x3b) and : (0x3a)\n          do {\n            switch (code) {\n              case 0x3b:\n                this._params.addParam(0);  // ZDM\n                break;\n              case 0x3a:\n                this._params.addSubParam(-1);\n                break;\n              default:  // 0x30 - 0x39\n                this._params.addDigit(code - 48);\n            }\n          } while (++i < length && (code = data[i]) > 0x2f && code < 0x3c);\n          i--;\n          break;\n        case ParserAction.COLLECT:\n          this._collect <<= 8;\n          this._collect |= code;\n          break;\n        case ParserAction.ESC_DISPATCH:\n          const handlersEsc = this._escHandlers[this._collect << 8 | code];\n          let jj = handlersEsc ? handlersEsc.length - 1 : -1;\n          for (; jj >= 0; jj--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlersEsc[jj]();\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.ESC, handlersEsc, jj, transition, i);\n              return handlerResult;\n            }\n          }\n          if (jj < 0) {\n            this._escHandlerFb(this._collect << 8 | code);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.CLEAR:\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          break;\n        case ParserAction.DCS_HOOK:\n          this._dcsParser.hook(this._collect << 8 | code, this._params);\n          break;\n        case ParserAction.DCS_PUT:\n          // inner loop - exit DCS_PUT: 0x18, 0x1a, 0x1b, 0x7f, 0x80 - 0x9f\n          // unhook triggered by: 0x1b, 0x9c (success) and 0x18, 0x1a (abort)\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) === 0x18 || code === 0x1a || code === 0x1b || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._dcsParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.DCS_UNHOOK:\n          handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.DCS, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.OSC_START:\n          this._oscParser.start();\n          break;\n        case ParserAction.OSC_PUT:\n          // inner loop: 0x20 (SP) included, 0x7F (DEL) included\n          for (let j = i + 1; ; j++) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._oscParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.OSC_END:\n          handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.OSC, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n      }\n      this.currentState = transition & TableAccess.TRANSITION_STATE_MASK;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOscHandler, IHandlerCollection, OscFallbackHandlerType, IOscParser, ISubParserStackState } from 'common/parser/Types';\nimport { OscState, PAYLOAD_LIMIT } from 'common/parser/Constants';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { IDisposable } from 'common/Types';\n\nconst EMPTY_HANDLERS: IOscHandler[] = [];\n\nexport class OscParser implements IOscParser {\n  private _state = OscState.START;\n  private _active = EMPTY_HANDLERS;\n  private _id = -1;\n  private _handlers: IHandlerCollection<IOscHandler> = Object.create(null);\n  private _handlerFb: OscFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public registerHandler(ident: number, handler: IOscHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n  public setHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public reset(): void {\n    // force cleanup handlers if payload was already sent\n    if (this._state === OscState.PAYLOAD) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].end(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n\n  private _start(): void {\n    this._active = this._handlers[this._id] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'START');\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].start();\n      }\n    }\n  }\n\n  private _put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public start(): void {\n    // always reset leftover handlers\n    this.reset();\n    this._state = OscState.ID;\n  }\n\n  /**\n   * Put data to current OSC command.\n   * Expects the identifier of the OSC command in the form\n   * OSC id ; payload ST/BEL\n   * Payload chunks are not further processed and get\n   * directly passed to the handlers.\n   */\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._state === OscState.ABORT) {\n      return;\n    }\n    if (this._state === OscState.ID) {\n      while (start < end) {\n        const code = data[start++];\n        if (code === 0x3b) {\n          this._state = OscState.PAYLOAD;\n          this._start();\n          break;\n        }\n        if (code < 0x30 || 0x39 < code) {\n          this._state = OscState.ABORT;\n          return;\n        }\n        if (this._id === -1) {\n          this._id = 0;\n        }\n        this._id = this._id * 10 + code - 48;\n      }\n    }\n    if (this._state === OscState.PAYLOAD && end - start > 0) {\n      this._put(data, start, end);\n    }\n  }\n\n  /**\n   * Indicates end of an OSC command.\n   * Whether the OSC got aborted or finished normally\n   * is indicated by `success`.\n   */\n  public end(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (this._state === OscState.START) {\n      return;\n    }\n    // do nothing if command was faulty\n    if (this._state !== OscState.ABORT) {\n      // if we are still in ID state and get an early end\n      // means that the command has no payload thus we still have\n      // to announce START and send END right after\n      if (this._state === OscState.ID) {\n        this._start();\n      }\n\n      if (!this._active.length) {\n        this._handlerFb(this._id, 'END', success);\n      } else {\n        let handlerResult: boolean | Promise<boolean> = false;\n        let j = this._active.length - 1;\n        let fallThrough = false;\n        if (this._stack.paused) {\n          j = this._stack.loopPosition - 1;\n          handlerResult = promiseResult;\n          fallThrough = this._stack.fallThrough;\n          this._stack.paused = false;\n        }\n        if (!fallThrough && handlerResult === false) {\n          for (; j >= 0; j--) {\n            handlerResult = this._active[j].end(success);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._stack.paused = true;\n              this._stack.loopPosition = j;\n              this._stack.fallThrough = false;\n              return handlerResult;\n            }\n          }\n          j--;\n        }\n        // cleanup left over handlers\n        // we always have to call .end for proper cleanup,\n        // here we use `success` to indicate whether a handler should execute\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].end(false);\n          if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = true;\n            return handlerResult;\n          }\n        }\n      }\n\n    }\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n}\n\n/**\n * Convenient class to allow attaching string based handler functions\n * as OSC handlers.\n */\nexport class OscHandler implements IOscHandler {\n  private _data = '';\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string) => boolean | Promise<boolean>) { }\n\n  public start(): void {\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public end(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data);\n      if (ret instanceof Promise) {\n        // need to hold data until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IParams, ParamsArray } from 'common/parser/Types';\n\n// max value supported for a single param/subparam (clamped to positive int32 range)\nconst MAX_VALUE = 0x7FFFFFFF;\n// max allowed subparams for a single sequence (hardcoded limitation)\nconst MAX_SUBPARAMS = 256;\n\n/**\n * Params storage class.\n * This type is used by the parser to accumulate sequence parameters and sub parameters\n * and transmit them to the input handler actions.\n *\n * NOTES:\n *  - params object for action handlers is borrowed, use `.toArray` or `.clone` to get a copy\n *  - never read beyond `params.length - 1` (likely to contain arbitrary data)\n *  - `.getSubParams` returns a borrowed typed array, use `.getSubParamsAll` for cloned sub params\n *  - hardcoded limitations:\n *    - max. value for a single (sub) param is 2^31 - 1 (greater values are clamped to that)\n *    - max. 256 sub params possible\n *    - negative values are not allowed beside -1 (placeholder for default value)\n *\n * About ZDM (Zero Default Mode):\n * ZDM is not orchestrated by this class. If the parser is in ZDM,\n * it should add 0 for empty params, otherwise -1. This does not apply\n * to subparams, empty subparams should always be added with -1.\n */\nexport class Params implements IParams {\n  // params store and length\n  public params: Int32Array;\n  public length: number;\n\n  // sub params store and length\n  protected _subParams: Int32Array;\n  protected _subParamsLength: number;\n\n  // sub params offsets from param: param idx --> [start, end] offset\n  private _subParamsIdx: Uint16Array;\n  private _rejectDigits: boolean;\n  private _rejectSubDigits: boolean;\n  private _digitIsSub: boolean;\n\n  /**\n   * Create a `Params` type from JS array representation.\n   */\n  public static fromArray(values: ParamsArray): Params {\n    const params = new Params();\n    if (!values.length) {\n      return params;\n    }\n    // skip leading sub params\n    for (let i = (Array.isArray(values[0])) ? 1 : 0; i < values.length; ++i) {\n      const value = values[i];\n      if (Array.isArray(value)) {\n        for (let k = 0; k < value.length; ++k) {\n          params.addSubParam(value[k]);\n        }\n      } else {\n        params.addParam(value);\n      }\n    }\n    return params;\n  }\n\n  /**\n   * @param maxLength max length of storable parameters\n   * @param maxSubParamsLength max length of storable sub parameters\n   */\n  constructor(public maxLength: number = 32, public maxSubParamsLength: number = 32) {\n    if (maxSubParamsLength > MAX_SUBPARAMS) {\n      throw new Error('maxSubParamsLength must not be greater than 256');\n    }\n    this.params = new Int32Array(maxLength);\n    this.length = 0;\n    this._subParams = new Int32Array(maxSubParamsLength);\n    this._subParamsLength = 0;\n    this._subParamsIdx = new Uint16Array(maxLength);\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Clone object.\n   */\n  public clone(): Params {\n    const newParams = new Params(this.maxLength, this.maxSubParamsLength);\n    newParams.params.set(this.params);\n    newParams.length = this.length;\n    newParams._subParams.set(this._subParams);\n    newParams._subParamsLength = this._subParamsLength;\n    newParams._subParamsIdx.set(this._subParamsIdx);\n    newParams._rejectDigits = this._rejectDigits;\n    newParams._rejectSubDigits = this._rejectSubDigits;\n    newParams._digitIsSub = this._digitIsSub;\n    return newParams;\n  }\n\n  /**\n   * Get a JS array representation of the current parameters and sub parameters.\n   * The array is structured as follows:\n   *    sequence: \"1;2:3:4;5::6\"\n   *    array   : [1, 2, [3, 4], 5, [-1, 6]]\n   */\n  public toArray(): ParamsArray {\n    const res: ParamsArray = [];\n    for (let i = 0; i < this.length; ++i) {\n      res.push(this.params[i]);\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        res.push(Array.prototype.slice.call(this._subParams, start, end));\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Reset to initial empty state.\n   */\n  public reset(): void {\n    this.length = 0;\n    this._subParamsLength = 0;\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Add a parameter value.\n   * `Params` only stores up to `maxLength` parameters, any later\n   * parameter will be ignored.\n   * Note: VT devices only stored up to 16 values, xterm seems to\n   * store up to 30.\n   */\n  public addParam(value: number): void {\n    this._digitIsSub = false;\n    if (this.length >= this.maxLength) {\n      this._rejectDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParamsIdx[this.length] = this._subParamsLength << 8 | this._subParamsLength;\n    this.params[this.length++] = value > MAX_VALUE ? MAX_VALUE : value;\n  }\n\n  /**\n   * Add a sub parameter value.\n   * The sub parameter is automatically associated with the last parameter value.\n   * Thus it is not possible to add a subparameter without any parameter added yet.\n   * `Params` only stores up to `subParamsLength` sub parameters, any later\n   * sub parameter will be ignored.\n   */\n  public addSubParam(value: number): void {\n    this._digitIsSub = true;\n    if (!this.length) {\n      return;\n    }\n    if (this._rejectDigits || this._subParamsLength >= this.maxSubParamsLength) {\n      this._rejectSubDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParams[this._subParamsLength++] = value > MAX_VALUE ? MAX_VALUE : value;\n    this._subParamsIdx[this.length - 1]++;\n  }\n\n  /**\n   * Whether parameter at index `idx` has sub parameters.\n   */\n  public hasSubParams(idx: number): boolean {\n    return ((this._subParamsIdx[idx] & 0xFF) - (this._subParamsIdx[idx] >> 8) > 0);\n  }\n\n  /**\n   * Return sub parameters for parameter at index `idx`.\n   * Note: The values are borrowed, thus you need to copy\n   * the values if you need to hold them in nonlocal scope.\n   */\n  public getSubParams(idx: number): Int32Array | null {\n    const start = this._subParamsIdx[idx] >> 8;\n    const end = this._subParamsIdx[idx] & 0xFF;\n    if (end - start > 0) {\n      return this._subParams.subarray(start, end);\n    }\n    return null;\n  }\n\n  /**\n   * Return all sub parameters as {idx: subparams} mapping.\n   * Note: The values are not borrowed.\n   */\n  public getSubParamsAll(): {[idx: number]: Int32Array} {\n    const result: {[idx: number]: Int32Array} = {};\n    for (let i = 0; i < this.length; ++i) {\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        result[i] = this._subParams.slice(start, end);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Add a single digit value to current parameter.\n   * This is used by the parser to account digits on a char by char basis.\n   */\n  public addDigit(value: number): void {\n    let length;\n    if (this._rejectDigits\n      || !(length = this._digitIsSub ? this._subParamsLength : this.length)\n      || (this._digitIsSub && this._rejectSubDigits)\n    ) {\n      return;\n    }\n\n    const store = this._digitIsSub ? this._subParams : this.params;\n    const cur = store[length - 1];\n    store[length - 1] = ~cur ? Math.min(cur * 10 + value, MAX_VALUE) : value;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminalAddon, IDisposable, Terminal } from 'xterm';\n\nexport interface ILoadedAddon {\n  instance: ITerminalAddon;\n  dispose: () => void;\n  isDisposed: boolean;\n}\n\nexport class AddonManager implements IDisposable {\n  protected _addons: ILoadedAddon[] = [];\n\n  constructor() {\n  }\n\n  public dispose(): void {\n    for (let i = this._addons.length - 1; i >= 0; i--) {\n      this._addons[i].instance.dispose();\n    }\n  }\n\n  public loadAddon(terminal: Terminal, instance: ITerminalAddon): void {\n    const loadedAddon: ILoadedAddon = {\n      instance,\n      dispose: instance.dispose,\n      isDisposed: false\n    };\n    this._addons.push(loadedAddon);\n    instance.dispose = () => this._wrappedAddonDispose(loadedAddon);\n    instance.activate(terminal as any);\n  }\n\n  private _wrappedAddonDispose(loadedAddon: ILoadedAddon): void {\n    if (loadedAddon.isDisposed) {\n      // Do nothing if already disposed\n      return;\n    }\n    let index = -1;\n    for (let i = 0; i < this._addons.length; i++) {\n      if (this._addons[i] === loadedAddon) {\n        index = i;\n        break;\n      }\n    }\n    if (index === -1) {\n      throw new Error('Could not dispose an addon that has not been loaded');\n    }\n    loadedAddon.isDisposed = true;\n    loadedAddon.dispose.apply(loadedAddon.instance);\n    this._addons.splice(index, 1);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferLine as IBufferLineApi, IBufferCell as IBufferCellApi } from 'xterm';\nimport { IBuffer } from 'common/buffer/Types';\nimport { BufferLineApiView } from 'common/public/BufferLineApiView';\nimport { CellData } from 'common/buffer/CellData';\n\nexport class BufferApiView implements IBufferApi {\n  constructor(\n    private _buffer: IBuffer,\n    public readonly type: 'normal' | 'alternate'\n  ) { }\n\n  public init(buffer: IBuffer): BufferApiView {\n    this._buffer = buffer;\n    return this;\n  }\n\n  public get cursorY(): number { return this._buffer.y; }\n  public get cursorX(): number { return this._buffer.x; }\n  public get viewportY(): number { return this._buffer.ydisp; }\n  public get baseY(): number { return this._buffer.ybase; }\n  public get length(): number { return this._buffer.lines.length; }\n  public getLine(y: number): IBufferLineApi | undefined {\n    const line = this._buffer.lines.get(y);\n    if (!line) {\n      return undefined;\n    }\n    return new BufferLineApiView(line);\n  }\n  public getNullCell(): IBufferCellApi { return new CellData(); }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferLine, ICellData } from 'common/Types';\nimport { IBufferCell as IBufferCellApi, IBufferLine as IBufferLineApi } from 'xterm';\n\nexport class BufferLineApiView implements IBufferLineApi {\n  constructor(private _line: IBufferLine) { }\n\n  public get isWrapped(): boolean { return this._line.isWrapped; }\n  public get length(): number { return this._line.length; }\n  public getCell(x: number, cell?: IBufferCellApi): IBufferCellApi | undefined {\n    if (x < 0 || x >= this._line.length) {\n      return undefined;\n    }\n\n    if (cell) {\n      this._line.loadCell(x, cell as ICellData);\n      return cell;\n    }\n    return this._line.loadCell(x, new CellData());\n  }\n  public translateToString(trimRight?: boolean, startColumn?: number, endColumn?: number): string {\n    return this._line.translateToString(trimRight, startColumn, endColumn);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferNamespace as IBufferNamespaceApi } from 'xterm';\nimport { BufferApiView } from 'common/public/BufferApiView';\nimport { IEvent, EventEmitter } from 'common/EventEmitter';\nimport { ICoreTerminal } from 'common/Types';\n\nexport class BufferNamespaceApi implements IBufferNamespaceApi {\n  private _normal: BufferApiView;\n  private _alternate: BufferApiView;\n  private _onBufferChange = new EventEmitter<IBufferApi>();\n  public get onBufferChange(): IEvent<IBufferApi> { return this._onBufferChange.event; }\n\n  constructor(private _core: ICoreTerminal) {\n    this._normal = new BufferApiView(this._core.buffers.normal, 'normal');\n    this._alternate = new BufferApiView(this._core.buffers.alt, 'alternate');\n    this._core.buffers.onBufferActivate(() => this._onBufferChange.fire(this.active));\n  }\n  public get active(): IBufferApi {\n    if (this._core.buffers.active === this._core.buffers.normal) { return this.normal; }\n    if (this._core.buffers.active === this._core.buffers.alt) { return this.alternate; }\n    throw new Error('Active buffer is neither normal nor alternate');\n  }\n  public get normal(): IBufferApi {\n    return this._normal.init(this._core.buffers.normal);\n  }\n  public get alternate(): IBufferApi {\n    return this._alternate.init(this._core.buffers.alt);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParams } from 'common/parser/Types';\nimport { IDisposable, IFunctionIdentifier, IParser } from 'xterm';\nimport { ICoreTerminal } from 'common/Types';\n\nexport class ParserApi implements IParser {\n  constructor(private _core: ICoreTerminal) { }\n\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerCsiHandler(id, (params: IParams) => callback(params.toArray()));\n  }\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerCsiHandler(id, callback);\n  }\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerDcsHandler(id, (data: string, params: IParams) => callback(data, params.toArray()));\n  }\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerDcsHandler(id, callback);\n  }\n  public registerEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerEscHandler(id, handler);\n  }\n  public addEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this.registerEscHandler(id, handler);\n  }\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerOscHandler(ident, callback);\n  }\n  public addOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this.registerOscHandler(ident, callback);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreTerminal } from 'common/Types';\nimport { IUnicodeHandling, IUnicodeVersionProvider } from 'xterm';\n\nexport class UnicodeApi implements IUnicodeHandling {\n  constructor(private _core: ICoreTerminal) { }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._core.unicodeService.register(provider);\n  }\n\n  public get versions(): string[] {\n    return this._core.unicodeService.versions;\n  }\n\n  public get activeVersion(): string {\n    return this._core.unicodeService.activeVersion;\n  }\n\n  public set activeVersion(version: string) {\n    this._core.unicodeService.activeVersion = version;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { BufferSet } from 'common/buffer/BufferSet';\nimport { IBufferSet, IBuffer } from 'common/buffer/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IAttributeData, IBufferLine, ScrollSource } from 'common/Types';\n\nexport const MINIMUM_COLS = 2; // Less than 2 can mess with wide chars\nexport const MINIMUM_ROWS = 1;\n\nexport class BufferService extends Disposable implements IBufferService {\n  public serviceBrand: any;\n\n  public cols: number;\n  public rows: number;\n  public buffers: IBufferSet;\n  /** Whether the user is scrolling (locks the scroll position) */\n  public isUserScrolling: boolean = false;\n\n  private _onResize = new EventEmitter<{ cols: number, rows: number }>();\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._onResize.event; }\n  private _onScroll = new EventEmitter<number>();\n  public get onScroll(): IEvent<number> { return this._onScroll.event; }\n\n  public get buffer(): IBuffer { return this.buffers.active; }\n\n  /** An IBufferline to clone/copy from for new blank lines */\n  private _cachedBlankLine: IBufferLine | undefined;\n\n  constructor(\n    @IOptionsService private _optionsService: IOptionsService\n  ) {\n    super();\n    this.cols = Math.max(_optionsService.rawOptions.cols || 0, MINIMUM_COLS);\n    this.rows = Math.max(_optionsService.rawOptions.rows || 0, MINIMUM_ROWS);\n    this.buffers = new BufferSet(_optionsService, this);\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this.buffers.dispose();\n  }\n\n  public resize(cols: number, rows: number): void {\n    this.cols = cols;\n    this.rows = rows;\n    this.buffers.resize(cols, rows);\n    this.buffers.setupTabStops(this.cols);\n    this._onResize.fire({ cols, rows });\n  }\n\n  public reset(): void {\n    this.buffers.reset();\n    this.isUserScrolling = false;\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    const buffer = this.buffer;\n\n    let newLine: IBufferLine | undefined;\n    newLine = this._cachedBlankLine;\n    if (!newLine || newLine.length !== this.cols || newLine.getFg(0) !== eraseAttr.fg || newLine.getBg(0) !== eraseAttr.bg) {\n      newLine = buffer.getBlankLine(eraseAttr, isWrapped);\n      this._cachedBlankLine = newLine;\n    }\n    newLine.isWrapped = isWrapped;\n\n    const topRow = buffer.ybase + buffer.scrollTop;\n    const bottomRow = buffer.ybase + buffer.scrollBottom;\n\n    if (buffer.scrollTop === 0) {\n      // Determine whether the buffer is going to be trimmed after insertion.\n      const willBufferBeTrimmed = buffer.lines.isFull;\n\n      // Insert the line using the fastest method\n      if (bottomRow === buffer.lines.length - 1) {\n        if (willBufferBeTrimmed) {\n          buffer.lines.recycle().copyFrom(newLine);\n        } else {\n          buffer.lines.push(newLine.clone());\n        }\n      } else {\n        buffer.lines.splice(bottomRow + 1, 0, newLine.clone());\n      }\n\n      // Only adjust ybase and ydisp when the buffer is not trimmed\n      if (!willBufferBeTrimmed) {\n        buffer.ybase++;\n        // Only scroll the ydisp with ybase if the user has not scrolled up\n        if (!this.isUserScrolling) {\n          buffer.ydisp++;\n        }\n      } else {\n        // When the buffer is full and the user has scrolled up, keep the text\n        // stable unless ydisp is right at the top\n        if (this.isUserScrolling) {\n          buffer.ydisp = Math.max(buffer.ydisp - 1, 0);\n        }\n      }\n    } else {\n      // scrollTop is non-zero which means no line will be going to the\n      // scrollback, instead we can just shift them in-place.\n      const scrollRegionHeight = bottomRow - topRow + 1 /* as it's zero-based */;\n      buffer.lines.shiftElements(topRow + 1, scrollRegionHeight - 1, -1);\n      buffer.lines.set(bottomRow, newLine.clone());\n    }\n\n    // Move the viewport to the bottom of the buffer unless the user is\n    // scrolling.\n    if (!this.isUserScrolling) {\n      buffer.ydisp = buffer.ybase;\n    }\n\n    this._onScroll.fire(buffer.ydisp);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    const buffer = this.buffer;\n    if (disp < 0) {\n      if (buffer.ydisp === 0) {\n        return;\n      }\n      this.isUserScrolling = true;\n    } else if (disp + buffer.ydisp >= buffer.ybase) {\n      this.isUserScrolling = false;\n    }\n\n    const oldYdisp = buffer.ydisp;\n    buffer.ydisp = Math.max(Math.min(buffer.ydisp + disp, buffer.ybase), 0);\n\n    // No change occurred, don't trigger scroll/refresh\n    if (oldYdisp === buffer.ydisp) {\n      return;\n    }\n\n    if (!suppressScrollEvent) {\n      this._onScroll.fire(buffer.ydisp);\n    }\n  }\n\n  /**\n   * Scroll the display of the terminal by a number of pages.\n   * @param pageCount The number of pages to scroll (negative scrolls up).\n   */\n  public scrollPages(pageCount: number): void {\n    this.scrollLines(pageCount * (this.rows - 1));\n  }\n\n  /**\n   * Scrolls the display of the terminal to the top.\n   */\n  public scrollToTop(): void {\n    this.scrollLines(-this.buffer.ydisp);\n  }\n\n  /**\n   * Scrolls the display of the terminal to the bottom.\n   */\n  public scrollToBottom(): void {\n    this.scrollLines(this.buffer.ybase - this.buffer.ydisp);\n  }\n\n  public scrollToLine(line: number): void {\n    const scrollAmount = line - this.buffer.ydisp;\n    if (scrollAmount !== 0) {\n      this.scrollLines(scrollAmount);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharsetService } from 'common/services/Services';\nimport { ICharset } from 'common/Types';\n\nexport class CharsetService implements ICharsetService {\n  public serviceBrand: any;\n\n  public charset: ICharset | undefined;\n  public glevel: number = 0;\n\n  private _charsets: (ICharset | undefined)[] = [];\n\n  public reset(): void {\n    this.charset = undefined;\n    this._charsets = [];\n    this.glevel = 0;\n  }\n\n  public setgLevel(g: number): void {\n    this.glevel = g;\n    this.charset = this._charsets[g];\n  }\n\n  public setgCharset(g: number, charset: ICharset | undefined): void {\n    this._charsets[g] = charset;\n    if (this.glevel === g) {\n      this.charset = charset;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, ICoreService, ICoreMouseService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ICoreMouseProtocol, ICoreMouseEvent, CoreMouseEncoding, CoreMouseEventType, CoreMouseButton, CoreMouseAction } from 'common/Types';\n\n/**\n * Supported default protocols.\n */\nconst DEFAULT_PROTOCOLS: {[key: string]: ICoreMouseProtocol} = {\n  /**\n   * NONE\n   * Events: none\n   * Modifiers: none\n   */\n  NONE: {\n    events: CoreMouseEventType.NONE,\n    restrict: () => false\n  },\n  /**\n   * X10\n   * Events: mousedown\n   * Modifiers: none\n   */\n  X10: {\n    events: CoreMouseEventType.DOWN,\n    restrict: (e: ICoreMouseEvent) => {\n      // no wheel, no move, no up\n      if (e.button === CoreMouseButton.WHEEL || e.action !== CoreMouseAction.DOWN) {\n        return false;\n      }\n      // no modifiers\n      e.ctrl = false;\n      e.alt = false;\n      e.shift = false;\n      return true;\n    }\n  },\n  /**\n   * VT200\n   * Events: mousedown / mouseup / wheel\n   * Modifiers: all\n   */\n  VT200: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move\n      if (e.action === CoreMouseAction.MOVE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * DRAG\n   * Events: mousedown / mouseup / wheel / mousedrag\n   * Modifiers: all\n   */\n  DRAG: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL | CoreMouseEventType.DRAG,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move without button\n      if (e.action === CoreMouseAction.MOVE && e.button === CoreMouseButton.NONE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * ANY\n   * Events: all mouse related events\n   * Modifiers: all\n   */\n  ANY: {\n    events:\n      CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL\n      | CoreMouseEventType.DRAG | CoreMouseEventType.MOVE,\n    restrict: (e: ICoreMouseEvent) => true\n  }\n};\n\nconst enum Modifiers {\n  SHIFT = 4,\n  ALT = 8,\n  CTRL = 16\n}\n\n// helper for default encoders to generate the event code.\nfunction eventCode(e: ICoreMouseEvent, isSGR: boolean): number {\n  let code = (e.ctrl ? Modifiers.CTRL : 0) | (e.shift ? Modifiers.SHIFT : 0) | (e.alt ? Modifiers.ALT : 0);\n  if (e.button === CoreMouseButton.WHEEL) {\n    code |= 64;\n    code |= e.action;\n  } else {\n    code |= e.button & 3;\n    if (e.button & 4) {\n      code |= 64;\n    }\n    if (e.button & 8) {\n      code |= 128;\n    }\n    if (e.action === CoreMouseAction.MOVE) {\n      code |= CoreMouseAction.MOVE;\n    } else if (e.action === CoreMouseAction.UP && !isSGR) {\n      // special case - only SGR can report button on release\n      // all others have to go with NONE\n      code |= CoreMouseButton.NONE;\n    }\n  }\n  return code;\n}\n\nconst S = String.fromCharCode;\n\n/**\n * Supported default encodings.\n */\nconst DEFAULT_ENCODINGS: {[key: string]: CoreMouseEncoding} = {\n  /**\n   * DEFAULT - CSI M Pb Px Py\n   * Single byte encoding for coords and event code.\n   * Can encode values up to 223 (1-based).\n   */\n  DEFAULT: (e: ICoreMouseEvent) => {\n    const params = [eventCode(e, false) + 32, e.col + 32, e.row + 32];\n    // supress mouse report if we exceed addressible range\n    // Note this is handled differently by emulators\n    // - xterm:         sends 0;0 coords instead\n    // - vte, konsole:  no report\n    if (params[0] > 255 || params[1] > 255 || params[2] > 255) {\n      return '';\n    }\n    return `\\x1b[M${S(params[0])}${S(params[1])}${S(params[2])}`;\n  },\n  /**\n   * SGR - CSI < Pb ; Px ; Py M|m\n   * No encoding limitation.\n   * Can report button on release and works with a well formed sequence.\n   */\n  SGR: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.col};${e.row}${final}`;\n  }\n};\n\n/**\n * CoreMouseService\n *\n * Provides mouse tracking reports with different protocols and encodings.\n *  - protocols: NONE (default), X10, VT200, DRAG, ANY\n *  - encodings: DEFAULT, SGR (UTF8, URXVT removed in #2507)\n *\n * Custom protocols/encodings can be added by `addProtocol` / `addEncoding`.\n * To activate a protocol/encoding, set `activeProtocol` / `activeEncoding`.\n * Switching a protocol will send a notification event `onProtocolChange`\n * with a list of needed events to track.\n *\n * The service handles the mouse tracking state and decides whether to send\n * a tracking report to the backend based on protocol and encoding limitations.\n * To send a mouse event call `triggerMouseEvent`.\n */\nexport class CoreMouseService implements ICoreMouseService {\n  private _protocols: {[name: string]: ICoreMouseProtocol} = {};\n  private _encodings: {[name: string]: CoreMouseEncoding} = {};\n  private _activeProtocol: string = '';\n  private _activeEncoding: string = '';\n  private _onProtocolChange = new EventEmitter<CoreMouseEventType>();\n  private _lastEvent: ICoreMouseEvent | null = null;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService\n  ) {\n    // register default protocols and encodings\n    for (const name of Object.keys(DEFAULT_PROTOCOLS)) this.addProtocol(name, DEFAULT_PROTOCOLS[name]);\n    for (const name of Object.keys(DEFAULT_ENCODINGS)) this.addEncoding(name, DEFAULT_ENCODINGS[name]);\n    // call reset to set defaults\n    this.reset();\n  }\n\n  public addProtocol(name: string, protocol: ICoreMouseProtocol): void {\n    this._protocols[name] = protocol;\n  }\n\n  public addEncoding(name: string, encoding: CoreMouseEncoding): void {\n    this._encodings[name] = encoding;\n  }\n\n  public get activeProtocol(): string {\n    return this._activeProtocol;\n  }\n\n  public get areMouseEventsActive(): boolean {\n    return this._protocols[this._activeProtocol].events !== 0;\n  }\n\n  public set activeProtocol(name: string) {\n    if (!this._protocols[name]) {\n      throw new Error(`unknown protocol \"${name}\"`);\n    }\n    this._activeProtocol = name;\n    this._onProtocolChange.fire(this._protocols[name].events);\n  }\n\n  public get activeEncoding(): string {\n    return this._activeEncoding;\n  }\n\n  public set activeEncoding(name: string) {\n    if (!this._encodings[name]) {\n      throw new Error(`unknown encoding \"${name}\"`);\n    }\n    this._activeEncoding = name;\n  }\n\n  public reset(): void {\n    this.activeProtocol = 'NONE';\n    this.activeEncoding = 'DEFAULT';\n    this._lastEvent = null;\n  }\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  public get onProtocolChange(): IEvent<CoreMouseEventType> {\n    return this._onProtocolChange.event;\n  }\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  public triggerMouseEvent(e: ICoreMouseEvent): boolean {\n    // range check for col/row\n    if (e.col < 0 || e.col >= this._bufferService.cols\n        || e.row < 0 || e.row >= this._bufferService.rows) {\n      return false;\n    }\n\n    // filter nonsense combinations of button + action\n    if (e.button === CoreMouseButton.WHEEL && e.action === CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button === CoreMouseButton.NONE && e.action !== CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button !== CoreMouseButton.WHEEL && (e.action === CoreMouseAction.LEFT || e.action === CoreMouseAction.RIGHT)) {\n      return false;\n    }\n\n    // report 1-based coords\n    e.col++;\n    e.row++;\n\n    // debounce move at grid level\n    if (e.action === CoreMouseAction.MOVE && this._lastEvent && this._compareEvents(this._lastEvent, e)) {\n      return false;\n    }\n\n    // apply protocol restrictions\n    if (!this._protocols[this._activeProtocol].restrict(e)) {\n      return false;\n    }\n\n    // encode report and send\n    const report = this._encodings[this._activeEncoding](e);\n    if (report) {\n      // always send DEFAULT as binary data\n      if (this._activeEncoding === 'DEFAULT') {\n        this._coreService.triggerBinaryEvent(report);\n      } else {\n        this._coreService.triggerDataEvent(report, true);\n      }\n    }\n\n    this._lastEvent = e;\n\n    return true;\n  }\n\n  public explainEvents(events: CoreMouseEventType): {[event: string]: boolean} {\n    return {\n      down: !!(events & CoreMouseEventType.DOWN),\n      up: !!(events & CoreMouseEventType.UP),\n      drag: !!(events & CoreMouseEventType.DRAG),\n      move: !!(events & CoreMouseEventType.MOVE),\n      wheel: !!(events & CoreMouseEventType.WHEEL)\n    };\n  }\n\n  private _compareEvents(e1: ICoreMouseEvent, e2: ICoreMouseEvent): boolean {\n    if (e1.col !== e2.col) return false;\n    if (e1.row !== e2.row) return false;\n    if (e1.button !== e2.button) return false;\n    if (e1.action !== e2.action) return false;\n    if (e1.ctrl !== e2.ctrl) return false;\n    if (e1.alt !== e2.alt) return false;\n    if (e1.shift !== e2.shift) return false;\n    return true;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreService, ILogService, IOptionsService, IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IDecPrivateModes, IModes } from 'common/Types';\nimport { clone } from 'common/Clone';\nimport { Disposable } from 'common/Lifecycle';\n\nconst DEFAULT_MODES: IModes = Object.freeze({\n  insertMode: false\n});\n\nconst DEFAULT_DEC_PRIVATE_MODES: IDecPrivateModes = Object.freeze({\n  applicationCursorKeys: false,\n  applicationKeypad: false,\n  bracketedPasteMode: false,\n  origin: false,\n  reverseWraparound: false,\n  sendFocus: false,\n  wraparound: true // defaults: xterm - true, vt100 - false\n});\n\nexport class CoreService extends Disposable implements ICoreService {\n  public serviceBrand: any;\n\n  public isCursorInitialized: boolean = false;\n  public isCursorHidden: boolean = false;\n  public modes: IModes;\n  public decPrivateModes: IDecPrivateModes;\n\n  // Circular dependency, this must be unset or memory will leak after Terminal.dispose\n  private _scrollToBottom: (() => void) | undefined;\n\n  private _onData = this.register(new EventEmitter<string>());\n  public get onData(): IEvent<string> { return this._onData.event; }\n  private _onUserInput = this.register(new EventEmitter<void>());\n  public get onUserInput(): IEvent<void> { return this._onUserInput.event; }\n  private _onBinary = this.register(new EventEmitter<string>());\n  public get onBinary(): IEvent<string> { return this._onBinary.event; }\n\n  constructor(\n    // TODO: Move this into a service\n    scrollToBottom: () => void,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._scrollToBottom = scrollToBottom;\n    this.register({ dispose: () => this._scrollToBottom = undefined });\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public reset(): void {\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public triggerDataEvent(data: string, wasUserInput: boolean = false): void {\n    // Prevents all events to pty process if stdin is disabled\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n\n    // Input is being sent to the terminal, the terminal should focus the prompt.\n    const buffer = this._bufferService.buffer;\n    if (buffer.ybase !== buffer.ydisp) {\n      this._scrollToBottom!();\n    }\n\n    // Fire onUserInput so listeners can react as well (eg. clear selection)\n    if (wasUserInput) {\n      this._onUserInput.fire();\n    }\n\n    // Fire onData API\n    this._logService.debug(`sending data \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onData.fire(data);\n  }\n\n  public triggerBinaryEvent(data: string): void {\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n    this._logService.debug(`sending binary \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onBinary.fire(data);\n  }\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { css } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IDecorationService, IInternalDecoration } from 'common/services/Services';\nimport { SortedList } from 'common/SortedList';\nimport { IColor } from 'common/Types';\nimport { IDecorationOptions, IDecoration, IMarker, IEvent } from 'xterm';\n\nexport class DecorationService extends Disposable implements IDecorationService {\n  public serviceBrand: any;\n\n  /**\n   * A list of all decorations, sorted by the marker's line value. This relies on the fact that\n   * while marker line values do change, they should all change by the same amount so this should\n   * never become out of order.\n   */\n  private readonly _decorations: SortedList<IInternalDecoration> = new SortedList(e => e.marker.line);\n\n  private _onDecorationRegistered = this.register(new EventEmitter<IInternalDecoration>());\n  public get onDecorationRegistered(): IEvent<IInternalDecoration> { return this._onDecorationRegistered.event; }\n  private _onDecorationRemoved = this.register(new EventEmitter<IInternalDecoration>());\n  public get onDecorationRemoved(): IEvent<IInternalDecoration> { return this._onDecorationRemoved.event; }\n\n  public get decorations(): IterableIterator<IInternalDecoration> { return this._decorations.values(); }\n\n  constructor() {\n    super();\n  }\n\n  public registerDecoration(options: IDecorationOptions): IDecoration | undefined {\n    if (options.marker.isDisposed) {\n      return undefined;\n    }\n    const decoration = new Decoration(options);\n    if (decoration) {\n      const markerDispose = decoration.marker.onDispose(() => decoration.dispose());\n      decoration.onDispose(() => {\n        if (decoration) {\n          if (this._decorations.delete(decoration)) {\n            this._onDecorationRemoved.fire(decoration);\n          }\n          markerDispose.dispose();\n        }\n      });\n      this._decorations.insert(decoration);\n      this._onDecorationRegistered.fire(decoration);\n    }\n    return decoration;\n  }\n\n  public reset(): void {\n    for (const d of this._decorations.values()) {\n      d.dispose();\n    }\n    this._decorations.clear();\n  }\n\n  public *getDecorationsAtLine(line: number): IterableIterator<IInternalDecoration> {\n    return this._decorations.getKeyIterator(line);\n  }\n\n  public *getDecorationsAtCell(x: number, line: number, layer?: 'bottom' | 'top'): IterableIterator<IInternalDecoration> {\n    let xmin = 0;\n    let xmax = 0;\n    for (const d of this._decorations.getKeyIterator(line)) {\n      xmin = d.options.x ?? 0;\n      xmax = xmin + (d.options.width ?? 1);\n      if (x >= xmin && x < xmax && (!layer || (d.options.layer ?? 'bottom') === layer)) {\n        yield d;\n      }\n    }\n  }\n\n  public dispose(): void {\n    for (const d of this._decorations.values()) {\n      this._onDecorationRemoved.fire(d);\n    }\n    this.reset();\n  }\n}\n\nclass Decoration extends Disposable implements IInternalDecoration {\n  public readonly marker: IMarker;\n  public element: HTMLElement | undefined;\n  public isDisposed: boolean = false;\n\n  public readonly onRenderEmitter = this.register(new EventEmitter<HTMLElement>());\n  public readonly onRender = this.onRenderEmitter.event;\n  private _onDispose = this.register(new EventEmitter<void>());\n  public readonly onDispose = this._onDispose.event;\n\n  private _cachedBg: IColor | undefined | null = null;\n  public get backgroundColorRGB(): IColor | undefined {\n    if (this._cachedBg === null) {\n      if (this.options.backgroundColor) {\n        this._cachedBg = css.toColor(this.options.backgroundColor);\n      } else {\n        this._cachedBg = undefined;\n      }\n    }\n    return this._cachedBg;\n  }\n\n  private _cachedFg: IColor | undefined | null = null;\n  public get foregroundColorRGB(): IColor | undefined {\n    if (this._cachedFg === null) {\n      if (this.options.foregroundColor) {\n        this._cachedFg = css.toColor(this.options.foregroundColor);\n      } else {\n        this._cachedFg = undefined;\n      }\n    }\n    return this._cachedFg;\n  }\n\n  constructor(\n    public readonly options: IDecorationOptions\n  ) {\n    super();\n    this.marker = options.marker;\n    if (this.options.overviewRulerOptions && !this.options.overviewRulerOptions.position) {\n      this.options.overviewRulerOptions.position = 'full';\n    }\n  }\n\n  public override dispose(): void {\n    if (this._isDisposed) {\n      return;\n    }\n    this._isDisposed = true;\n    this._onDispose.fire();\n    super.dispose();\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService, IDirtyRowService } from 'common/services/Services';\n\nexport class DirtyRowService implements IDirtyRowService {\n  public serviceBrand: any;\n\n  private _start!: number;\n  private _end!: number;\n\n  public get start(): number { return this._start; }\n  public get end(): number { return this._end; }\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    this.clearRange();\n  }\n\n  public clearRange(): void {\n    this._start = this._bufferService.buffer.y;\n    this._end = this._bufferService.buffer.y;\n  }\n\n  public markDirty(y: number): void {\n    if (y < this._start) {\n      this._start = y;\n    } else if (y > this._end) {\n      this._end = y;\n    }\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    if (y1 > y2) {\n      const temp = y1;\n      y1 = y2;\n      y2 = temp;\n    }\n    if (y1 < this._start) {\n      this._start = y1;\n    }\n    if (y2 > this._end) {\n      this._end = y2;\n    }\n  }\n\n  public markAllDirty(): void {\n    this.markRangeDirty(0, this._bufferService.rows - 1);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInstantiationService, IServiceIdentifier } from 'common/services/Services';\nimport { getServiceDependencies } from 'common/services/ServiceRegistry';\n\nexport class ServiceCollection {\n\n  private _entries = new Map<IServiceIdentifier<any>, any>();\n\n  constructor(...entries: [IServiceIdentifier<any>, any][]) {\n    for (const [id, service] of entries) {\n      this.set(id, service);\n    }\n  }\n\n  public set<T>(id: IServiceIdentifier<T>, instance: T): T {\n    const result = this._entries.get(id);\n    this._entries.set(id, instance);\n    return result;\n  }\n\n  public forEach(callback: (id: IServiceIdentifier<any>, instance: any) => any): void {\n    this._entries.forEach((value, key) => callback(key, value));\n  }\n\n  public has(id: IServiceIdentifier<any>): boolean {\n    return this._entries.has(id);\n  }\n\n  public get<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._entries.get(id);\n  }\n}\n\nexport class InstantiationService implements IInstantiationService {\n  public serviceBrand: undefined;\n\n  private readonly _services: ServiceCollection = new ServiceCollection();\n\n  constructor() {\n    this._services.set(IInstantiationService, this);\n  }\n\n  public setService<T>(id: IServiceIdentifier<T>, instance: T): void {\n    this._services.set(id, instance);\n  }\n\n  public getService<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._services.get(id);\n  }\n\n  public createInstance<T>(ctor: any, ...args: any[]): T {\n    const serviceDependencies = getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n\n    const serviceArgs: any[] = [];\n    for (const dependency of serviceDependencies) {\n      const service = this._services.get(dependency.id);\n      if (!service) {\n        throw new Error(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`);\n      }\n      serviceArgs.push(service);\n    }\n\n    const firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n\n    // check for argument mismatches, adjust static args if needed\n    if (args.length !== firstServiceArgPos) {\n      throw new Error(`[createInstance] First service dependency of ${ctor.name} at position ${firstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n    }\n\n    // now create the instance\n    return new ctor(...[...args, ...serviceArgs]);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILogService, IOptionsService, LogLevelEnum } from 'common/services/Services';\n\ntype LogType = (message?: any, ...optionalParams: any[]) => void;\n\ninterface IConsole {\n  log: LogType;\n  error: LogType;\n  info: LogType;\n  trace: LogType;\n  warn: LogType;\n}\n\n// console is available on both node.js and browser contexts but the common\n// module doesn't depend on them so we need to explicitly declare it.\ndeclare const console: IConsole;\n\nconst optionsKeyToLogLevel: { [key: string]: LogLevelEnum } = {\n  debug: LogLevelEnum.DEBUG,\n  info: LogLevelEnum.INFO,\n  warn: LogLevelEnum.WARN,\n  error: LogLevelEnum.ERROR,\n  off: LogLevelEnum.OFF\n};\n\nconst LOG_PREFIX = 'xterm.js: ';\n\nexport class LogService implements ILogService {\n  public serviceBrand: any;\n\n  public logLevel: LogLevelEnum = LogLevelEnum.OFF;\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    this._updateLogLevel();\n    this._optionsService.onOptionChange(key => {\n      if (key === 'logLevel') {\n        this._updateLogLevel();\n      }\n    });\n  }\n\n  private _updateLogLevel(): void {\n    this.logLevel = optionsKeyToLogLevel[this._optionsService.rawOptions.logLevel];\n  }\n\n  private _evalLazyOptionalParams(optionalParams: any[]): void {\n    for (let i = 0; i < optionalParams.length; i++) {\n      if (typeof optionalParams[i] === 'function') {\n        optionalParams[i] = optionalParams[i]();\n      }\n    }\n  }\n\n  private _log(type: LogType, message: string, optionalParams: any[]): void {\n    this._evalLazyOptionalParams(optionalParams);\n    type.call(console, LOG_PREFIX + message, ...optionalParams);\n  }\n\n  public debug(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.DEBUG) {\n      this._log(console.log, message, optionalParams);\n    }\n  }\n\n  public info(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.INFO) {\n      this._log(console.info, message, optionalParams);\n    }\n  }\n\n  public warn(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.WARN) {\n      this._log(console.warn, message, optionalParams);\n    }\n  }\n\n  public error(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.ERROR) {\n      this._log(console.error, message, optionalParams);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService, ITerminalOptions, FontWeight } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { isMac } from 'common/Platform';\n\n// Source: https://freesound.org/people/altemark/sounds/45759/\n// This sound is released under the Creative Commons Attribution 3.0 Unported\n// (CC BY 3.0) license. It was created by 'altemark'. No modifications have been\n// made, apart from the conversion to base64.\nexport const DEFAULT_BELL_SOUND = 'data:audio/mp3;base64,SUQzBAAAAAAAI1RTU0UAAAAPAAADTGF2ZjU4LjMyLjEwNAAAAAAAAAAAAAAA//tQxAADB8AhSmxhIIEVCSiJrDCQBTcu3UrAIwUdkRgQbFAZC1CQEwTJ9mjRvBA4UOLD8nKVOWfh+UlK3z/177OXrfOdKl7pyn3Xf//WreyTRUoAWgBgkOAGbZHBgG1OF6zM82DWbZaUmMBptgQhGjsyYqc9ae9XFz280948NMBWInljyzsNRFLPWdnZGWrddDsjK1unuSrVN9jJsK8KuQtQCtMBjCEtImISdNKJOopIpBFpNSMbIHCSRpRR5iakjTiyzLhchUUBwCgyKiweBv/7UsQbg8isVNoMPMjAAAA0gAAABEVFGmgqK////9bP/6XCykxBTUUzLjEwMKqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq';\n\nexport const DEFAULT_OPTIONS: Readonly<ITerminalOptions> = {\n  cols: 80,\n  rows: 24,\n  cursorBlink: false,\n  cursorStyle: 'block',\n  cursorWidth: 1,\n  customGlyphs: true,\n  bellSound: DEFAULT_BELL_SOUND,\n  bellStyle: 'none',\n  drawBoldTextInBrightColors: true,\n  fastScrollModifier: 'alt',\n  fastScrollSensitivity: 5,\n  fontFamily: 'courier-new, courier, monospace',\n  fontSize: 15,\n  fontWeight: 'normal',\n  fontWeightBold: 'bold',\n  lineHeight: 1.0,\n  linkTooltipHoverDuration: 500,\n  letterSpacing: 0,\n  logLevel: 'info',\n  scrollback: 1000,\n  scrollSensitivity: 1,\n  screenReaderMode: false,\n  macOptionIsMeta: false,\n  macOptionClickForcesSelection: false,\n  minimumContrastRatio: 1,\n  disableStdin: false,\n  allowProposedApi: true,\n  allowTransparency: false,\n  tabStopWidth: 8,\n  theme: {},\n  rightClickSelectsWord: isMac,\n  rendererType: 'canvas',\n  windowOptions: {},\n  windowsMode: false,\n  wordSeparator: ' ()[]{}\\',\"`',\n  altClickMovesCursor: true,\n  convertEol: false,\n  termName: 'xterm',\n  cancelEvents: false,\n  overviewRulerWidth: undefined\n};\n\nconst FONT_WEIGHT_OPTIONS: Extract<FontWeight, string>[] = ['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900'];\n\nexport class OptionsService implements IOptionsService {\n  public serviceBrand: any;\n\n  public readonly rawOptions: ITerminalOptions;\n  public options: ITerminalOptions;\n\n  private _onOptionChange = new EventEmitter<string>();\n  public get onOptionChange(): IEvent<string> { return this._onOptionChange.event; }\n\n  constructor(options: Partial<ITerminalOptions>) {\n    // set the default value of each option\n    const defaultOptions = { ...DEFAULT_OPTIONS };\n    for (const key in options) {\n      if (key in defaultOptions) {\n        try {\n          const newValue = options[key];\n          defaultOptions[key] = this._sanitizeAndValidateOption(key, newValue);\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    }\n\n    // set up getters and setters for each option\n    this.rawOptions = defaultOptions;\n    this.options = { ... defaultOptions };\n    this._setupOptions();\n  }\n\n  private _setupOptions(): void {\n    const getter = (propName: string): any => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n      return this.rawOptions[propName];\n    };\n\n    const setter = (propName: string, value: any): void => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n\n      value = this._sanitizeAndValidateOption(propName, value);\n      // Don't fire an option change event if they didn't change\n      if (this.rawOptions[propName] !== value) {\n        this.rawOptions[propName] = value;\n        this._onOptionChange.fire(propName);\n      }\n    };\n\n    for (const propName in this.rawOptions) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this.options, propName, desc);\n    }\n  }\n\n  public setOption(key: string, value: any): void {\n    this.options[key] = value;\n  }\n\n  private _sanitizeAndValidateOption(key: string, value: any): any {\n    switch (key) {\n      case 'bellStyle':\n      case 'cursorStyle':\n      case 'rendererType':\n      case 'wordSeparator':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        break;\n      case 'fontWeight':\n      case 'fontWeightBold':\n        if (typeof value === 'number' && 1 <= value && value <= 1000) {\n          // already valid numeric value\n          break;\n        }\n        value = FONT_WEIGHT_OPTIONS.includes(value) ? value : DEFAULT_OPTIONS[key];\n        break;\n      case 'cursorWidth':\n        value = Math.floor(value);\n        // Fall through for bounds check\n      case 'lineHeight':\n      case 'tabStopWidth':\n        if (value < 1) {\n          throw new Error(`${key} cannot be less than 1, value: ${value}`);\n        }\n        break;\n      case 'minimumContrastRatio':\n        value = Math.max(1, Math.min(21, Math.round(value * 10) / 10));\n        break;\n      case 'scrollback':\n        value = Math.min(value, 4294967295);\n        if (value < 0) {\n          throw new Error(`${key} cannot be less than 0, value: ${value}`);\n        }\n        break;\n      case 'fastScrollSensitivity':\n      case 'scrollSensitivity':\n        if (value <= 0) {\n          throw new Error(`${key} cannot be less than or equal to 0, value: ${value}`);\n        }\n      case 'rows':\n      case 'cols':\n        if (!value && value !== 0) {\n          throw new Error(`${key} must be numeric, value: ${value}`);\n        }\n        break;\n    }\n    return value;\n  }\n\n  public getOption(key: string): any {\n    return this.options[key];\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServiceIdentifier } from 'common/services/Services';\n\nconst DI_TARGET = 'di$target';\nconst DI_DEPENDENCIES = 'di$dependencies';\n\nexport const serviceRegistry: Map<string, IServiceIdentifier<any>> = new Map();\n\nexport function getServiceDependencies(ctor: any): { id: IServiceIdentifier<any>, index: number, optional: boolean }[] {\n  return ctor[DI_DEPENDENCIES] || [];\n}\n\nexport function createDecorator<T>(id: string): IServiceIdentifier<T> {\n  if (serviceRegistry.has(id)) {\n    return serviceRegistry.get(id)!;\n  }\n\n  const decorator: any = function (target: Function, key: string, index: number): any {\n    if (arguments.length !== 3) {\n      throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n    }\n\n    storeServiceDependency(decorator, target, index);\n  };\n\n  decorator.toString = () => id;\n\n  serviceRegistry.set(id, decorator);\n  return decorator;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number): void {\n  if ((target as any)[DI_TARGET] === target) {\n    (target as any)[DI_DEPENDENCIES].push({ id, index });\n  } else {\n    (target as any)[DI_DEPENDENCIES] = [{ id, index }];\n    (target as any)[DI_TARGET] = target;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent, IEventEmitter } from 'common/EventEmitter';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IDecPrivateModes, ICoreMouseEvent, CoreMouseEncoding, ICoreMouseProtocol, CoreMouseEventType, ICharset, IWindowOptions, IModes, IAttributeData, ScrollSource, IDisposable, IColorRGB, IColor } from 'common/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { IDecorationOptions, IDecoration } from 'xterm';\n\nexport const IBufferService = createDecorator<IBufferService>('BufferService');\nexport interface IBufferService {\n  serviceBrand: undefined;\n\n  readonly cols: number;\n  readonly rows: number;\n  readonly buffer: IBuffer;\n  readonly buffers: IBufferSet;\n  isUserScrolling: boolean;\n  onResize: IEvent<{ cols: number, rows: number }>;\n  onScroll: IEvent<number>;\n  scroll(eraseAttr: IAttributeData, isWrapped?: boolean): void;\n  scrollToBottom(): void;\n  scrollToTop(): void;\n  scrollToLine(line: number): void;\n  scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void;\n  scrollPages(pageCount: number): void;\n  resize(cols: number, rows: number): void;\n  reset(): void;\n}\n\nexport const ICoreMouseService = createDecorator<ICoreMouseService>('CoreMouseService');\nexport interface ICoreMouseService {\n  activeProtocol: string;\n  activeEncoding: string;\n  areMouseEventsActive: boolean;\n  addProtocol(name: string, protocol: ICoreMouseProtocol): void;\n  addEncoding(name: string, encoding: CoreMouseEncoding): void;\n  reset(): void;\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  triggerMouseEvent(event: ICoreMouseEvent): boolean;\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  onProtocolChange: IEvent<CoreMouseEventType>;\n\n  /**\n   * Human readable version of mouse events.\n   */\n  explainEvents(events: CoreMouseEventType): { [event: string]: boolean };\n}\n\nexport const ICoreService = createDecorator<ICoreService>('CoreService');\nexport interface ICoreService {\n  serviceBrand: undefined;\n\n  /**\n   * Initially the cursor will not be visible until the first time the terminal\n   * is focused.\n   */\n  isCursorInitialized: boolean;\n  isCursorHidden: boolean;\n\n  readonly modes: IModes;\n  readonly decPrivateModes: IDecPrivateModes;\n\n  readonly onData: IEvent<string>;\n  readonly onUserInput: IEvent<void>;\n  readonly onBinary: IEvent<string>;\n\n  reset(): void;\n\n  /**\n   * Triggers the onData event in the public API.\n   * @param data The data that is being emitted.\n   * @param wasFromUser Whether the data originated from the user (as opposed to\n   * resulting from parsing incoming data). When true this will also:\n   * - Scroll to the bottom of the buffer.s\n   * - Fire the `onUserInput` event (so selection can be cleared).\n   */\n  triggerDataEvent(data: string, wasUserInput?: boolean): void;\n\n  /**\n   * Triggers the onBinary event in the public API.\n   * @param data The data that is being emitted.\n   */\n  triggerBinaryEvent(data: string): void;\n}\n\nexport const ICharsetService = createDecorator<ICharsetService>('CharsetService');\nexport interface ICharsetService {\n  serviceBrand: undefined;\n\n  charset: ICharset | undefined;\n  readonly glevel: number;\n\n  reset(): void;\n\n  /**\n   * Set the G level of the terminal.\n   * @param g\n   */\n  setgLevel(g: number): void;\n\n  /**\n   * Set the charset for the given G level of the terminal.\n   * @param g\n   * @param charset\n   */\n  setgCharset(g: number, charset: ICharset | undefined): void;\n}\n\nexport const IDirtyRowService = createDecorator<IDirtyRowService>('DirtyRowService');\nexport interface IDirtyRowService {\n  serviceBrand: undefined;\n\n  readonly start: number;\n  readonly end: number;\n\n  clearRange(): void;\n  markDirty(y: number): void;\n  markRangeDirty(y1: number, y2: number): void;\n  markAllDirty(): void;\n}\n\nexport interface IServiceIdentifier<T> {\n  (...args: any[]): void;\n  type: T;\n}\n\nexport interface IBrandedService {\n  serviceBrand: undefined;\n}\n\ntype GetLeadingNonServiceArgs<Args> =\n  Args extends [...IBrandedService[]] ? []\n    : Args extends [infer A1, ...IBrandedService[]] ? [A1]\n      : Args extends [infer A1, infer A2, ...IBrandedService[]] ? [A1, A2]\n        : Args extends [infer A1, infer A2, infer A3, ...IBrandedService[]] ? [A1, A2, A3]\n          : Args extends [infer A1, infer A2, infer A3, infer A4, ...IBrandedService[]] ? [A1, A2, A3, A4]\n            : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, ...IBrandedService[]] ? [A1, A2, A3, A4, A5]\n              : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6]\n                : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7]\n                  : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, infer A8, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7, A8]\n                    : never;\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('InstantiationService');\nexport interface IInstantiationService {\n  serviceBrand: undefined;\n\n  setService<T>(id: IServiceIdentifier<T>, instance: T): void;\n  getService<T>(id: IServiceIdentifier<T>): T | undefined;\n  createInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(t: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n}\n\nexport enum LogLevelEnum {\n  DEBUG = 0,\n  INFO = 1,\n  WARN = 2,\n  ERROR = 3,\n  OFF = 4\n}\n\nexport const ILogService = createDecorator<ILogService>('LogService');\nexport interface ILogService {\n  serviceBrand: undefined;\n\n  logLevel: LogLevelEnum;\n\n  debug(message: any, ...optionalParams: any[]): void;\n  info(message: any, ...optionalParams: any[]): void;\n  warn(message: any, ...optionalParams: any[]): void;\n  error(message: any, ...optionalParams: any[]): void;\n}\n\nexport const IOptionsService = createDecorator<IOptionsService>('OptionsService');\nexport interface IOptionsService {\n  serviceBrand: undefined;\n\n  /**\n   * Read only access to the raw options object, this is an internal-only fast path for accessing\n   * single options without any validation as we trust TypeScript to enforce correct usage\n   * internally.\n   */\n  readonly rawOptions: Readonly<ITerminalOptions>;\n  readonly options: ITerminalOptions;\n\n  readonly onOptionChange: IEvent<string>;\n\n  setOption<T>(key: string, value: T): void;\n  getOption<T>(key: string): T | undefined;\n}\n\nexport type FontWeight = 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | number;\nexport type LogLevel = 'debug' | 'info' | 'warn' | 'error' | 'off';\n\nexport type RendererType = 'dom' | 'canvas';\n\nexport interface ITerminalOptions {\n  allowProposedApi: boolean;\n  allowTransparency: boolean;\n  altClickMovesCursor: boolean;\n  bellSound: string;\n  bellStyle: 'none' | 'sound' /* | 'visual' | 'both' */;\n  cols: number;\n  convertEol: boolean;\n  cursorBlink: boolean;\n  cursorStyle: 'block' | 'underline' | 'bar';\n  cursorWidth: number;\n  customGlyphs: boolean;\n  disableStdin: boolean;\n  drawBoldTextInBrightColors: boolean;\n  fastScrollModifier: 'alt' | 'ctrl' | 'shift' | undefined;\n  fastScrollSensitivity: number;\n  fontSize: number;\n  fontFamily: string;\n  fontWeight: FontWeight;\n  fontWeightBold: FontWeight;\n  letterSpacing: number;\n  lineHeight: number;\n  linkTooltipHoverDuration: number;\n  logLevel: LogLevel;\n  macOptionIsMeta: boolean;\n  macOptionClickForcesSelection: boolean;\n  minimumContrastRatio: number;\n  rendererType: RendererType;\n  rightClickSelectsWord: boolean;\n  rows: number;\n  screenReaderMode: boolean;\n  scrollback: number;\n  scrollSensitivity: number;\n  tabStopWidth: number;\n  theme: ITheme;\n  windowsMode: boolean;\n  windowOptions: IWindowOptions;\n  wordSeparator: string;\n  overviewRulerWidth?: number;\n\n  [key: string]: any;\n  cancelEvents: boolean;\n  termName: string;\n}\n\nexport interface ITheme {\n  foreground?: string;\n  background?: string;\n  cursor?: string;\n  cursorAccent?: string;\n  selection?: string;\n  selectionForeground?: string;\n  black?: string;\n  red?: string;\n  green?: string;\n  yellow?: string;\n  blue?: string;\n  magenta?: string;\n  cyan?: string;\n  white?: string;\n  brightBlack?: string;\n  brightRed?: string;\n  brightGreen?: string;\n  brightYellow?: string;\n  brightBlue?: string;\n  brightMagenta?: string;\n  brightCyan?: string;\n  brightWhite?: string;\n}\n\nexport const IUnicodeService = createDecorator<IUnicodeService>('UnicodeService');\nexport interface IUnicodeService {\n  serviceBrand: undefined;\n  /** Register an Unicode version provider. */\n  register(provider: IUnicodeVersionProvider): void;\n  /** Registered Unicode versions. */\n  readonly versions: string[];\n  /** Currently active version. */\n  activeVersion: string;\n  /** Event triggered, when activate version changed. */\n  readonly onChange: IEvent<string>;\n\n  /**\n   * Unicode version dependent\n   */\n  wcwidth(codepoint: number): number;\n  getStringCellWidth(s: string): number;\n}\n\nexport interface IUnicodeVersionProvider {\n  readonly version: string;\n  wcwidth(ucs: number): 0 | 1 | 2;\n}\n\nexport const IDecorationService = createDecorator<IDecorationService>('DecorationService');\nexport interface IDecorationService extends IDisposable {\n  serviceBrand: undefined;\n  readonly decorations: IterableIterator<IInternalDecoration>;\n  readonly onDecorationRegistered: IEvent<IInternalDecoration>;\n  readonly onDecorationRemoved: IEvent<IInternalDecoration>;\n  registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined;\n  reset(): void;\n  /** Iterates over the decorations at a line (in no particular order). */\n  getDecorationsAtLine(line: number): IterableIterator<IInternalDecoration>;\n  /** Iterates over the decorations at a cell (in no particular order). */\n  getDecorationsAtCell(x: number, line: number, layer?: 'bottom' | 'top'): IterableIterator<IInternalDecoration>;\n}\nexport interface IInternalDecoration extends IDecoration {\n  readonly options: IDecorationOptions;\n  readonly backgroundColorRGB: IColor | undefined;\n  readonly foregroundColorRGB: IColor | undefined;\n  readonly onRenderEmitter: IEventEmitter<HTMLElement>;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeService, IUnicodeVersionProvider } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { UnicodeV6 } from 'common/input/UnicodeV6';\n\n\nexport class UnicodeService implements IUnicodeService {\n  public serviceBrand: any;\n\n  private _providers: {[key: string]: IUnicodeVersionProvider} = Object.create(null);\n  private _active: string = '';\n  private _activeProvider: IUnicodeVersionProvider;\n  private _onChange = new EventEmitter<string>();\n  public get onChange(): IEvent<string> { return this._onChange.event; }\n\n  constructor() {\n    const defaultProvider = new UnicodeV6();\n    this.register(defaultProvider);\n    this._active = defaultProvider.version;\n    this._activeProvider = defaultProvider;\n  }\n\n  public get versions(): string[] {\n    return Object.keys(this._providers);\n  }\n\n  public get activeVersion(): string {\n    return this._active;\n  }\n\n  public set activeVersion(version: string) {\n    if (!this._providers[version]) {\n      throw new Error(`unknown Unicode version \"${version}\"`);\n    }\n    this._active = version;\n    this._activeProvider = this._providers[version];\n    this._onChange.fire(version);\n  }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._providers[provider.version] = provider;\n  }\n\n  /**\n   * Unicode version dependent interface.\n   */\n  public wcwidth(num: number): number {\n    return this._activeProvider.wcwidth(num);\n  }\n\n  public getStringCellWidth(s: string): number {\n    let result = 0;\n    const length = s.length;\n    for (let i = 0; i < length; ++i) {\n      let code = s.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          // this should not happen with strings retrieved from\n          // Buffer.translateToString as it converts from UTF-32\n          // and therefore always should contain the second part\n          // for any other string we still have to handle it somehow:\n          // simply treat the lonely surrogate first as a single char (UCS-2 behavior)\n          return result + this.wcwidth(code);\n        }\n        const second = s.charCodeAt(i);\n        // convert surrogate pair to high codepoint only for valid second part (UTF-16)\n        // otherwise treat them independently (UCS-2 behavior)\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          code = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          result += this.wcwidth(second);\n        }\n      }\n      result += this.wcwidth(code);\n    }\n    return result;\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(4389);\n","// TerminalUI.js\n\nimport { Terminal } from \"xterm\";\nimport \"xterm/css/xterm.css\";\n\nexport class TerminalUI {\n  constructor(socket) {\n    this.terminal = new Terminal();\n\n    /* You can make your terminals colorful :) */\n    this.terminal.setOption(\"theme\", {\n      background: \"#202B33\",\n      foreground: \"#F5F8FA\",\n      cursor: 'white',\n    });\n\n    this.terminal.setOption(\"cursorStyle\", \"bar\"); // Set cursor to a block\n    this.terminal.setOption(\"cursorBlink\", true);    // Enable cursor blinking\n    this.terminal.setOption('convertEol', true);\n    this.terminal.setOption('fontSize', 16);\n    this.socket = socket;\n  }\n\n  /**\n   * Attach event listeners for terminal UI and socket.io client\n   */\n  startListening() {\n    this.terminal.onData(data => this.sendInput(data));\n    this.socket.on(\"output\", data => {\n      // When there is data from PTY on server, print that on Terminal.\n      this.write(data);\n    });\n  }\n\n  /**\n   * Print something to terminal UI.\n   */\n  write(text) {\n    this.terminal.write(text);\n  }\n\n  /**\n   * Utility function to print new line on terminal.\n   */\n  prompt() {\n    this.terminal.write(`\\r`);\n  }\n\n  /**\n   * Send whatever you type in Terminal UI to PTY process in server.\n   * @param {*} input Input to send to server\n   */\n  sendInput(input) {\n    this.socket.emit(\"input\", input);\n  }\n\n  /**\n   *\n   * @param {HTMLElement} container HTMLElement where xterm can attach terminal ui instance.\n   */\n  attachTo(container) {\n    this.terminal.open(container);\n    // Default text to display on terminal.\n    // this.terminal.write(\"Terminal Connected\");\n    // this.terminal.write(\"\");\n    this.prompt();\n  }\n\n  clear() {\n    this.terminal.clear();\n  }\n}\n","/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\n\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\nvar parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\n\nmodule.exports = function parseuri(str) {\n    var src = str,\n        b = str.indexOf('['),\n        e = str.indexOf(']');\n\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n\n    var m = re.exec(str || ''),\n        uri = {},\n        i = 14;\n\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n\n    return uri;\n};\n\nfunction pathNames(obj, path) {\n    var regx = /\\/{2,9}/g,\n        names = path.replace(regx, \"/\").split(\"/\");\n\n    if (path.substr(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.substr(path.length - 1, 1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n\n    return names;\n}\n\nfunction queryKey(uri, query) {\n    var data = {};\n\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n\n    return data;\n}\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * Active `debug` instances.\n */\nexports.instances = [];\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  var prevTime;\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n  debug.destroy = destroy;\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  exports.instances.push(debug);\n\n  return debug;\n}\n\nfunction destroy () {\n  var index = exports.instances.indexOf(this);\n  if (index !== -1) {\n    exports.instances.splice(index, 1);\n    return true;\n  } else {\n    return false;\n  }\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var i;\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n\n  for (i = 0; i < exports.instances.length; i++) {\n    var instance = exports.instances[i];\n    instance.enabled = exports.enabled(instance.namespace);\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  if (name[name.length - 1] === '*') {\n    return true;\n  }\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  '#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC',\n  '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF',\n  '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC',\n  '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF',\n  '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC',\n  '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033',\n  '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366',\n  '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933',\n  '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC',\n  '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF',\n  '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // Internet Explorer and Edge do not support colors.\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n    return false;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n","\n/**\n * Module dependencies.\n */\n\nvar parseuri = require('parseuri');\nvar debug = require('debug')('socket.io-client:url');\n\n/**\n * Module exports.\n */\n\nmodule.exports = url;\n\n/**\n * URL parser.\n *\n * @param {String} url\n * @param {Object} An object meant to mimic window.location.\n *                 Defaults to window.location.\n * @api public\n */\n\nfunction url (uri, loc) {\n  var obj = uri;\n\n  // default to window.location\n  loc = loc || (typeof location !== 'undefined' && location);\n  if (null == uri) uri = loc.protocol + '//' + loc.host;\n\n  // relative path support\n  if ('string' === typeof uri) {\n    if ('/' === uri.charAt(0)) {\n      if ('/' === uri.charAt(1)) {\n        uri = loc.protocol + uri;\n      } else {\n        uri = loc.host + uri;\n      }\n    }\n\n    if (!/^(https?|wss?):\\/\\//.test(uri)) {\n      debug('protocol-less url %s', uri);\n      if ('undefined' !== typeof loc) {\n        uri = loc.protocol + '//' + uri;\n      } else {\n        uri = 'https://' + uri;\n      }\n    }\n\n    // parse\n    debug('parse %s', uri);\n    obj = parseuri(uri);\n  }\n\n  // make sure we treat `localhost:80` and `localhost` equally\n  if (!obj.port) {\n    if (/^(http|ws)$/.test(obj.protocol)) {\n      obj.port = '80';\n    } else if (/^(http|ws)s$/.test(obj.protocol)) {\n      obj.port = '443';\n    }\n  }\n\n  obj.path = obj.path || '/';\n\n  var ipv6 = obj.host.indexOf(':') !== -1;\n  var host = ipv6 ? '[' + obj.host + ']' : obj.host;\n\n  // define unique id\n  obj.id = obj.protocol + '://' + host + ':' + obj.port;\n  // define href\n  obj.href = obj.protocol + '://' + host + (loc && loc.port === obj.port ? '' : (':' + obj.port));\n\n  return obj;\n}\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * Active `debug` instances.\n */\nexports.instances = [];\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  var prevTime;\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n  debug.destroy = destroy;\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  exports.instances.push(debug);\n\n  return debug;\n}\n\nfunction destroy () {\n  var index = exports.instances.indexOf(this);\n  if (index !== -1) {\n    exports.instances.splice(index, 1);\n    return true;\n  } else {\n    return false;\n  }\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var i;\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n\n  for (i = 0; i < exports.instances.length; i++) {\n    var instance = exports.instances[i];\n    instance.enabled = exports.enabled(instance.namespace);\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  if (name[name.length - 1] === '*') {\n    return true;\n  }\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  '#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC',\n  '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF',\n  '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC',\n  '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF',\n  '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC',\n  '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033',\n  '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366',\n  '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933',\n  '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC',\n  '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF',\n  '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // Internet Explorer and Edge do not support colors.\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n    return false;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n","\r\n/**\r\n * Expose `Emitter`.\r\n */\r\n\r\nif (typeof module !== 'undefined') {\r\n  module.exports = Emitter;\r\n}\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  function on() {\r\n    this.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks['$' + event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks['$' + event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n\r\n  // Remove event specific arrays for event types that no\r\n  // one is subscribed for to avoid memory leak.\r\n  if (callbacks.length === 0) {\r\n    delete this._callbacks['$' + event];\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  var args = new Array(arguments.length - 1)\r\n    , callbacks = this._callbacks['$' + event];\r\n\r\n  for (var i = 1; i < arguments.length; i++) {\r\n    args[i - 1] = arguments[i];\r\n  }\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks['$' + event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","\nmodule.exports = isBuf;\n\nvar withNativeBuffer = typeof Buffer === 'function' && typeof Buffer.isBuffer === 'function';\nvar withNativeArrayBuffer = typeof ArrayBuffer === 'function';\n\nvar isView = function (obj) {\n  return typeof ArrayBuffer.isView === 'function' ? ArrayBuffer.isView(obj) : (obj.buffer instanceof ArrayBuffer);\n};\n\n/**\n * Returns true if obj is a buffer or an arraybuffer.\n *\n * @api private\n */\n\nfunction isBuf(obj) {\n  return (withNativeBuffer && Buffer.isBuffer(obj)) ||\n          (withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj)));\n}\n","/*global Blob,File*/\n\n/**\n * Module requirements\n */\n\nvar isArray = require('isarray');\nvar isBuf = require('./is-buffer');\nvar toString = Object.prototype.toString;\nvar withNativeBlob = typeof Blob === 'function' || (typeof Blob !== 'undefined' && toString.call(Blob) === '[object BlobConstructor]');\nvar withNativeFile = typeof File === 'function' || (typeof File !== 'undefined' && toString.call(File) === '[object FileConstructor]');\n\n/**\n * Replaces every Buffer | ArrayBuffer in packet with a numbered placeholder.\n * Anything with blobs or files should be fed through removeBlobs before coming\n * here.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @api public\n */\n\nexports.deconstructPacket = function(packet) {\n  var buffers = [];\n  var packetData = packet.data;\n  var pack = packet;\n  pack.data = _deconstructPacket(packetData, buffers);\n  pack.attachments = buffers.length; // number of binary 'attachments'\n  return {packet: pack, buffers: buffers};\n};\n\nfunction _deconstructPacket(data, buffers) {\n  if (!data) return data;\n\n  if (isBuf(data)) {\n    var placeholder = { _placeholder: true, num: buffers.length };\n    buffers.push(data);\n    return placeholder;\n  } else if (isArray(data)) {\n    var newData = new Array(data.length);\n    for (var i = 0; i < data.length; i++) {\n      newData[i] = _deconstructPacket(data[i], buffers);\n    }\n    return newData;\n  } else if (typeof data === 'object' && !(data instanceof Date)) {\n    var newData = {};\n    for (var key in data) {\n      newData[key] = _deconstructPacket(data[key], buffers);\n    }\n    return newData;\n  }\n  return data;\n}\n\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @api public\n */\n\nexports.reconstructPacket = function(packet, buffers) {\n  packet.data = _reconstructPacket(packet.data, buffers);\n  packet.attachments = undefined; // no longer useful\n  return packet;\n};\n\nfunction _reconstructPacket(data, buffers) {\n  if (!data) return data;\n\n  if (data && data._placeholder === true) {\n    var isIndexValid =\n      typeof data.num === \"number\" &&\n      data.num >= 0 &&\n      data.num < buffers.length;\n    if (isIndexValid) {\n      return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n    } else {\n      throw new Error(\"illegal attachments\");\n    }\n  } else if (isArray(data)) {\n    for (var i = 0; i < data.length; i++) {\n      data[i] = _reconstructPacket(data[i], buffers);\n    }\n  } else if (typeof data === 'object') {\n    for (var key in data) {\n      data[key] = _reconstructPacket(data[key], buffers);\n    }\n  }\n\n  return data;\n}\n\n/**\n * Asynchronously removes Blobs or Files from data via\n * FileReader's readAsArrayBuffer method. Used before encoding\n * data as msgpack. Calls callback with the blobless data.\n *\n * @param {Object} data\n * @param {Function} callback\n * @api private\n */\n\nexports.removeBlobs = function(data, callback) {\n  function _removeBlobs(obj, curKey, containingObject) {\n    if (!obj) return obj;\n\n    // convert any blob\n    if ((withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File)) {\n      pendingBlobs++;\n\n      // async filereader\n      var fileReader = new FileReader();\n      fileReader.onload = function() { // this.result == arraybuffer\n        if (containingObject) {\n          containingObject[curKey] = this.result;\n        }\n        else {\n          bloblessData = this.result;\n        }\n\n        // if nothing pending its callback time\n        if(! --pendingBlobs) {\n          callback(bloblessData);\n        }\n      };\n\n      fileReader.readAsArrayBuffer(obj); // blob -> arraybuffer\n    } else if (isArray(obj)) { // handle array\n      for (var i = 0; i < obj.length; i++) {\n        _removeBlobs(obj[i], i, obj);\n      }\n    } else if (typeof obj === 'object' && !isBuf(obj)) { // and object\n      for (var key in obj) {\n        _removeBlobs(obj[key], key, obj);\n      }\n    }\n  }\n\n  var pendingBlobs = 0;\n  var bloblessData = data;\n  _removeBlobs(bloblessData);\n  if (!pendingBlobs) {\n    callback(bloblessData);\n  }\n};\n","\n/**\n * Module dependencies.\n */\n\nvar debug = require('debug')('socket.io-parser');\nvar Emitter = require('component-emitter');\nvar binary = require('./binary');\nvar isArray = require('isarray');\nvar isBuf = require('./is-buffer');\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nexports.protocol = 4;\n\n/**\n * Packet types.\n *\n * @api public\n */\n\nexports.types = [\n  'CONNECT',\n  'DISCONNECT',\n  'EVENT',\n  'ACK',\n  'ERROR',\n  'BINARY_EVENT',\n  'BINARY_ACK'\n];\n\n/**\n * Packet type `connect`.\n *\n * @api public\n */\n\nexports.CONNECT = 0;\n\n/**\n * Packet type `disconnect`.\n *\n * @api public\n */\n\nexports.DISCONNECT = 1;\n\n/**\n * Packet type `event`.\n *\n * @api public\n */\n\nexports.EVENT = 2;\n\n/**\n * Packet type `ack`.\n *\n * @api public\n */\n\nexports.ACK = 3;\n\n/**\n * Packet type `error`.\n *\n * @api public\n */\n\nexports.ERROR = 4;\n\n/**\n * Packet type 'binary event'\n *\n * @api public\n */\n\nexports.BINARY_EVENT = 5;\n\n/**\n * Packet type `binary ack`. For acks with binary arguments.\n *\n * @api public\n */\n\nexports.BINARY_ACK = 6;\n\n/**\n * Encoder constructor.\n *\n * @api public\n */\n\nexports.Encoder = Encoder;\n\n/**\n * Decoder constructor.\n *\n * @api public\n */\n\nexports.Decoder = Decoder;\n\n/**\n * A socket.io Encoder instance\n *\n * @api public\n */\n\nfunction Encoder() {}\n\nvar ERROR_PACKET = exports.ERROR + '\"encode error\"';\n\n/**\n * Encode a packet as a single string if non-binary, or as a\n * buffer sequence, depending on packet type.\n *\n * @param {Object} obj - packet object\n * @param {Function} callback - function to handle encodings (likely engine.write)\n * @return Calls callback with Array of encodings\n * @api public\n */\n\nEncoder.prototype.encode = function(obj, callback){\n  debug('encoding packet %j', obj);\n\n  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {\n    encodeAsBinary(obj, callback);\n  } else {\n    var encoding = encodeAsString(obj);\n    callback([encoding]);\n  }\n};\n\n/**\n * Encode packet as string.\n *\n * @param {Object} packet\n * @return {String} encoded\n * @api private\n */\n\nfunction encodeAsString(obj) {\n\n  // first is type\n  var str = '' + obj.type;\n\n  // attachments if we have them\n  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {\n    str += obj.attachments + '-';\n  }\n\n  // if we have a namespace other than `/`\n  // we append it followed by a comma `,`\n  if (obj.nsp && '/' !== obj.nsp) {\n    str += obj.nsp + ',';\n  }\n\n  // immediately followed by the id\n  if (null != obj.id) {\n    str += obj.id;\n  }\n\n  // json data\n  if (null != obj.data) {\n    var payload = tryStringify(obj.data);\n    if (payload !== false) {\n      str += payload;\n    } else {\n      return ERROR_PACKET;\n    }\n  }\n\n  debug('encoded %j as %s', obj, str);\n  return str;\n}\n\nfunction tryStringify(str) {\n  try {\n    return JSON.stringify(str);\n  } catch(e){\n    return false;\n  }\n}\n\n/**\n * Encode packet as 'buffer sequence' by removing blobs, and\n * deconstructing packet into object with placeholders and\n * a list of buffers.\n *\n * @param {Object} packet\n * @return {Buffer} encoded\n * @api private\n */\n\nfunction encodeAsBinary(obj, callback) {\n\n  function writeEncoding(bloblessData) {\n    var deconstruction = binary.deconstructPacket(bloblessData);\n    var pack = encodeAsString(deconstruction.packet);\n    var buffers = deconstruction.buffers;\n\n    buffers.unshift(pack); // add packet info to beginning of data list\n    callback(buffers); // write all the buffers\n  }\n\n  binary.removeBlobs(obj, writeEncoding);\n}\n\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n * @api public\n */\n\nfunction Decoder() {\n  this.reconstructor = null;\n}\n\n/**\n * Mix in `Emitter` with Decoder.\n */\n\nEmitter(Decoder.prototype);\n\n/**\n * Decodes an encoded packet string into packet JSON.\n *\n * @param {String} obj - encoded packet\n * @return {Object} packet\n * @api public\n */\n\nDecoder.prototype.add = function(obj) {\n  var packet;\n  if (typeof obj === 'string') {\n    if (this.reconstructor) {\n      throw new Error(\"got plaintext data when reconstructing a packet\");\n    }\n    packet = decodeString(obj);\n    if (exports.BINARY_EVENT === packet.type || exports.BINARY_ACK === packet.type) { // binary packet's json\n      this.reconstructor = new BinaryReconstructor(packet);\n\n      // no attachments, labeled binary but no binary data to follow\n      if (this.reconstructor.reconPack.attachments === 0) {\n        this.emit('decoded', packet);\n      }\n    } else { // non-binary full packet\n      this.emit('decoded', packet);\n    }\n  } else if (isBuf(obj) || obj.base64) { // raw binary data\n    if (!this.reconstructor) {\n      throw new Error('got binary data when not reconstructing a packet');\n    } else {\n      packet = this.reconstructor.takeBinaryData(obj);\n      if (packet) { // received final buffer\n        this.reconstructor = null;\n        this.emit('decoded', packet);\n      }\n    }\n  } else {\n    throw new Error('Unknown type: ' + obj);\n  }\n};\n\n/**\n * Decode a packet String (JSON data)\n *\n * @param {String} str\n * @return {Object} packet\n * @api private\n */\n\nfunction decodeString(str) {\n  var i = 0;\n  // look up type\n  var p = {\n    type: Number(str.charAt(0))\n  };\n\n  if (null == exports.types[p.type]) {\n    return error('unknown packet type ' + p.type);\n  }\n\n  // look up attachments if type binary\n  if (exports.BINARY_EVENT === p.type || exports.BINARY_ACK === p.type) {\n    var start = i + 1;\n    while (str.charAt(++i) !== '-' && i != str.length) {}\n    var buf = str.substring(start, i);\n    if (buf != Number(buf) || str.charAt(i) !== '-') {\n      throw new Error('Illegal attachments');\n    }\n    p.attachments = Number(buf);\n  }\n\n  // look up namespace (if any)\n  if ('/' === str.charAt(i + 1)) {\n    var start = i + 1;\n    while (++i) {\n      var c = str.charAt(i);\n      if (',' === c) break;\n      if (i === str.length) break;\n    }\n    p.nsp = str.substring(start, i);\n  } else {\n    p.nsp = '/';\n  }\n\n  // look up id\n  var next = str.charAt(i + 1);\n  if ('' !== next && Number(next) == next) {\n    var start = i + 1;\n    while (++i) {\n      var c = str.charAt(i);\n      if (null == c || Number(c) != c) {\n        --i;\n        break;\n      }\n      if (i === str.length) break;\n    }\n    p.id = Number(str.substring(start, i + 1));\n  }\n\n  // look up json data\n  if (str.charAt(++i)) {\n    var payload = tryParse(str.substr(i));\n    var isPayloadValid = payload !== false && (p.type === exports.ERROR || isArray(payload));\n    if (isPayloadValid) {\n      p.data = payload;\n    } else {\n      return error('invalid payload');\n    }\n  }\n\n  debug('decoded %s as %j', str, p);\n  return p;\n}\n\nfunction tryParse(str) {\n  try {\n    return JSON.parse(str);\n  } catch(e){\n    return false;\n  }\n}\n\n/**\n * Deallocates a parser's resources\n *\n * @api public\n */\n\nDecoder.prototype.destroy = function() {\n  if (this.reconstructor) {\n    this.reconstructor.finishedReconstruction();\n  }\n};\n\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n * @api private\n */\n\nfunction BinaryReconstructor(packet) {\n  this.reconPack = packet;\n  this.buffers = [];\n}\n\n/**\n * Method to be called when binary data received from connection\n * after a BINARY_EVENT packet.\n *\n * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n * @return {null | Object} returns null if more binary data is expected or\n *   a reconstructed packet object if all buffers have been received.\n * @api private\n */\n\nBinaryReconstructor.prototype.takeBinaryData = function(binData) {\n  this.buffers.push(binData);\n  if (this.buffers.length === this.reconPack.attachments) { // done with buffer list\n    var packet = binary.reconstructPacket(this.reconPack, this.buffers);\n    this.finishedReconstruction();\n    return packet;\n  }\n  return null;\n};\n\n/**\n * Cleans up binary packet reconstruction variables.\n *\n * @api private\n */\n\nBinaryReconstructor.prototype.finishedReconstruction = function() {\n  this.reconPack = null;\n  this.buffers = [];\n};\n\nfunction error(msg) {\n  return {\n    type: exports.ERROR,\n    data: 'parser error: ' + msg\n  };\n}\n","\n/**\n * Module exports.\n *\n * Logic borrowed from Modernizr:\n *\n *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n */\n\ntry {\n  module.exports = typeof XMLHttpRequest !== 'undefined' &&\n    'withCredentials' in new XMLHttpRequest();\n} catch (err) {\n  // if XMLHttp support is disabled in IE then it will throw\n  // when trying to create\n  module.exports = false;\n}\n","module.exports = (function () {\n  if (typeof self !== 'undefined') {\n    return self;\n  } else if (typeof window !== 'undefined') {\n    return window;\n  } else {\n    return Function('return this')(); // eslint-disable-line no-new-func\n  }\n})();\n","// browser shim for xmlhttprequest module\n\nvar hasCORS = require('has-cors');\nvar globalThis = require('../globalThis');\n\nmodule.exports = function (opts) {\n  var xdomain = opts.xdomain;\n\n  // scheme must be same when usign XDomainRequest\n  // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\n  var xscheme = opts.xscheme;\n\n  // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.\n  // https://github.com/Automattic/engine.io-client/pull/217\n  var enablesXDR = opts.enablesXDR;\n\n  // XMLHttpRequest can be disabled on IE\n  try {\n    if ('undefined' !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n      return new XMLHttpRequest();\n    }\n  } catch (e) { }\n\n  // Use XDomainRequest for IE8 if enablesXDR is true\n  // because loading bar keeps flashing when using jsonp-polling\n  // https://github.com/yujiosaka/socke.io-ie8-loading-example\n  try {\n    if ('undefined' !== typeof XDomainRequest && !xscheme && enablesXDR) {\n      return new XDomainRequest();\n    }\n  } catch (e) { }\n\n  if (!xdomain) {\n    try {\n      return new globalThis[['Active'].concat('Object').join('X')]('Microsoft.XMLHTTP');\n    } catch (e) { }\n  }\n};\n","\n/**\n * Gets the keys for an object.\n *\n * @return {Array} keys\n * @api private\n */\n\nmodule.exports = Object.keys || function keys (obj){\n  var arr = [];\n  var has = Object.prototype.hasOwnProperty;\n\n  for (var i in obj) {\n    if (has.call(obj, i)) {\n      arr.push(i);\n    }\n  }\n  return arr;\n};\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/* global Blob File */\n\n/*\n * Module requirements.\n */\n\nvar isArray = require('isarray');\n\nvar toString = Object.prototype.toString;\nvar withNativeBlob = typeof Blob === 'function' ||\n                        typeof Blob !== 'undefined' && toString.call(Blob) === '[object BlobConstructor]';\nvar withNativeFile = typeof File === 'function' ||\n                        typeof File !== 'undefined' && toString.call(File) === '[object FileConstructor]';\n\n/**\n * Module exports.\n */\n\nmodule.exports = hasBinary;\n\n/**\n * Checks for binary data.\n *\n * Supports Buffer, ArrayBuffer, Blob and File.\n *\n * @param {Object} anything\n * @api public\n */\n\nfunction hasBinary (obj) {\n  if (!obj || typeof obj !== 'object') {\n    return false;\n  }\n\n  if (isArray(obj)) {\n    for (var i = 0, l = obj.length; i < l; i++) {\n      if (hasBinary(obj[i])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  if ((typeof Buffer === 'function' && Buffer.isBuffer && Buffer.isBuffer(obj)) ||\n    (typeof ArrayBuffer === 'function' && obj instanceof ArrayBuffer) ||\n    (withNativeBlob && obj instanceof Blob) ||\n    (withNativeFile && obj instanceof File)\n  ) {\n    return true;\n  }\n\n  // see: https://github.com/Automattic/has-binary/pull/4\n  if (obj.toJSON && typeof obj.toJSON === 'function' && arguments.length === 1) {\n    return hasBinary(obj.toJSON(), true);\n  }\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n","/**\n * An abstraction for slicing an arraybuffer even when\n * ArrayBuffer.prototype.slice is not supported\n *\n * @api public\n */\n\nmodule.exports = function(arraybuffer, start, end) {\n  var bytes = arraybuffer.byteLength;\n  start = start || 0;\n  end = end || bytes;\n\n  if (arraybuffer.slice) { return arraybuffer.slice(start, end); }\n\n  if (start < 0) { start += bytes; }\n  if (end < 0) { end += bytes; }\n  if (end > bytes) { end = bytes; }\n\n  if (start >= bytes || start >= end || bytes === 0) {\n    return new ArrayBuffer(0);\n  }\n\n  var abv = new Uint8Array(arraybuffer);\n  var result = new Uint8Array(end - start);\n  for (var i = start, ii = 0; i < end; i++, ii++) {\n    result[ii] = abv[i];\n  }\n  return result.buffer;\n};\n","module.exports = after\n\nfunction after(count, callback, err_cb) {\n    var bail = false\n    err_cb = err_cb || noop\n    proxy.count = count\n\n    return (count === 0) ? callback() : proxy\n\n    function proxy(err, result) {\n        if (proxy.count <= 0) {\n            throw new Error('after called too many times')\n        }\n        --proxy.count\n\n        // after first error, rest are passed to err_cb\n        if (err) {\n            bail = true\n            callback(err)\n            // future error callbacks will go to error handler\n            callback = err_cb\n        } else if (proxy.count === 0 && !bail) {\n            callback(null, result)\n        }\n    }\n}\n\nfunction noop() {}\n","/*! https://mths.be/utf8js v2.1.2 by @mathias */\n\nvar stringFromCharCode = String.fromCharCode;\n\n// Taken from https://mths.be/punycode\nfunction ucs2decode(string) {\n\tvar output = [];\n\tvar counter = 0;\n\tvar length = string.length;\n\tvar value;\n\tvar extra;\n\twhile (counter < length) {\n\t\tvalue = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// high surrogate, and there is a next character\n\t\t\textra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n// Taken from https://mths.be/punycode\nfunction ucs2encode(array) {\n\tvar length = array.length;\n\tvar index = -1;\n\tvar value;\n\tvar output = '';\n\twhile (++index < length) {\n\t\tvalue = array[index];\n\t\tif (value > 0xFFFF) {\n\t\t\tvalue -= 0x10000;\n\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t}\n\t\toutput += stringFromCharCode(value);\n\t}\n\treturn output;\n}\n\nfunction checkScalarValue(codePoint, strict) {\n\tif (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n\t\tif (strict) {\n\t\t\tthrow Error(\n\t\t\t\t'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +\n\t\t\t\t' is not a scalar value'\n\t\t\t);\n\t\t}\n\t\treturn false;\n\t}\n\treturn true;\n}\n/*--------------------------------------------------------------------------*/\n\nfunction createByte(codePoint, shift) {\n\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\n}\n\nfunction encodeCodePoint(codePoint, strict) {\n\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\treturn stringFromCharCode(codePoint);\n\t}\n\tvar symbol = '';\n\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t}\n\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\tif (!checkScalarValue(codePoint, strict)) {\n\t\t\tcodePoint = 0xFFFD;\n\t\t}\n\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\tsymbol += createByte(codePoint, 6);\n\t}\n\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\tsymbol += createByte(codePoint, 12);\n\t\tsymbol += createByte(codePoint, 6);\n\t}\n\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\n\treturn symbol;\n}\n\nfunction utf8encode(string, opts) {\n\topts = opts || {};\n\tvar strict = false !== opts.strict;\n\n\tvar codePoints = ucs2decode(string);\n\tvar length = codePoints.length;\n\tvar index = -1;\n\tvar codePoint;\n\tvar byteString = '';\n\twhile (++index < length) {\n\t\tcodePoint = codePoints[index];\n\t\tbyteString += encodeCodePoint(codePoint, strict);\n\t}\n\treturn byteString;\n}\n\n/*--------------------------------------------------------------------------*/\n\nfunction readContinuationByte() {\n\tif (byteIndex >= byteCount) {\n\t\tthrow Error('Invalid byte index');\n\t}\n\n\tvar continuationByte = byteArray[byteIndex] & 0xFF;\n\tbyteIndex++;\n\n\tif ((continuationByte & 0xC0) == 0x80) {\n\t\treturn continuationByte & 0x3F;\n\t}\n\n\t// If we end up here, it’s not a continuation byte\n\tthrow Error('Invalid continuation byte');\n}\n\nfunction decodeSymbol(strict) {\n\tvar byte1;\n\tvar byte2;\n\tvar byte3;\n\tvar byte4;\n\tvar codePoint;\n\n\tif (byteIndex > byteCount) {\n\t\tthrow Error('Invalid byte index');\n\t}\n\n\tif (byteIndex == byteCount) {\n\t\treturn false;\n\t}\n\n\t// Read first byte\n\tbyte1 = byteArray[byteIndex] & 0xFF;\n\tbyteIndex++;\n\n\t// 1-byte sequence (no continuation bytes)\n\tif ((byte1 & 0x80) == 0) {\n\t\treturn byte1;\n\t}\n\n\t// 2-byte sequence\n\tif ((byte1 & 0xE0) == 0xC0) {\n\t\tbyte2 = readContinuationByte();\n\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\n\t\tif (codePoint >= 0x80) {\n\t\t\treturn codePoint;\n\t\t} else {\n\t\t\tthrow Error('Invalid continuation byte');\n\t\t}\n\t}\n\n\t// 3-byte sequence (may include unpaired surrogates)\n\tif ((byte1 & 0xF0) == 0xE0) {\n\t\tbyte2 = readContinuationByte();\n\t\tbyte3 = readContinuationByte();\n\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\n\t\tif (codePoint >= 0x0800) {\n\t\t\treturn checkScalarValue(codePoint, strict) ? codePoint : 0xFFFD;\n\t\t} else {\n\t\t\tthrow Error('Invalid continuation byte');\n\t\t}\n\t}\n\n\t// 4-byte sequence\n\tif ((byte1 & 0xF8) == 0xF0) {\n\t\tbyte2 = readContinuationByte();\n\t\tbyte3 = readContinuationByte();\n\t\tbyte4 = readContinuationByte();\n\t\tcodePoint = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0C) |\n\t\t\t(byte3 << 0x06) | byte4;\n\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\treturn codePoint;\n\t\t}\n\t}\n\n\tthrow Error('Invalid UTF-8 detected');\n}\n\nvar byteArray;\nvar byteCount;\nvar byteIndex;\nfunction utf8decode(byteString, opts) {\n\topts = opts || {};\n\tvar strict = false !== opts.strict;\n\n\tbyteArray = ucs2decode(byteString);\n\tbyteCount = byteArray.length;\n\tbyteIndex = 0;\n\tvar codePoints = [];\n\tvar tmp;\n\twhile ((tmp = decodeSymbol(strict)) !== false) {\n\t\tcodePoints.push(tmp);\n\t}\n\treturn ucs2encode(codePoints);\n}\n\nmodule.exports = {\n\tversion: '2.1.2',\n\tencode: utf8encode,\n\tdecode: utf8decode\n};\n","/*\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n(function(chars){\n  \"use strict\";\n\n  exports.encode = function(arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer),\n    i, len = bytes.length, base64 = \"\";\n\n    for (i = 0; i < len; i+=3) {\n      base64 += chars[bytes[i] >> 2];\n      base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n      base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n      base64 += chars[bytes[i + 2] & 63];\n    }\n\n    if ((len % 3) === 2) {\n      base64 = base64.substring(0, base64.length - 1) + \"=\";\n    } else if (len % 3 === 1) {\n      base64 = base64.substring(0, base64.length - 2) + \"==\";\n    }\n\n    return base64;\n  };\n\n  exports.decode =  function(base64) {\n    var bufferLength = base64.length * 0.75,\n    len = base64.length, i, p = 0,\n    encoded1, encoded2, encoded3, encoded4;\n\n    if (base64[base64.length - 1] === \"=\") {\n      bufferLength--;\n      if (base64[base64.length - 2] === \"=\") {\n        bufferLength--;\n      }\n    }\n\n    var arraybuffer = new ArrayBuffer(bufferLength),\n    bytes = new Uint8Array(arraybuffer);\n\n    for (i = 0; i < len; i+=4) {\n      encoded1 = chars.indexOf(base64[i]);\n      encoded2 = chars.indexOf(base64[i+1]);\n      encoded3 = chars.indexOf(base64[i+2]);\n      encoded4 = chars.indexOf(base64[i+3]);\n\n      bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n      bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n      bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n\n    return arraybuffer;\n  };\n})(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\");\n","/**\r\n * Create a blob builder even when vendor prefixes exist\r\n */\r\n\r\nvar BlobBuilder = typeof BlobBuilder !== 'undefined' ? BlobBuilder :\r\n  typeof WebKitBlobBuilder !== 'undefined' ? WebKitBlobBuilder :\r\n  typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder :\r\n  typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : \r\n  false;\r\n\r\n/**\r\n * Check if Blob constructor is supported\r\n */\r\n\r\nvar blobSupported = (function() {\r\n  try {\r\n    var a = new Blob(['hi']);\r\n    return a.size === 2;\r\n  } catch(e) {\r\n    return false;\r\n  }\r\n})();\r\n\r\n/**\r\n * Check if Blob constructor supports ArrayBufferViews\r\n * Fails in Safari 6, so we need to map to ArrayBuffers there.\r\n */\r\n\r\nvar blobSupportsArrayBufferView = blobSupported && (function() {\r\n  try {\r\n    var b = new Blob([new Uint8Array([1,2])]);\r\n    return b.size === 2;\r\n  } catch(e) {\r\n    return false;\r\n  }\r\n})();\r\n\r\n/**\r\n * Check if BlobBuilder is supported\r\n */\r\n\r\nvar blobBuilderSupported = BlobBuilder\r\n  && BlobBuilder.prototype.append\r\n  && BlobBuilder.prototype.getBlob;\r\n\r\n/**\r\n * Helper function that maps ArrayBufferViews to ArrayBuffers\r\n * Used by BlobBuilder constructor and old browsers that didn't\r\n * support it in the Blob constructor.\r\n */\r\n\r\nfunction mapArrayBufferViews(ary) {\r\n  return ary.map(function(chunk) {\r\n    if (chunk.buffer instanceof ArrayBuffer) {\r\n      var buf = chunk.buffer;\r\n\r\n      // if this is a subarray, make a copy so we only\r\n      // include the subarray region from the underlying buffer\r\n      if (chunk.byteLength !== buf.byteLength) {\r\n        var copy = new Uint8Array(chunk.byteLength);\r\n        copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));\r\n        buf = copy.buffer;\r\n      }\r\n\r\n      return buf;\r\n    }\r\n\r\n    return chunk;\r\n  });\r\n}\r\n\r\nfunction BlobBuilderConstructor(ary, options) {\r\n  options = options || {};\r\n\r\n  var bb = new BlobBuilder();\r\n  mapArrayBufferViews(ary).forEach(function(part) {\r\n    bb.append(part);\r\n  });\r\n\r\n  return (options.type) ? bb.getBlob(options.type) : bb.getBlob();\r\n};\r\n\r\nfunction BlobConstructor(ary, options) {\r\n  return new Blob(mapArrayBufferViews(ary), options || {});\r\n};\r\n\r\nif (typeof Blob !== 'undefined') {\r\n  BlobBuilderConstructor.prototype = Blob.prototype;\r\n  BlobConstructor.prototype = Blob.prototype;\r\n}\r\n\r\nmodule.exports = (function() {\r\n  if (blobSupported) {\r\n    return blobSupportsArrayBufferView ? Blob : BlobConstructor;\r\n  } else if (blobBuilderSupported) {\r\n    return BlobBuilderConstructor;\r\n  } else {\r\n    return undefined;\r\n  }\r\n})();\r\n","/**\n * Module dependencies.\n */\n\nvar keys = require('./keys');\nvar hasBinary = require('has-binary2');\nvar sliceBuffer = require('arraybuffer.slice');\nvar after = require('after');\nvar utf8 = require('./utf8');\n\nvar base64encoder;\nif (typeof ArrayBuffer !== 'undefined') {\n  base64encoder = require('base64-arraybuffer');\n}\n\n/**\n * Check if we are running an android browser. That requires us to use\n * ArrayBuffer with polling transports...\n *\n * http://ghinda.net/jpeg-blob-ajax-android/\n */\n\nvar isAndroid = typeof navigator !== 'undefined' && /Android/i.test(navigator.userAgent);\n\n/**\n * Check if we are running in PhantomJS.\n * Uploading a Blob with PhantomJS does not work correctly, as reported here:\n * https://github.com/ariya/phantomjs/issues/11395\n * @type boolean\n */\nvar isPhantomJS = typeof navigator !== 'undefined' && /PhantomJS/i.test(navigator.userAgent);\n\n/**\n * When true, avoids using Blobs to encode payloads.\n * @type boolean\n */\nvar dontSendBlobs = isAndroid || isPhantomJS;\n\n/**\n * Current protocol version.\n */\n\nexports.protocol = 3;\n\n/**\n * Packet types.\n */\n\nvar packets = exports.packets = {\n    open:     0    // non-ws\n  , close:    1    // non-ws\n  , ping:     2\n  , pong:     3\n  , message:  4\n  , upgrade:  5\n  , noop:     6\n};\n\nvar packetslist = keys(packets);\n\n/**\n * Premade error packet.\n */\n\nvar err = { type: 'error', data: 'parser error' };\n\n/**\n * Create a blob api even for blob builder when vendor prefixes exist\n */\n\nvar Blob = require('blob');\n\n/**\n * Encodes a packet.\n *\n *     <packet type id> [ <data> ]\n *\n * Example:\n *\n *     5hello world\n *     3\n *     4\n *\n * Binary is encoded in an identical principle\n *\n * @api private\n */\n\nexports.encodePacket = function (packet, supportsBinary, utf8encode, callback) {\n  if (typeof supportsBinary === 'function') {\n    callback = supportsBinary;\n    supportsBinary = false;\n  }\n\n  if (typeof utf8encode === 'function') {\n    callback = utf8encode;\n    utf8encode = null;\n  }\n\n  var data = (packet.data === undefined)\n    ? undefined\n    : packet.data.buffer || packet.data;\n\n  if (typeof ArrayBuffer !== 'undefined' && data instanceof ArrayBuffer) {\n    return encodeArrayBuffer(packet, supportsBinary, callback);\n  } else if (typeof Blob !== 'undefined' && data instanceof Blob) {\n    return encodeBlob(packet, supportsBinary, callback);\n  }\n\n  // might be an object with { base64: true, data: dataAsBase64String }\n  if (data && data.base64) {\n    return encodeBase64Object(packet, callback);\n  }\n\n  // Sending data as a utf-8 string\n  var encoded = packets[packet.type];\n\n  // data fragment is optional\n  if (undefined !== packet.data) {\n    encoded += utf8encode ? utf8.encode(String(packet.data), { strict: false }) : String(packet.data);\n  }\n\n  return callback('' + encoded);\n\n};\n\nfunction encodeBase64Object(packet, callback) {\n  // packet data is an object { base64: true, data: dataAsBase64String }\n  var message = 'b' + exports.packets[packet.type] + packet.data.data;\n  return callback(message);\n}\n\n/**\n * Encode packet helpers for binary types\n */\n\nfunction encodeArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var data = packet.data;\n  var contentArray = new Uint8Array(data);\n  var resultBuffer = new Uint8Array(1 + data.byteLength);\n\n  resultBuffer[0] = packets[packet.type];\n  for (var i = 0; i < contentArray.length; i++) {\n    resultBuffer[i+1] = contentArray[i];\n  }\n\n  return callback(resultBuffer.buffer);\n}\n\nfunction encodeBlobAsArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var fr = new FileReader();\n  fr.onload = function() {\n    exports.encodePacket({ type: packet.type, data: fr.result }, supportsBinary, true, callback);\n  };\n  return fr.readAsArrayBuffer(packet.data);\n}\n\nfunction encodeBlob(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  if (dontSendBlobs) {\n    return encodeBlobAsArrayBuffer(packet, supportsBinary, callback);\n  }\n\n  var length = new Uint8Array(1);\n  length[0] = packets[packet.type];\n  var blob = new Blob([length.buffer, packet.data]);\n\n  return callback(blob);\n}\n\n/**\n * Encodes a packet with binary data in a base64 string\n *\n * @param {Object} packet, has `type` and `data`\n * @return {String} base64 encoded message\n */\n\nexports.encodeBase64Packet = function(packet, callback) {\n  var message = 'b' + exports.packets[packet.type];\n  if (typeof Blob !== 'undefined' && packet.data instanceof Blob) {\n    var fr = new FileReader();\n    fr.onload = function() {\n      var b64 = fr.result.split(',')[1];\n      callback(message + b64);\n    };\n    return fr.readAsDataURL(packet.data);\n  }\n\n  var b64data;\n  try {\n    b64data = String.fromCharCode.apply(null, new Uint8Array(packet.data));\n  } catch (e) {\n    // iPhone Safari doesn't let you apply with typed arrays\n    var typed = new Uint8Array(packet.data);\n    var basic = new Array(typed.length);\n    for (var i = 0; i < typed.length; i++) {\n      basic[i] = typed[i];\n    }\n    b64data = String.fromCharCode.apply(null, basic);\n  }\n  message += btoa(b64data);\n  return callback(message);\n};\n\n/**\n * Decodes a packet. Changes format to Blob if requested.\n *\n * @return {Object} with `type` and `data` (if any)\n * @api private\n */\n\nexports.decodePacket = function (data, binaryType, utf8decode) {\n  if (data === undefined) {\n    return err;\n  }\n  // String data\n  if (typeof data === 'string') {\n    if (data.charAt(0) === 'b') {\n      return exports.decodeBase64Packet(data.substr(1), binaryType);\n    }\n\n    if (utf8decode) {\n      data = tryDecode(data);\n      if (data === false) {\n        return err;\n      }\n    }\n    var type = data.charAt(0);\n\n    if (Number(type) != type || !packetslist[type]) {\n      return err;\n    }\n\n    if (data.length > 1) {\n      return { type: packetslist[type], data: data.substring(1) };\n    } else {\n      return { type: packetslist[type] };\n    }\n  }\n\n  var asArray = new Uint8Array(data);\n  var type = asArray[0];\n  var rest = sliceBuffer(data, 1);\n  if (Blob && binaryType === 'blob') {\n    rest = new Blob([rest]);\n  }\n  return { type: packetslist[type], data: rest };\n};\n\nfunction tryDecode(data) {\n  try {\n    data = utf8.decode(data, { strict: false });\n  } catch (e) {\n    return false;\n  }\n  return data;\n}\n\n/**\n * Decodes a packet encoded in a base64 string\n *\n * @param {String} base64 encoded message\n * @return {Object} with `type` and `data` (if any)\n */\n\nexports.decodeBase64Packet = function(msg, binaryType) {\n  var type = packetslist[msg.charAt(0)];\n  if (!base64encoder) {\n    return { type: type, data: { base64: true, data: msg.substr(1) } };\n  }\n\n  var data = base64encoder.decode(msg.substr(1));\n\n  if (binaryType === 'blob' && Blob) {\n    data = new Blob([data]);\n  }\n\n  return { type: type, data: data };\n};\n\n/**\n * Encodes multiple messages (payload).\n *\n *     <length>:data\n *\n * Example:\n *\n *     11:hello world2:hi\n *\n * If any contents are binary, they will be encoded as base64 strings. Base64\n * encoded strings are marked with a b before the length specifier\n *\n * @param {Array} packets\n * @api private\n */\n\nexports.encodePayload = function (packets, supportsBinary, callback) {\n  if (typeof supportsBinary === 'function') {\n    callback = supportsBinary;\n    supportsBinary = null;\n  }\n\n  var isBinary = hasBinary(packets);\n\n  if (supportsBinary && isBinary) {\n    if (Blob && !dontSendBlobs) {\n      return exports.encodePayloadAsBlob(packets, callback);\n    }\n\n    return exports.encodePayloadAsArrayBuffer(packets, callback);\n  }\n\n  if (!packets.length) {\n    return callback('0:');\n  }\n\n  function setLengthHeader(message) {\n    return message.length + ':' + message;\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, !isBinary ? false : supportsBinary, false, function(message) {\n      doneCallback(null, setLengthHeader(message));\n    });\n  }\n\n  map(packets, encodeOne, function(err, results) {\n    return callback(results.join(''));\n  });\n};\n\n/**\n * Async array map using after\n */\n\nfunction map(ary, each, done) {\n  var result = new Array(ary.length);\n  var next = after(ary.length, done);\n\n  var eachWithIndex = function(i, el, cb) {\n    each(el, function(error, msg) {\n      result[i] = msg;\n      cb(error, result);\n    });\n  };\n\n  for (var i = 0; i < ary.length; i++) {\n    eachWithIndex(i, ary[i], next);\n  }\n}\n\n/*\n * Decodes data when a payload is maybe expected. Possible binary contents are\n * decoded from their base64 representation\n *\n * @param {String} data, callback method\n * @api public\n */\n\nexports.decodePayload = function (data, binaryType, callback) {\n  if (typeof data !== 'string') {\n    return exports.decodePayloadAsBinary(data, binaryType, callback);\n  }\n\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var packet;\n  if (data === '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n  var length = '', n, msg;\n\n  for (var i = 0, l = data.length; i < l; i++) {\n    var chr = data.charAt(i);\n\n    if (chr !== ':') {\n      length += chr;\n      continue;\n    }\n\n    if (length === '' || (length != (n = Number(length)))) {\n      // parser error - ignoring payload\n      return callback(err, 0, 1);\n    }\n\n    msg = data.substr(i + 1, n);\n\n    if (length != msg.length) {\n      // parser error - ignoring payload\n      return callback(err, 0, 1);\n    }\n\n    if (msg.length) {\n      packet = exports.decodePacket(msg, binaryType, false);\n\n      if (err.type === packet.type && err.data === packet.data) {\n        // parser error in individual packet - ignoring payload\n        return callback(err, 0, 1);\n      }\n\n      var ret = callback(packet, i + n, l);\n      if (false === ret) return;\n    }\n\n    // advance cursor\n    i += n;\n    length = '';\n  }\n\n  if (length !== '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n};\n\n/**\n * Encodes multiple messages (payload) as binary.\n *\n * <1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number\n * 255><data>\n *\n * Example:\n * 1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers\n *\n * @param {Array} packets\n * @return {ArrayBuffer} encoded payload\n * @api private\n */\n\nexports.encodePayloadAsArrayBuffer = function(packets, callback) {\n  if (!packets.length) {\n    return callback(new ArrayBuffer(0));\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function(data) {\n      return doneCallback(null, data);\n    });\n  }\n\n  map(packets, encodeOne, function(err, encodedPackets) {\n    var totalLength = encodedPackets.reduce(function(acc, p) {\n      var len;\n      if (typeof p === 'string'){\n        len = p.length;\n      } else {\n        len = p.byteLength;\n      }\n      return acc + len.toString().length + len + 2; // string/binary identifier + separator = 2\n    }, 0);\n\n    var resultArray = new Uint8Array(totalLength);\n\n    var bufferIndex = 0;\n    encodedPackets.forEach(function(p) {\n      var isString = typeof p === 'string';\n      var ab = p;\n      if (isString) {\n        var view = new Uint8Array(p.length);\n        for (var i = 0; i < p.length; i++) {\n          view[i] = p.charCodeAt(i);\n        }\n        ab = view.buffer;\n      }\n\n      if (isString) { // not true binary\n        resultArray[bufferIndex++] = 0;\n      } else { // true binary\n        resultArray[bufferIndex++] = 1;\n      }\n\n      var lenStr = ab.byteLength.toString();\n      for (var i = 0; i < lenStr.length; i++) {\n        resultArray[bufferIndex++] = parseInt(lenStr[i]);\n      }\n      resultArray[bufferIndex++] = 255;\n\n      var view = new Uint8Array(ab);\n      for (var i = 0; i < view.length; i++) {\n        resultArray[bufferIndex++] = view[i];\n      }\n    });\n\n    return callback(resultArray.buffer);\n  });\n};\n\n/**\n * Encode as Blob\n */\n\nexports.encodePayloadAsBlob = function(packets, callback) {\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function(encoded) {\n      var binaryIdentifier = new Uint8Array(1);\n      binaryIdentifier[0] = 1;\n      if (typeof encoded === 'string') {\n        var view = new Uint8Array(encoded.length);\n        for (var i = 0; i < encoded.length; i++) {\n          view[i] = encoded.charCodeAt(i);\n        }\n        encoded = view.buffer;\n        binaryIdentifier[0] = 0;\n      }\n\n      var len = (encoded instanceof ArrayBuffer)\n        ? encoded.byteLength\n        : encoded.size;\n\n      var lenStr = len.toString();\n      var lengthAry = new Uint8Array(lenStr.length + 1);\n      for (var i = 0; i < lenStr.length; i++) {\n        lengthAry[i] = parseInt(lenStr[i]);\n      }\n      lengthAry[lenStr.length] = 255;\n\n      if (Blob) {\n        var blob = new Blob([binaryIdentifier.buffer, lengthAry.buffer, encoded]);\n        doneCallback(null, blob);\n      }\n    });\n  }\n\n  map(packets, encodeOne, function(err, results) {\n    return callback(new Blob(results));\n  });\n};\n\n/*\n * Decodes data when a payload is maybe expected. Strings are decoded by\n * interpreting each byte as a key code for entries marked to start with 0. See\n * description of encodePayloadAsBinary\n *\n * @param {ArrayBuffer} data, callback method\n * @api public\n */\n\nexports.decodePayloadAsBinary = function (data, binaryType, callback) {\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var bufferTail = data;\n  var buffers = [];\n\n  while (bufferTail.byteLength > 0) {\n    var tailArray = new Uint8Array(bufferTail);\n    var isString = tailArray[0] === 0;\n    var msgLength = '';\n\n    for (var i = 1; ; i++) {\n      if (tailArray[i] === 255) break;\n\n      // 310 = char length of Number.MAX_VALUE\n      if (msgLength.length > 310) {\n        return callback(err, 0, 1);\n      }\n\n      msgLength += tailArray[i];\n    }\n\n    bufferTail = sliceBuffer(bufferTail, 2 + msgLength.length);\n    msgLength = parseInt(msgLength);\n\n    var msg = sliceBuffer(bufferTail, 0, msgLength);\n    if (isString) {\n      try {\n        msg = String.fromCharCode.apply(null, new Uint8Array(msg));\n      } catch (e) {\n        // iPhone Safari doesn't let you apply to typed arrays\n        var typed = new Uint8Array(msg);\n        msg = '';\n        for (var i = 0; i < typed.length; i++) {\n          msg += String.fromCharCode(typed[i]);\n        }\n      }\n    }\n\n    buffers.push(msg);\n    bufferTail = sliceBuffer(bufferTail, msgLength);\n  }\n\n  var total = buffers.length;\n  buffers.forEach(function(buffer, i) {\n    callback(exports.decodePacket(buffer, binaryType, true), i, total);\n  });\n};\n","/**\n * Module dependencies.\n */\n\nvar parser = require('engine.io-parser');\nvar Emitter = require('component-emitter');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Transport;\n\n/**\n * Transport abstract constructor.\n *\n * @param {Object} options.\n * @api private\n */\n\nfunction Transport (opts) {\n  this.path = opts.path;\n  this.hostname = opts.hostname;\n  this.port = opts.port;\n  this.secure = opts.secure;\n  this.query = opts.query;\n  this.timestampParam = opts.timestampParam;\n  this.timestampRequests = opts.timestampRequests;\n  this.readyState = '';\n  this.agent = opts.agent || false;\n  this.socket = opts.socket;\n  this.enablesXDR = opts.enablesXDR;\n  this.withCredentials = opts.withCredentials;\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n  this.forceNode = opts.forceNode;\n\n  // results of ReactNative environment detection\n  this.isReactNative = opts.isReactNative;\n\n  // other options for Node.js client\n  this.extraHeaders = opts.extraHeaders;\n  this.localAddress = opts.localAddress;\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Transport.prototype);\n\n/**\n * Emits an error.\n *\n * @param {String} str\n * @return {Transport} for chaining\n * @api public\n */\n\nTransport.prototype.onError = function (msg, desc) {\n  var err = new Error(msg);\n  err.type = 'TransportError';\n  err.description = desc;\n  this.emit('error', err);\n  return this;\n};\n\n/**\n * Opens the transport.\n *\n * @api public\n */\n\nTransport.prototype.open = function () {\n  if ('closed' === this.readyState || '' === this.readyState) {\n    this.readyState = 'opening';\n    this.doOpen();\n  }\n\n  return this;\n};\n\n/**\n * Closes the transport.\n *\n * @api private\n */\n\nTransport.prototype.close = function () {\n  if ('opening' === this.readyState || 'open' === this.readyState) {\n    this.doClose();\n    this.onClose();\n  }\n\n  return this;\n};\n\n/**\n * Sends multiple packets.\n *\n * @param {Array} packets\n * @api private\n */\n\nTransport.prototype.send = function (packets) {\n  if ('open' === this.readyState) {\n    this.write(packets);\n  } else {\n    throw new Error('Transport not open');\n  }\n};\n\n/**\n * Called upon open\n *\n * @api private\n */\n\nTransport.prototype.onOpen = function () {\n  this.readyState = 'open';\n  this.writable = true;\n  this.emit('open');\n};\n\n/**\n * Called with data.\n *\n * @param {String} data\n * @api private\n */\n\nTransport.prototype.onData = function (data) {\n  var packet = parser.decodePacket(data, this.socket.binaryType);\n  this.onPacket(packet);\n};\n\n/**\n * Called with a decoded packet.\n */\n\nTransport.prototype.onPacket = function (packet) {\n  this.emit('packet', packet);\n};\n\n/**\n * Called upon close.\n *\n * @api private\n */\n\nTransport.prototype.onClose = function () {\n  this.readyState = 'closed';\n  this.emit('close');\n};\n","/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\n\nexports.encode = function (obj) {\n  var str = '';\n\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      if (str.length) str += '&';\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n    }\n  }\n\n  return str;\n};\n\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\n\nexports.decode = function(qs){\n  var qry = {};\n  var pairs = qs.split('&');\n  for (var i = 0, l = pairs.length; i < l; i++) {\n    var pair = pairs[i].split('=');\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n  }\n  return qry;\n};\n","\nmodule.exports = function(a, b){\n  var fn = function(){};\n  fn.prototype = b.prototype;\n  a.prototype = new fn;\n  a.prototype.constructor = a;\n};","'use strict';\n\nvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')\n  , length = 64\n  , map = {}\n  , seed = 0\n  , i = 0\n  , prev;\n\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nfunction encode(num) {\n  var encoded = '';\n\n  do {\n    encoded = alphabet[num % length] + encoded;\n    num = Math.floor(num / length);\n  } while (num > 0);\n\n  return encoded;\n}\n\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nfunction decode(str) {\n  var decoded = 0;\n\n  for (i = 0; i < str.length; i++) {\n    decoded = decoded * length + map[str.charAt(i)];\n  }\n\n  return decoded;\n}\n\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nfunction yeast() {\n  var now = encode(+new Date());\n\n  if (now !== prev) return seed = 0, prev = now;\n  return now +'.'+ encode(seed++);\n}\n\n//\n// Map each character to its index.\n//\nfor (; i < length; i++) map[alphabet[i]] = i;\n\n//\n// Expose the `yeast`, `encode` and `decode` functions.\n//\nyeast.encode = encode;\nyeast.decode = decode;\nmodule.exports = yeast;\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * Active `debug` instances.\n */\nexports.instances = [];\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  var prevTime;\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n  debug.destroy = destroy;\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  exports.instances.push(debug);\n\n  return debug;\n}\n\nfunction destroy () {\n  var index = exports.instances.indexOf(this);\n  if (index !== -1) {\n    exports.instances.splice(index, 1);\n    return true;\n  } else {\n    return false;\n  }\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var i;\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n\n  for (i = 0; i < exports.instances.length; i++) {\n    var instance = exports.instances[i];\n    instance.enabled = exports.enabled(instance.namespace);\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  if (name[name.length - 1] === '*') {\n    return true;\n  }\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  '#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC',\n  '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF',\n  '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC',\n  '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF',\n  '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC',\n  '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033',\n  '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366',\n  '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933',\n  '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC',\n  '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF',\n  '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // Internet Explorer and Edge do not support colors.\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n    return false;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n","/**\n * Module dependencies.\n */\n\nvar Transport = require('../transport');\nvar parseqs = require('parseqs');\nvar parser = require('engine.io-parser');\nvar inherit = require('component-inherit');\nvar yeast = require('yeast');\nvar debug = require('debug')('engine.io-client:polling');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Polling;\n\n/**\n * Is XHR2 supported?\n */\n\nvar hasXHR2 = (function () {\n  var XMLHttpRequest = require('./xmlhttprequest');\n  var xhr = new XMLHttpRequest({ xdomain: false });\n  return null != xhr.responseType;\n})();\n\n/**\n * Polling interface.\n *\n * @param {Object} opts\n * @api private\n */\n\nfunction Polling (opts) {\n  var forceBase64 = (opts && opts.forceBase64);\n  if (!hasXHR2 || forceBase64) {\n    this.supportsBinary = false;\n  }\n  Transport.call(this, opts);\n}\n\n/**\n * Inherits from Transport.\n */\n\ninherit(Polling, Transport);\n\n/**\n * Transport name.\n */\n\nPolling.prototype.name = 'polling';\n\n/**\n * Opens the socket (triggers polling). We write a PING message to determine\n * when the transport is open.\n *\n * @api private\n */\n\nPolling.prototype.doOpen = function () {\n  this.poll();\n};\n\n/**\n * Pauses polling.\n *\n * @param {Function} callback upon buffers are flushed and transport is paused\n * @api private\n */\n\nPolling.prototype.pause = function (onPause) {\n  var self = this;\n\n  this.readyState = 'pausing';\n\n  function pause () {\n    debug('paused');\n    self.readyState = 'paused';\n    onPause();\n  }\n\n  if (this.polling || !this.writable) {\n    var total = 0;\n\n    if (this.polling) {\n      debug('we are currently polling - waiting to pause');\n      total++;\n      this.once('pollComplete', function () {\n        debug('pre-pause polling complete');\n        --total || pause();\n      });\n    }\n\n    if (!this.writable) {\n      debug('we are currently writing - waiting to pause');\n      total++;\n      this.once('drain', function () {\n        debug('pre-pause writing complete');\n        --total || pause();\n      });\n    }\n  } else {\n    pause();\n  }\n};\n\n/**\n * Starts polling cycle.\n *\n * @api public\n */\n\nPolling.prototype.poll = function () {\n  debug('polling');\n  this.polling = true;\n  this.doPoll();\n  this.emit('poll');\n};\n\n/**\n * Overloads onData to detect payloads.\n *\n * @api private\n */\n\nPolling.prototype.onData = function (data) {\n  var self = this;\n  debug('polling got data %s', data);\n  var callback = function (packet, index, total) {\n    // if its the first message we consider the transport open\n    if ('opening' === self.readyState && packet.type === 'open') {\n      self.onOpen();\n    }\n\n    // if its a close packet, we close the ongoing requests\n    if ('close' === packet.type) {\n      self.onClose();\n      return false;\n    }\n\n    // otherwise bypass onData and handle the message\n    self.onPacket(packet);\n  };\n\n  // decode payload\n  parser.decodePayload(data, this.socket.binaryType, callback);\n\n  // if an event did not trigger closing\n  if ('closed' !== this.readyState) {\n    // if we got data we're not polling\n    this.polling = false;\n    this.emit('pollComplete');\n\n    if ('open' === this.readyState) {\n      this.poll();\n    } else {\n      debug('ignoring poll - transport state \"%s\"', this.readyState);\n    }\n  }\n};\n\n/**\n * For polling, send a close packet.\n *\n * @api private\n */\n\nPolling.prototype.doClose = function () {\n  var self = this;\n\n  function close () {\n    debug('writing close packet');\n    self.write([{ type: 'close' }]);\n  }\n\n  if ('open' === this.readyState) {\n    debug('transport open - closing');\n    close();\n  } else {\n    // in case we're trying to close while\n    // handshaking is in progress (GH-164)\n    debug('transport not open - deferring close');\n    this.once('open', close);\n  }\n};\n\n/**\n * Writes a packets payload.\n *\n * @param {Array} data packets\n * @param {Function} drain callback\n * @api private\n */\n\nPolling.prototype.write = function (packets) {\n  var self = this;\n  this.writable = false;\n  var callbackfn = function () {\n    self.writable = true;\n    self.emit('drain');\n  };\n\n  parser.encodePayload(packets, this.supportsBinary, function (data) {\n    self.doWrite(data, callbackfn);\n  });\n};\n\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\nPolling.prototype.uri = function () {\n  var query = this.query || {};\n  var schema = this.secure ? 'https' : 'http';\n  var port = '';\n\n  // cache busting is forced\n  if (false !== this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  }\n\n  if (!this.supportsBinary && !query.sid) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query);\n\n  // avoid port if default for schema\n  if (this.port && (('https' === schema && Number(this.port) !== 443) ||\n     ('http' === schema && Number(this.port) !== 80))) {\n    port = ':' + this.port;\n  }\n\n  // prepend ? to query\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};\n","/* global attachEvent */\n\n/**\n * Module requirements.\n */\n\nvar XMLHttpRequest = require('./xmlhttprequest');\nvar Polling = require('./polling');\nvar Emitter = require('component-emitter');\nvar inherit = require('component-inherit');\nvar debug = require('debug')('engine.io-client:polling-xhr');\nvar globalThis = require('../globalThis');\n\n/**\n * Module exports.\n */\n\nmodule.exports = XHR;\nmodule.exports.Request = Request;\n\n/**\n * Empty function\n */\n\nfunction empty () {}\n\n/**\n * XHR Polling constructor.\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction XHR (opts) {\n  Polling.call(this, opts);\n  this.requestTimeout = opts.requestTimeout;\n  this.extraHeaders = opts.extraHeaders;\n\n  if (typeof location !== 'undefined') {\n    var isSSL = 'https:' === location.protocol;\n    var port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    this.xd = (typeof location !== 'undefined' && opts.hostname !== location.hostname) ||\n      port !== opts.port;\n    this.xs = opts.secure !== isSSL;\n  }\n}\n\n/**\n * Inherits from Polling.\n */\n\ninherit(XHR, Polling);\n\n/**\n * XHR supports binary\n */\n\nXHR.prototype.supportsBinary = true;\n\n/**\n * Creates a request.\n *\n * @param {String} method\n * @api private\n */\n\nXHR.prototype.request = function (opts) {\n  opts = opts || {};\n  opts.uri = this.uri();\n  opts.xd = this.xd;\n  opts.xs = this.xs;\n  opts.agent = this.agent || false;\n  opts.supportsBinary = this.supportsBinary;\n  opts.enablesXDR = this.enablesXDR;\n  opts.withCredentials = this.withCredentials;\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n  opts.requestTimeout = this.requestTimeout;\n\n  // other options for Node.js client\n  opts.extraHeaders = this.extraHeaders;\n\n  return new Request(opts);\n};\n\n/**\n * Sends data.\n *\n * @param {String} data to send.\n * @param {Function} called upon flush.\n * @api private\n */\n\nXHR.prototype.doWrite = function (data, fn) {\n  var isBinary = typeof data !== 'string' && data !== undefined;\n  var req = this.request({ method: 'POST', data: data, isBinary: isBinary });\n  var self = this;\n  req.on('success', fn);\n  req.on('error', function (err) {\n    self.onError('xhr post error', err);\n  });\n  this.sendXhr = req;\n};\n\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\nXHR.prototype.doPoll = function () {\n  debug('xhr poll');\n  var req = this.request();\n  var self = this;\n  req.on('data', function (data) {\n    self.onData(data);\n  });\n  req.on('error', function (err) {\n    self.onError('xhr poll error', err);\n  });\n  this.pollXhr = req;\n};\n\n/**\n * Request constructor\n *\n * @param {Object} options\n * @api public\n */\n\nfunction Request (opts) {\n  this.method = opts.method || 'GET';\n  this.uri = opts.uri;\n  this.xd = !!opts.xd;\n  this.xs = !!opts.xs;\n  this.async = false !== opts.async;\n  this.data = undefined !== opts.data ? opts.data : null;\n  this.agent = opts.agent;\n  this.isBinary = opts.isBinary;\n  this.supportsBinary = opts.supportsBinary;\n  this.enablesXDR = opts.enablesXDR;\n  this.withCredentials = opts.withCredentials;\n  this.requestTimeout = opts.requestTimeout;\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n\n  // other options for Node.js client\n  this.extraHeaders = opts.extraHeaders;\n\n  this.create();\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Request.prototype);\n\n/**\n * Creates the XHR object and sends the request.\n *\n * @api private\n */\n\nRequest.prototype.create = function () {\n  var opts = { agent: this.agent, xdomain: this.xd, xscheme: this.xs, enablesXDR: this.enablesXDR };\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n\n  var xhr = this.xhr = new XMLHttpRequest(opts);\n  var self = this;\n\n  try {\n    debug('xhr open %s: %s', this.method, this.uri);\n    xhr.open(this.method, this.uri, this.async);\n    try {\n      if (this.extraHeaders) {\n        xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n        for (var i in this.extraHeaders) {\n          if (this.extraHeaders.hasOwnProperty(i)) {\n            xhr.setRequestHeader(i, this.extraHeaders[i]);\n          }\n        }\n      }\n    } catch (e) {}\n\n    if ('POST' === this.method) {\n      try {\n        if (this.isBinary) {\n          xhr.setRequestHeader('Content-type', 'application/octet-stream');\n        } else {\n          xhr.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');\n        }\n      } catch (e) {}\n    }\n\n    try {\n      xhr.setRequestHeader('Accept', '*/*');\n    } catch (e) {}\n\n    // ie6 check\n    if ('withCredentials' in xhr) {\n      xhr.withCredentials = this.withCredentials;\n    }\n\n    if (this.requestTimeout) {\n      xhr.timeout = this.requestTimeout;\n    }\n\n    if (this.hasXDR()) {\n      xhr.onload = function () {\n        self.onLoad();\n      };\n      xhr.onerror = function () {\n        self.onError(xhr.responseText);\n      };\n    } else {\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState === 2) {\n          try {\n            var contentType = xhr.getResponseHeader('Content-Type');\n            if (self.supportsBinary && contentType === 'application/octet-stream' || contentType === 'application/octet-stream; charset=UTF-8') {\n              xhr.responseType = 'arraybuffer';\n            }\n          } catch (e) {}\n        }\n        if (4 !== xhr.readyState) return;\n        if (200 === xhr.status || 1223 === xhr.status) {\n          self.onLoad();\n        } else {\n          // make sure the `error` event handler that's user-set\n          // does not throw in the same tick and gets caught here\n          setTimeout(function () {\n            self.onError(typeof xhr.status === 'number' ? xhr.status : 0);\n          }, 0);\n        }\n      };\n    }\n\n    debug('xhr data %s', this.data);\n    xhr.send(this.data);\n  } catch (e) {\n    // Need to defer since .create() is called directly fhrom the constructor\n    // and thus the 'error' event can only be only bound *after* this exception\n    // occurs.  Therefore, also, we cannot throw here at all.\n    setTimeout(function () {\n      self.onError(e);\n    }, 0);\n    return;\n  }\n\n  if (typeof document !== 'undefined') {\n    this.index = Request.requestsCount++;\n    Request.requests[this.index] = this;\n  }\n};\n\n/**\n * Called upon successful response.\n *\n * @api private\n */\n\nRequest.prototype.onSuccess = function () {\n  this.emit('success');\n  this.cleanup();\n};\n\n/**\n * Called if we have data.\n *\n * @api private\n */\n\nRequest.prototype.onData = function (data) {\n  this.emit('data', data);\n  this.onSuccess();\n};\n\n/**\n * Called upon error.\n *\n * @api private\n */\n\nRequest.prototype.onError = function (err) {\n  this.emit('error', err);\n  this.cleanup(true);\n};\n\n/**\n * Cleans up house.\n *\n * @api private\n */\n\nRequest.prototype.cleanup = function (fromError) {\n  if ('undefined' === typeof this.xhr || null === this.xhr) {\n    return;\n  }\n  // xmlhttprequest\n  if (this.hasXDR()) {\n    this.xhr.onload = this.xhr.onerror = empty;\n  } else {\n    this.xhr.onreadystatechange = empty;\n  }\n\n  if (fromError) {\n    try {\n      this.xhr.abort();\n    } catch (e) {}\n  }\n\n  if (typeof document !== 'undefined') {\n    delete Request.requests[this.index];\n  }\n\n  this.xhr = null;\n};\n\n/**\n * Called upon load.\n *\n * @api private\n */\n\nRequest.prototype.onLoad = function () {\n  var data;\n  try {\n    var contentType;\n    try {\n      contentType = this.xhr.getResponseHeader('Content-Type');\n    } catch (e) {}\n    if (contentType === 'application/octet-stream' || contentType === 'application/octet-stream; charset=UTF-8') {\n      data = this.xhr.response || this.xhr.responseText;\n    } else {\n      data = this.xhr.responseText;\n    }\n  } catch (e) {\n    this.onError(e);\n  }\n  if (null != data) {\n    this.onData(data);\n  }\n};\n\n/**\n * Check if it has XDomainRequest.\n *\n * @api private\n */\n\nRequest.prototype.hasXDR = function () {\n  return typeof XDomainRequest !== 'undefined' && !this.xs && this.enablesXDR;\n};\n\n/**\n * Aborts the request.\n *\n * @api public\n */\n\nRequest.prototype.abort = function () {\n  this.cleanup();\n};\n\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\n\nRequest.requestsCount = 0;\nRequest.requests = {};\n\nif (typeof document !== 'undefined') {\n  if (typeof attachEvent === 'function') {\n    attachEvent('onunload', unloadHandler);\n  } else if (typeof addEventListener === 'function') {\n    var terminationEvent = 'onpagehide' in globalThis ? 'pagehide' : 'unload';\n    addEventListener(terminationEvent, unloadHandler, false);\n  }\n}\n\nfunction unloadHandler () {\n  for (var i in Request.requests) {\n    if (Request.requests.hasOwnProperty(i)) {\n      Request.requests[i].abort();\n    }\n  }\n}\n","/**\n * Module requirements.\n */\n\nvar Polling = require('./polling');\nvar inherit = require('component-inherit');\nvar globalThis = require('../globalThis');\n\n/**\n * Module exports.\n */\n\nmodule.exports = JSONPPolling;\n\n/**\n * Cached regular expressions.\n */\n\nvar rNewline = /\\n/g;\nvar rEscapedNewline = /\\\\n/g;\n\n/**\n * Global JSONP callbacks.\n */\n\nvar callbacks;\n\n/**\n * Noop.\n */\n\nfunction empty () { }\n\n/**\n * JSONP Polling constructor.\n *\n * @param {Object} opts.\n * @api public\n */\n\nfunction JSONPPolling (opts) {\n  Polling.call(this, opts);\n\n  this.query = this.query || {};\n\n  // define global callbacks array if not present\n  // we do this here (lazily) to avoid unneeded global pollution\n  if (!callbacks) {\n    // we need to consider multiple engines in the same page\n    callbacks = globalThis.___eio = (globalThis.___eio || []);\n  }\n\n  // callback identifier\n  this.index = callbacks.length;\n\n  // add callback to jsonp global\n  var self = this;\n  callbacks.push(function (msg) {\n    self.onData(msg);\n  });\n\n  // append to query string\n  this.query.j = this.index;\n\n  // prevent spurious errors from being emitted when the window is unloaded\n  if (typeof addEventListener === 'function') {\n    addEventListener('beforeunload', function () {\n      if (self.script) self.script.onerror = empty;\n    }, false);\n  }\n}\n\n/**\n * Inherits from Polling.\n */\n\ninherit(JSONPPolling, Polling);\n\n/*\n * JSONP only supports binary as base64 encoded strings\n */\n\nJSONPPolling.prototype.supportsBinary = false;\n\n/**\n * Closes the socket.\n *\n * @api private\n */\n\nJSONPPolling.prototype.doClose = function () {\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  if (this.form) {\n    this.form.parentNode.removeChild(this.form);\n    this.form = null;\n    this.iframe = null;\n  }\n\n  Polling.prototype.doClose.call(this);\n};\n\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\nJSONPPolling.prototype.doPoll = function () {\n  var self = this;\n  var script = document.createElement('script');\n\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  script.async = true;\n  script.src = this.uri();\n  script.onerror = function (e) {\n    self.onError('jsonp poll error', e);\n  };\n\n  var insertAt = document.getElementsByTagName('script')[0];\n  if (insertAt) {\n    insertAt.parentNode.insertBefore(script, insertAt);\n  } else {\n    (document.head || document.body).appendChild(script);\n  }\n  this.script = script;\n\n  var isUAgecko = 'undefined' !== typeof navigator && /gecko/i.test(navigator.userAgent);\n\n  if (isUAgecko) {\n    setTimeout(function () {\n      var iframe = document.createElement('iframe');\n      document.body.appendChild(iframe);\n      document.body.removeChild(iframe);\n    }, 100);\n  }\n};\n\n/**\n * Writes with a hidden iframe.\n *\n * @param {String} data to send\n * @param {Function} called upon flush.\n * @api private\n */\n\nJSONPPolling.prototype.doWrite = function (data, fn) {\n  var self = this;\n\n  if (!this.form) {\n    var form = document.createElement('form');\n    var area = document.createElement('textarea');\n    var id = this.iframeId = 'eio_iframe_' + this.index;\n    var iframe;\n\n    form.className = 'socketio';\n    form.style.position = 'absolute';\n    form.style.top = '-1000px';\n    form.style.left = '-1000px';\n    form.target = id;\n    form.method = 'POST';\n    form.setAttribute('accept-charset', 'utf-8');\n    area.name = 'd';\n    form.appendChild(area);\n    document.body.appendChild(form);\n\n    this.form = form;\n    this.area = area;\n  }\n\n  this.form.action = this.uri();\n\n  function complete () {\n    initIframe();\n    fn();\n  }\n\n  function initIframe () {\n    if (self.iframe) {\n      try {\n        self.form.removeChild(self.iframe);\n      } catch (e) {\n        self.onError('jsonp polling iframe removal error', e);\n      }\n    }\n\n    try {\n      // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\n      var html = '<iframe src=\"javascript:0\" name=\"' + self.iframeId + '\">';\n      iframe = document.createElement(html);\n    } catch (e) {\n      iframe = document.createElement('iframe');\n      iframe.name = self.iframeId;\n      iframe.src = 'javascript:0';\n    }\n\n    iframe.id = self.iframeId;\n\n    self.form.appendChild(iframe);\n    self.iframe = iframe;\n  }\n\n  initIframe();\n\n  // escape \\n to prevent it from being converted into \\r\\n by some UAs\n  // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side\n  data = data.replace(rEscapedNewline, '\\\\\\n');\n  this.area.value = data.replace(rNewline, '\\\\n');\n\n  try {\n    this.form.submit();\n  } catch (e) {}\n\n  if (this.iframe.attachEvent) {\n    this.iframe.onreadystatechange = function () {\n      if (self.iframe.readyState === 'complete') {\n        complete();\n      }\n    };\n  } else {\n    this.iframe.onload = complete;\n  }\n};\n","/**\n * Module dependencies.\n */\n\nvar Transport = require('../transport');\nvar parser = require('engine.io-parser');\nvar parseqs = require('parseqs');\nvar inherit = require('component-inherit');\nvar yeast = require('yeast');\nvar debug = require('debug')('engine.io-client:websocket');\n\nvar BrowserWebSocket, NodeWebSocket;\n\nif (typeof WebSocket !== 'undefined') {\n  BrowserWebSocket = WebSocket;\n} else if (typeof self !== 'undefined') {\n  BrowserWebSocket = self.WebSocket || self.MozWebSocket;\n}\n\nif (typeof window === 'undefined') {\n  try {\n    NodeWebSocket = require('ws');\n  } catch (e) { }\n}\n\n/**\n * Get either the `WebSocket` or `MozWebSocket` globals\n * in the browser or try to resolve WebSocket-compatible\n * interface exposed by `ws` for Node-like environment.\n */\n\nvar WebSocketImpl = BrowserWebSocket || NodeWebSocket;\n\n/**\n * Module exports.\n */\n\nmodule.exports = WS;\n\n/**\n * WebSocket transport constructor.\n *\n * @api {Object} connection options\n * @api public\n */\n\nfunction WS (opts) {\n  var forceBase64 = (opts && opts.forceBase64);\n  if (forceBase64) {\n    this.supportsBinary = false;\n  }\n  this.perMessageDeflate = opts.perMessageDeflate;\n  this.usingBrowserWebSocket = BrowserWebSocket && !opts.forceNode;\n  this.protocols = opts.protocols;\n  if (!this.usingBrowserWebSocket) {\n    WebSocketImpl = NodeWebSocket;\n  }\n  Transport.call(this, opts);\n}\n\n/**\n * Inherits from Transport.\n */\n\ninherit(WS, Transport);\n\n/**\n * Transport name.\n *\n * @api public\n */\n\nWS.prototype.name = 'websocket';\n\n/*\n * WebSockets support binary\n */\n\nWS.prototype.supportsBinary = true;\n\n/**\n * Opens socket.\n *\n * @api private\n */\n\nWS.prototype.doOpen = function () {\n  if (!this.check()) {\n    // let probe timeout\n    return;\n  }\n\n  var uri = this.uri();\n  var protocols = this.protocols;\n\n  var opts = {};\n\n  if (!this.isReactNative) {\n    opts.agent = this.agent;\n    opts.perMessageDeflate = this.perMessageDeflate;\n\n    // SSL options for Node.js client\n    opts.pfx = this.pfx;\n    opts.key = this.key;\n    opts.passphrase = this.passphrase;\n    opts.cert = this.cert;\n    opts.ca = this.ca;\n    opts.ciphers = this.ciphers;\n    opts.rejectUnauthorized = this.rejectUnauthorized;\n  }\n\n  if (this.extraHeaders) {\n    opts.headers = this.extraHeaders;\n  }\n  if (this.localAddress) {\n    opts.localAddress = this.localAddress;\n  }\n\n  try {\n    this.ws =\n      this.usingBrowserWebSocket && !this.isReactNative\n        ? protocols\n          ? new WebSocketImpl(uri, protocols)\n          : new WebSocketImpl(uri)\n        : new WebSocketImpl(uri, protocols, opts);\n  } catch (err) {\n    return this.emit('error', err);\n  }\n\n  if (this.ws.binaryType === undefined) {\n    this.supportsBinary = false;\n  }\n\n  if (this.ws.supports && this.ws.supports.binary) {\n    this.supportsBinary = true;\n    this.ws.binaryType = 'nodebuffer';\n  } else {\n    this.ws.binaryType = 'arraybuffer';\n  }\n\n  this.addEventListeners();\n};\n\n/**\n * Adds event listeners to the socket\n *\n * @api private\n */\n\nWS.prototype.addEventListeners = function () {\n  var self = this;\n\n  this.ws.onopen = function () {\n    self.onOpen();\n  };\n  this.ws.onclose = function () {\n    self.onClose();\n  };\n  this.ws.onmessage = function (ev) {\n    self.onData(ev.data);\n  };\n  this.ws.onerror = function (e) {\n    self.onError('websocket error', e);\n  };\n};\n\n/**\n * Writes data to socket.\n *\n * @param {Array} array of packets.\n * @api private\n */\n\nWS.prototype.write = function (packets) {\n  var self = this;\n  this.writable = false;\n\n  // encodePacket efficient as it uses WS framing\n  // no need for encodePayload\n  var total = packets.length;\n  for (var i = 0, l = total; i < l; i++) {\n    (function (packet) {\n      parser.encodePacket(packet, self.supportsBinary, function (data) {\n        if (!self.usingBrowserWebSocket) {\n          // always create a new object (GH-437)\n          var opts = {};\n          if (packet.options) {\n            opts.compress = packet.options.compress;\n          }\n\n          if (self.perMessageDeflate) {\n            var len = 'string' === typeof data ? Buffer.byteLength(data) : data.length;\n            if (len < self.perMessageDeflate.threshold) {\n              opts.compress = false;\n            }\n          }\n        }\n\n        // Sometimes the websocket has already been closed but the browser didn't\n        // have a chance of informing us about it yet, in that case send will\n        // throw an error\n        try {\n          if (self.usingBrowserWebSocket) {\n            // TypeError is thrown when passing the second argument on Safari\n            self.ws.send(data);\n          } else {\n            self.ws.send(data, opts);\n          }\n        } catch (e) {\n          debug('websocket closed before onclose event');\n        }\n\n        --total || done();\n      });\n    })(packets[i]);\n  }\n\n  function done () {\n    self.emit('flush');\n\n    // fake drain\n    // defer to next tick to allow Socket to clear writeBuffer\n    setTimeout(function () {\n      self.writable = true;\n      self.emit('drain');\n    }, 0);\n  }\n};\n\n/**\n * Called upon close\n *\n * @api private\n */\n\nWS.prototype.onClose = function () {\n  Transport.prototype.onClose.call(this);\n};\n\n/**\n * Closes socket.\n *\n * @api private\n */\n\nWS.prototype.doClose = function () {\n  if (typeof this.ws !== 'undefined') {\n    this.ws.close();\n  }\n};\n\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\nWS.prototype.uri = function () {\n  var query = this.query || {};\n  var schema = this.secure ? 'wss' : 'ws';\n  var port = '';\n\n  // avoid port if default for schema\n  if (this.port && (('wss' === schema && Number(this.port) !== 443) ||\n    ('ws' === schema && Number(this.port) !== 80))) {\n    port = ':' + this.port;\n  }\n\n  // append timestamp to URI\n  if (this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  }\n\n  // communicate binary support capabilities\n  if (!this.supportsBinary) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query);\n\n  // prepend ? to query\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};\n\n/**\n * Feature detection for WebSocket.\n *\n * @return {Boolean} whether this transport is available.\n * @api public\n */\n\nWS.prototype.check = function () {\n  return !!WebSocketImpl && !('__initialize' in WebSocketImpl && this.name === WS.prototype.name);\n};\n","/**\n * Module dependencies\n */\n\nvar XMLHttpRequest = require('./xmlhttprequest');\nvar XHR = require('./polling-xhr');\nvar JSONP = require('./polling-jsonp');\nvar websocket = require('./websocket');\n\n/**\n * Export transports.\n */\n\nexports.polling = polling;\nexports.websocket = websocket;\n\n/**\n * Polling transport polymorphic constructor.\n * Decides on xhr vs jsonp based on feature detection.\n *\n * @api private\n */\n\nfunction polling (opts) {\n  var xhr;\n  var xd = false;\n  var xs = false;\n  var jsonp = false !== opts.jsonp;\n\n  if (typeof location !== 'undefined') {\n    var isSSL = 'https:' === location.protocol;\n    var port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    xd = opts.hostname !== location.hostname || port !== opts.port;\n    xs = opts.secure !== isSSL;\n  }\n\n  opts.xdomain = xd;\n  opts.xscheme = xs;\n  xhr = new XMLHttpRequest(opts);\n\n  if ('open' in xhr && !opts.forceJSONP) {\n    return new XHR(opts);\n  } else {\n    if (!jsonp) throw new Error('JSONP disabled');\n    return new JSONP(opts);\n  }\n}\n","\nvar indexOf = [].indexOf;\n\nmodule.exports = function(arr, obj){\n  if (indexOf) return arr.indexOf(obj);\n  for (var i = 0; i < arr.length; ++i) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n};","/**\n * Module dependencies.\n */\n\nvar transports = require('./transports/index');\nvar Emitter = require('component-emitter');\nvar debug = require('debug')('engine.io-client:socket');\nvar index = require('indexof');\nvar parser = require('engine.io-parser');\nvar parseuri = require('parseuri');\nvar parseqs = require('parseqs');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Socket;\n\n/**\n * Socket constructor.\n *\n * @param {String|Object} uri or options\n * @param {Object} options\n * @api public\n */\n\nfunction Socket (uri, opts) {\n  if (!(this instanceof Socket)) return new Socket(uri, opts);\n\n  opts = opts || {};\n\n  if (uri && 'object' === typeof uri) {\n    opts = uri;\n    uri = null;\n  }\n\n  if (uri) {\n    uri = parseuri(uri);\n    opts.hostname = uri.host;\n    opts.secure = uri.protocol === 'https' || uri.protocol === 'wss';\n    opts.port = uri.port;\n    if (uri.query) opts.query = uri.query;\n  } else if (opts.host) {\n    opts.hostname = parseuri(opts.host).host;\n  }\n\n  this.secure = null != opts.secure ? opts.secure\n    : (typeof location !== 'undefined' && 'https:' === location.protocol);\n\n  if (opts.hostname && !opts.port) {\n    // if no port is specified manually, use the protocol default\n    opts.port = this.secure ? '443' : '80';\n  }\n\n  this.agent = opts.agent || false;\n  this.hostname = opts.hostname ||\n    (typeof location !== 'undefined' ? location.hostname : 'localhost');\n  this.port = opts.port || (typeof location !== 'undefined' && location.port\n      ? location.port\n      : (this.secure ? 443 : 80));\n  this.query = opts.query || {};\n  if ('string' === typeof this.query) this.query = parseqs.decode(this.query);\n  this.upgrade = false !== opts.upgrade;\n  this.path = (opts.path || '/engine.io').replace(/\\/$/, '') + '/';\n  this.forceJSONP = !!opts.forceJSONP;\n  this.jsonp = false !== opts.jsonp;\n  this.forceBase64 = !!opts.forceBase64;\n  this.enablesXDR = !!opts.enablesXDR;\n  this.withCredentials = false !== opts.withCredentials;\n  this.timestampParam = opts.timestampParam || 't';\n  this.timestampRequests = opts.timestampRequests;\n  this.transports = opts.transports || ['polling', 'websocket'];\n  this.transportOptions = opts.transportOptions || {};\n  this.readyState = '';\n  this.writeBuffer = [];\n  this.prevBufferLen = 0;\n  this.policyPort = opts.policyPort || 843;\n  this.rememberUpgrade = opts.rememberUpgrade || false;\n  this.binaryType = null;\n  this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;\n  this.perMessageDeflate = false !== opts.perMessageDeflate ? (opts.perMessageDeflate || {}) : false;\n\n  if (true === this.perMessageDeflate) this.perMessageDeflate = {};\n  if (this.perMessageDeflate && null == this.perMessageDeflate.threshold) {\n    this.perMessageDeflate.threshold = 1024;\n  }\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx || undefined;\n  this.key = opts.key || undefined;\n  this.passphrase = opts.passphrase || undefined;\n  this.cert = opts.cert || undefined;\n  this.ca = opts.ca || undefined;\n  this.ciphers = opts.ciphers || undefined;\n  this.rejectUnauthorized = opts.rejectUnauthorized === undefined ? true : opts.rejectUnauthorized;\n  this.forceNode = !!opts.forceNode;\n\n  // detect ReactNative environment\n  this.isReactNative = (typeof navigator !== 'undefined' && typeof navigator.product === 'string' && navigator.product.toLowerCase() === 'reactnative');\n\n  // other options for Node.js or ReactNative client\n  if (typeof self === 'undefined' || this.isReactNative) {\n    if (opts.extraHeaders && Object.keys(opts.extraHeaders).length > 0) {\n      this.extraHeaders = opts.extraHeaders;\n    }\n\n    if (opts.localAddress) {\n      this.localAddress = opts.localAddress;\n    }\n  }\n\n  // set on handshake\n  this.id = null;\n  this.upgrades = null;\n  this.pingInterval = null;\n  this.pingTimeout = null;\n\n  // set on heartbeat\n  this.pingIntervalTimer = null;\n  this.pingTimeoutTimer = null;\n\n  this.open();\n}\n\nSocket.priorWebsocketSuccess = false;\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nSocket.protocol = parser.protocol; // this is an int\n\n/**\n * Expose deps for legacy compatibility\n * and standalone browser access.\n */\n\nSocket.Socket = Socket;\nSocket.Transport = require('./transport');\nSocket.transports = require('./transports/index');\nSocket.parser = require('engine.io-parser');\n\n/**\n * Creates transport of the given type.\n *\n * @param {String} transport name\n * @return {Transport}\n * @api private\n */\n\nSocket.prototype.createTransport = function (name) {\n  debug('creating transport \"%s\"', name);\n  var query = clone(this.query);\n\n  // append engine.io protocol identifier\n  query.EIO = parser.protocol;\n\n  // transport name\n  query.transport = name;\n\n  // per-transport options\n  var options = this.transportOptions[name] || {};\n\n  // session id if we already have one\n  if (this.id) query.sid = this.id;\n\n  var transport = new transports[name]({\n    query: query,\n    socket: this,\n    agent: options.agent || this.agent,\n    hostname: options.hostname || this.hostname,\n    port: options.port || this.port,\n    secure: options.secure || this.secure,\n    path: options.path || this.path,\n    forceJSONP: options.forceJSONP || this.forceJSONP,\n    jsonp: options.jsonp || this.jsonp,\n    forceBase64: options.forceBase64 || this.forceBase64,\n    enablesXDR: options.enablesXDR || this.enablesXDR,\n    withCredentials: options.withCredentials || this.withCredentials,\n    timestampRequests: options.timestampRequests || this.timestampRequests,\n    timestampParam: options.timestampParam || this.timestampParam,\n    policyPort: options.policyPort || this.policyPort,\n    pfx: options.pfx || this.pfx,\n    key: options.key || this.key,\n    passphrase: options.passphrase || this.passphrase,\n    cert: options.cert || this.cert,\n    ca: options.ca || this.ca,\n    ciphers: options.ciphers || this.ciphers,\n    rejectUnauthorized: options.rejectUnauthorized || this.rejectUnauthorized,\n    perMessageDeflate: options.perMessageDeflate || this.perMessageDeflate,\n    extraHeaders: options.extraHeaders || this.extraHeaders,\n    forceNode: options.forceNode || this.forceNode,\n    localAddress: options.localAddress || this.localAddress,\n    requestTimeout: options.requestTimeout || this.requestTimeout,\n    protocols: options.protocols || void (0),\n    isReactNative: this.isReactNative\n  });\n\n  return transport;\n};\n\nfunction clone (obj) {\n  var o = {};\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      o[i] = obj[i];\n    }\n  }\n  return o;\n}\n\n/**\n * Initializes transport to use and starts probe.\n *\n * @api private\n */\nSocket.prototype.open = function () {\n  var transport;\n  if (this.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf('websocket') !== -1) {\n    transport = 'websocket';\n  } else if (0 === this.transports.length) {\n    // Emit error on next tick so it can be listened to\n    var self = this;\n    setTimeout(function () {\n      self.emit('error', 'No transports available');\n    }, 0);\n    return;\n  } else {\n    transport = this.transports[0];\n  }\n  this.readyState = 'opening';\n\n  // Retry with the next transport if the transport is disabled (jsonp: false)\n  try {\n    transport = this.createTransport(transport);\n  } catch (e) {\n    this.transports.shift();\n    this.open();\n    return;\n  }\n\n  transport.open();\n  this.setTransport(transport);\n};\n\n/**\n * Sets the current transport. Disables the existing one (if any).\n *\n * @api private\n */\n\nSocket.prototype.setTransport = function (transport) {\n  debug('setting transport %s', transport.name);\n  var self = this;\n\n  if (this.transport) {\n    debug('clearing existing transport %s', this.transport.name);\n    this.transport.removeAllListeners();\n  }\n\n  // set up transport\n  this.transport = transport;\n\n  // set up transport listeners\n  transport\n  .on('drain', function () {\n    self.onDrain();\n  })\n  .on('packet', function (packet) {\n    self.onPacket(packet);\n  })\n  .on('error', function (e) {\n    self.onError(e);\n  })\n  .on('close', function () {\n    self.onClose('transport close');\n  });\n};\n\n/**\n * Probes a transport.\n *\n * @param {String} transport name\n * @api private\n */\n\nSocket.prototype.probe = function (name) {\n  debug('probing transport \"%s\"', name);\n  var transport = this.createTransport(name, { probe: 1 });\n  var failed = false;\n  var self = this;\n\n  Socket.priorWebsocketSuccess = false;\n\n  function onTransportOpen () {\n    if (self.onlyBinaryUpgrades) {\n      var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;\n      failed = failed || upgradeLosesBinary;\n    }\n    if (failed) return;\n\n    debug('probe transport \"%s\" opened', name);\n    transport.send([{ type: 'ping', data: 'probe' }]);\n    transport.once('packet', function (msg) {\n      if (failed) return;\n      if ('pong' === msg.type && 'probe' === msg.data) {\n        debug('probe transport \"%s\" pong', name);\n        self.upgrading = true;\n        self.emit('upgrading', transport);\n        if (!transport) return;\n        Socket.priorWebsocketSuccess = 'websocket' === transport.name;\n\n        debug('pausing current transport \"%s\"', self.transport.name);\n        self.transport.pause(function () {\n          if (failed) return;\n          if ('closed' === self.readyState) return;\n          debug('changing transport and sending upgrade packet');\n\n          cleanup();\n\n          self.setTransport(transport);\n          transport.send([{ type: 'upgrade' }]);\n          self.emit('upgrade', transport);\n          transport = null;\n          self.upgrading = false;\n          self.flush();\n        });\n      } else {\n        debug('probe transport \"%s\" failed', name);\n        var err = new Error('probe error');\n        err.transport = transport.name;\n        self.emit('upgradeError', err);\n      }\n    });\n  }\n\n  function freezeTransport () {\n    if (failed) return;\n\n    // Any callback called by transport should be ignored since now\n    failed = true;\n\n    cleanup();\n\n    transport.close();\n    transport = null;\n  }\n\n  // Handle any error that happens while probing\n  function onerror (err) {\n    var error = new Error('probe error: ' + err);\n    error.transport = transport.name;\n\n    freezeTransport();\n\n    debug('probe transport \"%s\" failed because of error: %s', name, err);\n\n    self.emit('upgradeError', error);\n  }\n\n  function onTransportClose () {\n    onerror('transport closed');\n  }\n\n  // When the socket is closed while we're probing\n  function onclose () {\n    onerror('socket closed');\n  }\n\n  // When the socket is upgraded while we're probing\n  function onupgrade (to) {\n    if (transport && to.name !== transport.name) {\n      debug('\"%s\" works - aborting \"%s\"', to.name, transport.name);\n      freezeTransport();\n    }\n  }\n\n  // Remove all listeners on the transport and on self\n  function cleanup () {\n    transport.removeListener('open', onTransportOpen);\n    transport.removeListener('error', onerror);\n    transport.removeListener('close', onTransportClose);\n    self.removeListener('close', onclose);\n    self.removeListener('upgrading', onupgrade);\n  }\n\n  transport.once('open', onTransportOpen);\n  transport.once('error', onerror);\n  transport.once('close', onTransportClose);\n\n  this.once('close', onclose);\n  this.once('upgrading', onupgrade);\n\n  transport.open();\n};\n\n/**\n * Called when connection is deemed open.\n *\n * @api public\n */\n\nSocket.prototype.onOpen = function () {\n  debug('socket open');\n  this.readyState = 'open';\n  Socket.priorWebsocketSuccess = 'websocket' === this.transport.name;\n  this.emit('open');\n  this.flush();\n\n  // we check for `readyState` in case an `open`\n  // listener already closed the socket\n  if ('open' === this.readyState && this.upgrade && this.transport.pause) {\n    debug('starting upgrade probes');\n    for (var i = 0, l = this.upgrades.length; i < l; i++) {\n      this.probe(this.upgrades[i]);\n    }\n  }\n};\n\n/**\n * Handles a packet.\n *\n * @api private\n */\n\nSocket.prototype.onPacket = function (packet) {\n  if ('opening' === this.readyState || 'open' === this.readyState ||\n      'closing' === this.readyState) {\n    debug('socket receive: type \"%s\", data \"%s\"', packet.type, packet.data);\n\n    this.emit('packet', packet);\n\n    // Socket is live - any packet counts\n    this.emit('heartbeat');\n\n    switch (packet.type) {\n      case 'open':\n        this.onHandshake(JSON.parse(packet.data));\n        break;\n\n      case 'pong':\n        this.setPing();\n        this.emit('pong');\n        break;\n\n      case 'error':\n        var err = new Error('server error');\n        err.code = packet.data;\n        this.onError(err);\n        break;\n\n      case 'message':\n        this.emit('data', packet.data);\n        this.emit('message', packet.data);\n        break;\n    }\n  } else {\n    debug('packet received with socket readyState \"%s\"', this.readyState);\n  }\n};\n\n/**\n * Called upon handshake completion.\n *\n * @param {Object} handshake obj\n * @api private\n */\n\nSocket.prototype.onHandshake = function (data) {\n  this.emit('handshake', data);\n  this.id = data.sid;\n  this.transport.query.sid = data.sid;\n  this.upgrades = this.filterUpgrades(data.upgrades);\n  this.pingInterval = data.pingInterval;\n  this.pingTimeout = data.pingTimeout;\n  this.onOpen();\n  // In case open handler closes socket\n  if ('closed' === this.readyState) return;\n  this.setPing();\n\n  // Prolong liveness of socket on heartbeat\n  this.removeListener('heartbeat', this.onHeartbeat);\n  this.on('heartbeat', this.onHeartbeat);\n};\n\n/**\n * Resets ping timeout.\n *\n * @api private\n */\n\nSocket.prototype.onHeartbeat = function (timeout) {\n  clearTimeout(this.pingTimeoutTimer);\n  var self = this;\n  self.pingTimeoutTimer = setTimeout(function () {\n    if ('closed' === self.readyState) return;\n    self.onClose('ping timeout');\n  }, timeout || (self.pingInterval + self.pingTimeout));\n};\n\n/**\n * Pings server every `this.pingInterval` and expects response\n * within `this.pingTimeout` or closes connection.\n *\n * @api private\n */\n\nSocket.prototype.setPing = function () {\n  var self = this;\n  clearTimeout(self.pingIntervalTimer);\n  self.pingIntervalTimer = setTimeout(function () {\n    debug('writing ping packet - expecting pong within %sms', self.pingTimeout);\n    self.ping();\n    self.onHeartbeat(self.pingTimeout);\n  }, self.pingInterval);\n};\n\n/**\n* Sends a ping packet.\n*\n* @api private\n*/\n\nSocket.prototype.ping = function () {\n  var self = this;\n  this.sendPacket('ping', function () {\n    self.emit('ping');\n  });\n};\n\n/**\n * Called on `drain` event\n *\n * @api private\n */\n\nSocket.prototype.onDrain = function () {\n  this.writeBuffer.splice(0, this.prevBufferLen);\n\n  // setting prevBufferLen = 0 is very important\n  // for example, when upgrading, upgrade packet is sent over,\n  // and a nonzero prevBufferLen could cause problems on `drain`\n  this.prevBufferLen = 0;\n\n  if (0 === this.writeBuffer.length) {\n    this.emit('drain');\n  } else {\n    this.flush();\n  }\n};\n\n/**\n * Flush write buffers.\n *\n * @api private\n */\n\nSocket.prototype.flush = function () {\n  if ('closed' !== this.readyState && this.transport.writable &&\n    !this.upgrading && this.writeBuffer.length) {\n    debug('flushing %d packets in socket', this.writeBuffer.length);\n    this.transport.send(this.writeBuffer);\n    // keep track of current length of writeBuffer\n    // splice writeBuffer and callbackBuffer on `drain`\n    this.prevBufferLen = this.writeBuffer.length;\n    this.emit('flush');\n  }\n};\n\n/**\n * Sends a message.\n *\n * @param {String} message.\n * @param {Function} callback function.\n * @param {Object} options.\n * @return {Socket} for chaining.\n * @api public\n */\n\nSocket.prototype.write =\nSocket.prototype.send = function (msg, options, fn) {\n  this.sendPacket('message', msg, options, fn);\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {String} packet type.\n * @param {String} data.\n * @param {Object} options.\n * @param {Function} callback function.\n * @api private\n */\n\nSocket.prototype.sendPacket = function (type, data, options, fn) {\n  if ('function' === typeof data) {\n    fn = data;\n    data = undefined;\n  }\n\n  if ('function' === typeof options) {\n    fn = options;\n    options = null;\n  }\n\n  if ('closing' === this.readyState || 'closed' === this.readyState) {\n    return;\n  }\n\n  options = options || {};\n  options.compress = false !== options.compress;\n\n  var packet = {\n    type: type,\n    data: data,\n    options: options\n  };\n  this.emit('packetCreate', packet);\n  this.writeBuffer.push(packet);\n  if (fn) this.once('flush', fn);\n  this.flush();\n};\n\n/**\n * Closes the connection.\n *\n * @api private\n */\n\nSocket.prototype.close = function () {\n  if ('opening' === this.readyState || 'open' === this.readyState) {\n    this.readyState = 'closing';\n\n    var self = this;\n\n    if (this.writeBuffer.length) {\n      this.once('drain', function () {\n        if (this.upgrading) {\n          waitForUpgrade();\n        } else {\n          close();\n        }\n      });\n    } else if (this.upgrading) {\n      waitForUpgrade();\n    } else {\n      close();\n    }\n  }\n\n  function close () {\n    self.onClose('forced close');\n    debug('socket closing - telling transport to close');\n    self.transport.close();\n  }\n\n  function cleanupAndClose () {\n    self.removeListener('upgrade', cleanupAndClose);\n    self.removeListener('upgradeError', cleanupAndClose);\n    close();\n  }\n\n  function waitForUpgrade () {\n    // wait for upgrade to finish since we can't send packets while pausing a transport\n    self.once('upgrade', cleanupAndClose);\n    self.once('upgradeError', cleanupAndClose);\n  }\n\n  return this;\n};\n\n/**\n * Called upon transport error\n *\n * @api private\n */\n\nSocket.prototype.onError = function (err) {\n  debug('socket error %j', err);\n  Socket.priorWebsocketSuccess = false;\n  this.emit('error', err);\n  this.onClose('transport error', err);\n};\n\n/**\n * Called upon transport close.\n *\n * @api private\n */\n\nSocket.prototype.onClose = function (reason, desc) {\n  if ('opening' === this.readyState || 'open' === this.readyState || 'closing' === this.readyState) {\n    debug('socket close with reason: \"%s\"', reason);\n    var self = this;\n\n    // clear timers\n    clearTimeout(this.pingIntervalTimer);\n    clearTimeout(this.pingTimeoutTimer);\n\n    // stop event from firing again for transport\n    this.transport.removeAllListeners('close');\n\n    // ensure transport won't stay open\n    this.transport.close();\n\n    // ignore further transport communication\n    this.transport.removeAllListeners();\n\n    // set ready state\n    this.readyState = 'closed';\n\n    // clear session id\n    this.id = null;\n\n    // emit close event\n    this.emit('close', reason, desc);\n\n    // clean buffers after, so users can still\n    // grab the buffers on `close` event\n    self.writeBuffer = [];\n    self.prevBufferLen = 0;\n  }\n};\n\n/**\n * Filters upgrades, returning only those matching client transports.\n *\n * @param {Array} server upgrades\n * @api private\n *\n */\n\nSocket.prototype.filterUpgrades = function (upgrades) {\n  var filteredUpgrades = [];\n  for (var i = 0, j = upgrades.length; i < j; i++) {\n    if (~index(this.transports, upgrades[i])) filteredUpgrades.push(upgrades[i]);\n  }\n  return filteredUpgrades;\n};\n","\nmodule.exports = require('./socket');\n\n/**\n * Exports parser\n *\n * @api public\n *\n */\nmodule.exports.parser = require('engine.io-parser');\n","module.exports = toArray\n\nfunction toArray(list, index) {\n    var array = []\n\n    index = index || 0\n\n    for (var i = index || 0; i < list.length; i++) {\n        array[i - index] = list[i]\n    }\n\n    return array\n}\n","\n/**\n * Module exports.\n */\n\nmodule.exports = on;\n\n/**\n * Helper for subscriptions.\n *\n * @param {Object|EventEmitter} obj with `Emitter` mixin or `EventEmitter`\n * @param {String} event name\n * @param {Function} callback\n * @api public\n */\n\nfunction on (obj, ev, fn) {\n  obj.on(ev, fn);\n  return {\n    destroy: function () {\n      obj.removeListener(ev, fn);\n    }\n  };\n}\n","/**\n * Slice reference.\n */\n\nvar slice = [].slice;\n\n/**\n * Bind `obj` to `fn`.\n *\n * @param {Object} obj\n * @param {Function|String} fn or string\n * @return {Function}\n * @api public\n */\n\nmodule.exports = function(obj, fn){\n  if ('string' == typeof fn) fn = obj[fn];\n  if ('function' != typeof fn) throw new Error('bind() requires a function');\n  var args = slice.call(arguments, 2);\n  return function(){\n    return fn.apply(obj, args.concat(slice.call(arguments)));\n  }\n};\n","\n/**\n * Module dependencies.\n */\n\nvar parser = require('socket.io-parser');\nvar Emitter = require('component-emitter');\nvar toArray = require('to-array');\nvar on = require('./on');\nvar bind = require('component-bind');\nvar debug = require('debug')('socket.io-client:socket');\nvar parseqs = require('parseqs');\nvar hasBin = require('has-binary2');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = Socket;\n\n/**\n * Internal events (blacklisted).\n * These events can't be emitted by the user.\n *\n * @api private\n */\n\nvar events = {\n  connect: 1,\n  connect_error: 1,\n  connect_timeout: 1,\n  connecting: 1,\n  disconnect: 1,\n  error: 1,\n  reconnect: 1,\n  reconnect_attempt: 1,\n  reconnect_failed: 1,\n  reconnect_error: 1,\n  reconnecting: 1,\n  ping: 1,\n  pong: 1\n};\n\n/**\n * Shortcut to `Emitter#emit`.\n */\n\nvar emit = Emitter.prototype.emit;\n\n/**\n * `Socket` constructor.\n *\n * @api public\n */\n\nfunction Socket (io, nsp, opts) {\n  this.io = io;\n  this.nsp = nsp;\n  this.json = this; // compat\n  this.ids = 0;\n  this.acks = {};\n  this.receiveBuffer = [];\n  this.sendBuffer = [];\n  this.connected = false;\n  this.disconnected = true;\n  this.flags = {};\n  if (opts && opts.query) {\n    this.query = opts.query;\n  }\n  if (this.io.autoConnect) this.open();\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Subscribe to open, close and packet events\n *\n * @api private\n */\n\nSocket.prototype.subEvents = function () {\n  if (this.subs) return;\n\n  var io = this.io;\n  this.subs = [\n    on(io, 'open', bind(this, 'onopen')),\n    on(io, 'packet', bind(this, 'onpacket')),\n    on(io, 'close', bind(this, 'onclose'))\n  ];\n};\n\n/**\n * \"Opens\" the socket.\n *\n * @api public\n */\n\nSocket.prototype.open =\nSocket.prototype.connect = function () {\n  if (this.connected) return this;\n\n  this.subEvents();\n  if (!this.io.reconnecting) this.io.open(); // ensure open\n  if ('open' === this.io.readyState) this.onopen();\n  this.emit('connecting');\n  return this;\n};\n\n/**\n * Sends a `message` event.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.send = function () {\n  var args = toArray(arguments);\n  args.unshift('message');\n  this.emit.apply(this, args);\n  return this;\n};\n\n/**\n * Override `emit`.\n * If the event is in `events`, it's emitted normally.\n *\n * @param {String} event name\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.emit = function (ev) {\n  if (events.hasOwnProperty(ev)) {\n    emit.apply(this, arguments);\n    return this;\n  }\n\n  var args = toArray(arguments);\n  var packet = {\n    type: (this.flags.binary !== undefined ? this.flags.binary : hasBin(args)) ? parser.BINARY_EVENT : parser.EVENT,\n    data: args\n  };\n\n  packet.options = {};\n  packet.options.compress = !this.flags || false !== this.flags.compress;\n\n  // event ack callback\n  if ('function' === typeof args[args.length - 1]) {\n    debug('emitting packet with ack id %d', this.ids);\n    this.acks[this.ids] = args.pop();\n    packet.id = this.ids++;\n  }\n\n  if (this.connected) {\n    this.packet(packet);\n  } else {\n    this.sendBuffer.push(packet);\n  }\n\n  this.flags = {};\n\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.packet = function (packet) {\n  packet.nsp = this.nsp;\n  this.io.packet(packet);\n};\n\n/**\n * Called upon engine `open`.\n *\n * @api private\n */\n\nSocket.prototype.onopen = function () {\n  debug('transport is open - connecting');\n\n  // write connect packet if necessary\n  if ('/' !== this.nsp) {\n    if (this.query) {\n      var query = typeof this.query === 'object' ? parseqs.encode(this.query) : this.query;\n      debug('sending connect packet with query %s', query);\n      this.packet({type: parser.CONNECT, query: query});\n    } else {\n      this.packet({type: parser.CONNECT});\n    }\n  }\n};\n\n/**\n * Called upon engine `close`.\n *\n * @param {String} reason\n * @api private\n */\n\nSocket.prototype.onclose = function (reason) {\n  debug('close (%s)', reason);\n  this.connected = false;\n  this.disconnected = true;\n  delete this.id;\n  this.emit('disconnect', reason);\n};\n\n/**\n * Called with socket packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onpacket = function (packet) {\n  var sameNamespace = packet.nsp === this.nsp;\n  var rootNamespaceError = packet.type === parser.ERROR && packet.nsp === '/';\n\n  if (!sameNamespace && !rootNamespaceError) return;\n\n  switch (packet.type) {\n    case parser.CONNECT:\n      this.onconnect();\n      break;\n\n    case parser.EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.BINARY_EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.ACK:\n      this.onack(packet);\n      break;\n\n    case parser.BINARY_ACK:\n      this.onack(packet);\n      break;\n\n    case parser.DISCONNECT:\n      this.ondisconnect();\n      break;\n\n    case parser.ERROR:\n      this.emit('error', packet.data);\n      break;\n  }\n};\n\n/**\n * Called upon a server event.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onevent = function (packet) {\n  var args = packet.data || [];\n  debug('emitting event %j', args);\n\n  if (null != packet.id) {\n    debug('attaching ack callback to event');\n    args.push(this.ack(packet.id));\n  }\n\n  if (this.connected) {\n    emit.apply(this, args);\n  } else {\n    this.receiveBuffer.push(args);\n  }\n};\n\n/**\n * Produces an ack callback to emit with an event.\n *\n * @api private\n */\n\nSocket.prototype.ack = function (id) {\n  var self = this;\n  var sent = false;\n  return function () {\n    // prevent double callbacks\n    if (sent) return;\n    sent = true;\n    var args = toArray(arguments);\n    debug('sending ack %j', args);\n\n    self.packet({\n      type: hasBin(args) ? parser.BINARY_ACK : parser.ACK,\n      id: id,\n      data: args\n    });\n  };\n};\n\n/**\n * Called upon a server acknowlegement.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onack = function (packet) {\n  var ack = this.acks[packet.id];\n  if ('function' === typeof ack) {\n    debug('calling ack %s with %j', packet.id, packet.data);\n    ack.apply(this, packet.data);\n    delete this.acks[packet.id];\n  } else {\n    debug('bad ack %s', packet.id);\n  }\n};\n\n/**\n * Called upon server connect.\n *\n * @api private\n */\n\nSocket.prototype.onconnect = function () {\n  this.connected = true;\n  this.disconnected = false;\n  this.emitBuffered();\n  this.emit('connect');\n};\n\n/**\n * Emit buffered events (received and emitted).\n *\n * @api private\n */\n\nSocket.prototype.emitBuffered = function () {\n  var i;\n  for (i = 0; i < this.receiveBuffer.length; i++) {\n    emit.apply(this, this.receiveBuffer[i]);\n  }\n  this.receiveBuffer = [];\n\n  for (i = 0; i < this.sendBuffer.length; i++) {\n    this.packet(this.sendBuffer[i]);\n  }\n  this.sendBuffer = [];\n};\n\n/**\n * Called upon server disconnect.\n *\n * @api private\n */\n\nSocket.prototype.ondisconnect = function () {\n  debug('server disconnect (%s)', this.nsp);\n  this.destroy();\n  this.onclose('io server disconnect');\n};\n\n/**\n * Called upon forced client/server side disconnections,\n * this method ensures the manager stops tracking us and\n * that reconnections don't get triggered for this.\n *\n * @api private.\n */\n\nSocket.prototype.destroy = function () {\n  if (this.subs) {\n    // clean subscriptions to avoid reconnections\n    for (var i = 0; i < this.subs.length; i++) {\n      this.subs[i].destroy();\n    }\n    this.subs = null;\n  }\n\n  this.io.destroy(this);\n};\n\n/**\n * Disconnects the socket manually.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.close =\nSocket.prototype.disconnect = function () {\n  if (this.connected) {\n    debug('performing disconnect (%s)', this.nsp);\n    this.packet({ type: parser.DISCONNECT });\n  }\n\n  // remove socket from pool\n  this.destroy();\n\n  if (this.connected) {\n    // fire events\n    this.onclose('io client disconnect');\n  }\n  return this;\n};\n\n/**\n * Sets the compress flag.\n *\n * @param {Boolean} if `true`, compresses the sending data\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.compress = function (compress) {\n  this.flags.compress = compress;\n  return this;\n};\n\n/**\n * Sets the binary flag\n *\n * @param {Boolean} whether the emitted data contains binary\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.binary = function (binary) {\n  this.flags.binary = binary;\n  return this;\n};\n","\n/**\n * Expose `Backoff`.\n */\n\nmodule.exports = Backoff;\n\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction Backoff(opts) {\n  opts = opts || {};\n  this.ms = opts.min || 100;\n  this.max = opts.max || 10000;\n  this.factor = opts.factor || 2;\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n  this.attempts = 0;\n}\n\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\n\nBackoff.prototype.duration = function(){\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n  if (this.jitter) {\n    var rand =  Math.random();\n    var deviation = Math.floor(rand * this.jitter * ms);\n    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\n  }\n  return Math.min(ms, this.max) | 0;\n};\n\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\n\nBackoff.prototype.reset = function(){\n  this.attempts = 0;\n};\n\n/**\n * Set the minimum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMin = function(min){\n  this.ms = min;\n};\n\n/**\n * Set the maximum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMax = function(max){\n  this.max = max;\n};\n\n/**\n * Set the jitter\n *\n * @api public\n */\n\nBackoff.prototype.setJitter = function(jitter){\n  this.jitter = jitter;\n};\n\n","\n/**\n * Module dependencies.\n */\n\nvar eio = require('engine.io-client');\nvar Socket = require('./socket');\nvar Emitter = require('component-emitter');\nvar parser = require('socket.io-parser');\nvar on = require('./on');\nvar bind = require('component-bind');\nvar debug = require('debug')('socket.io-client:manager');\nvar indexOf = require('indexof');\nvar Backoff = require('backo2');\n\n/**\n * IE6+ hasOwnProperty\n */\n\nvar has = Object.prototype.hasOwnProperty;\n\n/**\n * Module exports\n */\n\nmodule.exports = Manager;\n\n/**\n * `Manager` constructor.\n *\n * @param {String} engine instance or engine uri/opts\n * @param {Object} options\n * @api public\n */\n\nfunction Manager (uri, opts) {\n  if (!(this instanceof Manager)) return new Manager(uri, opts);\n  if (uri && ('object' === typeof uri)) {\n    opts = uri;\n    uri = undefined;\n  }\n  opts = opts || {};\n\n  opts.path = opts.path || '/socket.io';\n  this.nsps = {};\n  this.subs = [];\n  this.opts = opts;\n  this.reconnection(opts.reconnection !== false);\n  this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n  this.reconnectionDelay(opts.reconnectionDelay || 1000);\n  this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n  this.randomizationFactor(opts.randomizationFactor || 0.5);\n  this.backoff = new Backoff({\n    min: this.reconnectionDelay(),\n    max: this.reconnectionDelayMax(),\n    jitter: this.randomizationFactor()\n  });\n  this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n  this.readyState = 'closed';\n  this.uri = uri;\n  this.connecting = [];\n  this.lastPing = null;\n  this.encoding = false;\n  this.packetBuffer = [];\n  var _parser = opts.parser || parser;\n  this.encoder = new _parser.Encoder();\n  this.decoder = new _parser.Decoder();\n  this.autoConnect = opts.autoConnect !== false;\n  if (this.autoConnect) this.open();\n}\n\n/**\n * Propagate given event to sockets and emit on `this`\n *\n * @api private\n */\n\nManager.prototype.emitAll = function () {\n  this.emit.apply(this, arguments);\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);\n    }\n  }\n};\n\n/**\n * Update `socket.id` of all sockets\n *\n * @api private\n */\n\nManager.prototype.updateSocketIds = function () {\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].id = this.generateId(nsp);\n    }\n  }\n};\n\n/**\n * generate `socket.id` for the given `nsp`\n *\n * @param {String} nsp\n * @return {String}\n * @api private\n */\n\nManager.prototype.generateId = function (nsp) {\n  return (nsp === '/' ? '' : (nsp + '#')) + this.engine.id;\n};\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Manager.prototype);\n\n/**\n * Sets the `reconnection` config.\n *\n * @param {Boolean} true/false if it should automatically reconnect\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnection = function (v) {\n  if (!arguments.length) return this._reconnection;\n  this._reconnection = !!v;\n  return this;\n};\n\n/**\n * Sets the reconnection attempts config.\n *\n * @param {Number} max reconnection attempts before giving up\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionAttempts = function (v) {\n  if (!arguments.length) return this._reconnectionAttempts;\n  this._reconnectionAttempts = v;\n  return this;\n};\n\n/**\n * Sets the delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelay = function (v) {\n  if (!arguments.length) return this._reconnectionDelay;\n  this._reconnectionDelay = v;\n  this.backoff && this.backoff.setMin(v);\n  return this;\n};\n\nManager.prototype.randomizationFactor = function (v) {\n  if (!arguments.length) return this._randomizationFactor;\n  this._randomizationFactor = v;\n  this.backoff && this.backoff.setJitter(v);\n  return this;\n};\n\n/**\n * Sets the maximum delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelayMax = function (v) {\n  if (!arguments.length) return this._reconnectionDelayMax;\n  this._reconnectionDelayMax = v;\n  this.backoff && this.backoff.setMax(v);\n  return this;\n};\n\n/**\n * Sets the connection timeout. `false` to disable\n *\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.timeout = function (v) {\n  if (!arguments.length) return this._timeout;\n  this._timeout = v;\n  return this;\n};\n\n/**\n * Starts trying to reconnect if reconnection is enabled and we have not\n * started reconnecting yet\n *\n * @api private\n */\n\nManager.prototype.maybeReconnectOnOpen = function () {\n  // Only try to reconnect if it's the first time we're connecting\n  if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {\n    // keeps reconnection from firing twice for the same reconnection loop\n    this.reconnect();\n  }\n};\n\n/**\n * Sets the current transport `socket`.\n *\n * @param {Function} optional, callback\n * @return {Manager} self\n * @api public\n */\n\nManager.prototype.open =\nManager.prototype.connect = function (fn, opts) {\n  debug('readyState %s', this.readyState);\n  if (~this.readyState.indexOf('open')) return this;\n\n  debug('opening %s', this.uri);\n  this.engine = eio(this.uri, this.opts);\n  var socket = this.engine;\n  var self = this;\n  this.readyState = 'opening';\n  this.skipReconnect = false;\n\n  // emit `open`\n  var openSub = on(socket, 'open', function () {\n    self.onopen();\n    fn && fn();\n  });\n\n  // emit `connect_error`\n  var errorSub = on(socket, 'error', function (data) {\n    debug('connect_error');\n    self.cleanup();\n    self.readyState = 'closed';\n    self.emitAll('connect_error', data);\n    if (fn) {\n      var err = new Error('Connection error');\n      err.data = data;\n      fn(err);\n    } else {\n      // Only do this if there is no fn to handle the error\n      self.maybeReconnectOnOpen();\n    }\n  });\n\n  // emit `connect_timeout`\n  if (false !== this._timeout) {\n    var timeout = this._timeout;\n    debug('connect attempt will timeout after %d', timeout);\n\n    if (timeout === 0) {\n      openSub.destroy(); // prevents a race condition with the 'open' event\n    }\n\n    // set timer\n    var timer = setTimeout(function () {\n      debug('connect attempt timed out after %d', timeout);\n      openSub.destroy();\n      socket.close();\n      socket.emit('error', 'timeout');\n      self.emitAll('connect_timeout', timeout);\n    }, timeout);\n\n    this.subs.push({\n      destroy: function () {\n        clearTimeout(timer);\n      }\n    });\n  }\n\n  this.subs.push(openSub);\n  this.subs.push(errorSub);\n\n  return this;\n};\n\n/**\n * Called upon transport open.\n *\n * @api private\n */\n\nManager.prototype.onopen = function () {\n  debug('open');\n\n  // clear old subs\n  this.cleanup();\n\n  // mark as open\n  this.readyState = 'open';\n  this.emit('open');\n\n  // add new subs\n  var socket = this.engine;\n  this.subs.push(on(socket, 'data', bind(this, 'ondata')));\n  this.subs.push(on(socket, 'ping', bind(this, 'onping')));\n  this.subs.push(on(socket, 'pong', bind(this, 'onpong')));\n  this.subs.push(on(socket, 'error', bind(this, 'onerror')));\n  this.subs.push(on(socket, 'close', bind(this, 'onclose')));\n  this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));\n};\n\n/**\n * Called upon a ping.\n *\n * @api private\n */\n\nManager.prototype.onping = function () {\n  this.lastPing = new Date();\n  this.emitAll('ping');\n};\n\n/**\n * Called upon a packet.\n *\n * @api private\n */\n\nManager.prototype.onpong = function () {\n  this.emitAll('pong', new Date() - this.lastPing);\n};\n\n/**\n * Called with data.\n *\n * @api private\n */\n\nManager.prototype.ondata = function (data) {\n  this.decoder.add(data);\n};\n\n/**\n * Called when parser fully decodes a packet.\n *\n * @api private\n */\n\nManager.prototype.ondecoded = function (packet) {\n  this.emit('packet', packet);\n};\n\n/**\n * Called upon socket error.\n *\n * @api private\n */\n\nManager.prototype.onerror = function (err) {\n  debug('error', err);\n  this.emitAll('error', err);\n};\n\n/**\n * Creates a new socket for the given `nsp`.\n *\n * @return {Socket}\n * @api public\n */\n\nManager.prototype.socket = function (nsp, opts) {\n  var socket = this.nsps[nsp];\n  if (!socket) {\n    socket = new Socket(this, nsp, opts);\n    this.nsps[nsp] = socket;\n    var self = this;\n    socket.on('connecting', onConnecting);\n    socket.on('connect', function () {\n      socket.id = self.generateId(nsp);\n    });\n\n    if (this.autoConnect) {\n      // manually call here since connecting event is fired before listening\n      onConnecting();\n    }\n  }\n\n  function onConnecting () {\n    if (!~indexOf(self.connecting, socket)) {\n      self.connecting.push(socket);\n    }\n  }\n\n  return socket;\n};\n\n/**\n * Called upon a socket close.\n *\n * @param {Socket} socket\n */\n\nManager.prototype.destroy = function (socket) {\n  var index = indexOf(this.connecting, socket);\n  if (~index) this.connecting.splice(index, 1);\n  if (this.connecting.length) return;\n\n  this.close();\n};\n\n/**\n * Writes a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nManager.prototype.packet = function (packet) {\n  debug('writing packet %j', packet);\n  var self = this;\n  if (packet.query && packet.type === 0) packet.nsp += '?' + packet.query;\n\n  if (!self.encoding) {\n    // encode, then write to engine with result\n    self.encoding = true;\n    this.encoder.encode(packet, function (encodedPackets) {\n      for (var i = 0; i < encodedPackets.length; i++) {\n        self.engine.write(encodedPackets[i], packet.options);\n      }\n      self.encoding = false;\n      self.processPacketQueue();\n    });\n  } else { // add packet to the queue\n    self.packetBuffer.push(packet);\n  }\n};\n\n/**\n * If packet buffer is non-empty, begins encoding the\n * next packet in line.\n *\n * @api private\n */\n\nManager.prototype.processPacketQueue = function () {\n  if (this.packetBuffer.length > 0 && !this.encoding) {\n    var pack = this.packetBuffer.shift();\n    this.packet(pack);\n  }\n};\n\n/**\n * Clean up transport subscriptions and packet buffer.\n *\n * @api private\n */\n\nManager.prototype.cleanup = function () {\n  debug('cleanup');\n\n  var subsLength = this.subs.length;\n  for (var i = 0; i < subsLength; i++) {\n    var sub = this.subs.shift();\n    sub.destroy();\n  }\n\n  this.packetBuffer = [];\n  this.encoding = false;\n  this.lastPing = null;\n\n  this.decoder.destroy();\n};\n\n/**\n * Close the current socket.\n *\n * @api private\n */\n\nManager.prototype.close =\nManager.prototype.disconnect = function () {\n  debug('disconnect');\n  this.skipReconnect = true;\n  this.reconnecting = false;\n  if ('opening' === this.readyState) {\n    // `onclose` will not fire because\n    // an open event never happened\n    this.cleanup();\n  }\n  this.backoff.reset();\n  this.readyState = 'closed';\n  if (this.engine) this.engine.close();\n};\n\n/**\n * Called upon engine close.\n *\n * @api private\n */\n\nManager.prototype.onclose = function (reason) {\n  debug('onclose');\n\n  this.cleanup();\n  this.backoff.reset();\n  this.readyState = 'closed';\n  this.emit('close', reason);\n\n  if (this._reconnection && !this.skipReconnect) {\n    this.reconnect();\n  }\n};\n\n/**\n * Attempt a reconnection.\n *\n * @api private\n */\n\nManager.prototype.reconnect = function () {\n  if (this.reconnecting || this.skipReconnect) return this;\n\n  var self = this;\n\n  if (this.backoff.attempts >= this._reconnectionAttempts) {\n    debug('reconnect failed');\n    this.backoff.reset();\n    this.emitAll('reconnect_failed');\n    this.reconnecting = false;\n  } else {\n    var delay = this.backoff.duration();\n    debug('will wait %dms before reconnect attempt', delay);\n\n    this.reconnecting = true;\n    var timer = setTimeout(function () {\n      if (self.skipReconnect) return;\n\n      debug('attempting reconnect');\n      self.emitAll('reconnect_attempt', self.backoff.attempts);\n      self.emitAll('reconnecting', self.backoff.attempts);\n\n      // check again for the case socket closed in above events\n      if (self.skipReconnect) return;\n\n      self.open(function (err) {\n        if (err) {\n          debug('reconnect attempt error');\n          self.reconnecting = false;\n          self.reconnect();\n          self.emitAll('reconnect_error', err.data);\n        } else {\n          debug('reconnect success');\n          self.onreconnect();\n        }\n      });\n    }, delay);\n\n    this.subs.push({\n      destroy: function () {\n        clearTimeout(timer);\n      }\n    });\n  }\n};\n\n/**\n * Called upon successful reconnect.\n *\n * @api private\n */\n\nManager.prototype.onreconnect = function () {\n  var attempt = this.backoff.attempts;\n  this.reconnecting = false;\n  this.backoff.reset();\n  this.updateSocketIds();\n  this.emitAll('reconnect', attempt);\n};\n","\n/**\n * Module dependencies.\n */\n\nvar url = require('./url');\nvar parser = require('socket.io-parser');\nvar Manager = require('./manager');\nvar debug = require('debug')('socket.io-client');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = lookup;\n\n/**\n * Managers cache.\n */\n\nvar cache = exports.managers = {};\n\n/**\n * Looks up an existing `Manager` for multiplexing.\n * If the user summons:\n *\n *   `io('http://localhost/a');`\n *   `io('http://localhost/b');`\n *\n * We reuse the existing instance based on same scheme/port/host,\n * and we initialize sockets for each namespace.\n *\n * @api public\n */\n\nfunction lookup (uri, opts) {\n  if (typeof uri === 'object') {\n    opts = uri;\n    uri = undefined;\n  }\n\n  opts = opts || {};\n\n  var parsed = url(uri);\n  var source = parsed.source;\n  var id = parsed.id;\n  var path = parsed.path;\n  var sameNamespace = cache[id] && path in cache[id].nsps;\n  var newConnection = opts.forceNew || opts['force new connection'] ||\n                      false === opts.multiplex || sameNamespace;\n\n  var io;\n\n  if (newConnection) {\n    debug('ignoring socket cache for %s', source);\n    io = Manager(source, opts);\n  } else {\n    if (!cache[id]) {\n      debug('new io instance for %s', source);\n      cache[id] = Manager(source, opts);\n    }\n    io = cache[id];\n  }\n  if (parsed.query && !opts.query) {\n    opts.query = parsed.query;\n  }\n  return io.socket(parsed.path, opts);\n}\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nexports.protocol = parser.protocol;\n\n/**\n * `connect`.\n *\n * @param {String} uri\n * @api public\n */\n\nexports.connect = lookup;\n\n/**\n * Expose constructors for standalone build.\n *\n * @api public\n */\n\nexports.Manager = require('./manager');\nexports.Socket = require('./socket');\n","// index.js\n\nimport { TerminalUI } from \"./TerminalUI\";\nimport io from \"socket.io-client\";\n\n// IMPORTANT: Make sure you replace this address with your server address.\n\nconst serverAddress = \"http://localhost:23434\";\n\n//Server sandbox available at https://codesandbox.io/s/web-terminal-tutorial-server-g2ihu\n\nfunction connectToSocket(serverAddress) {\n  return new Promise(res => {\n    const socket = io(serverAddress);\n    res(socket);\n  });\n}\n\nfunction startTerminal(container, socket) {\n  // Create an xterm.js instance (TerminalUI class is a wrapper with some utils. Check that file for info.)\n  const terminal = new TerminalUI(socket);\n\n  // Attach created terminal to a DOM element.\n  terminal.attachTo(container);\n\n  // When terminal attached to DOM, start listening for input, output events.\n  // Check TerminalUI startListening() function for details.\n  terminal.startListening();\n}\n\nfunction start() {\n  const container = document.getElementById(\"terminal-container\");\n  // Connect to socket and when it is available, start terminal.\n  connectToSocket(serverAddress).then(socket => {\n    startTerminal(container, socket);\n  });\n}\n\n// Better to start on DOMContentLoaded. So, we know terminal-container is loaded\nstart();\n"]}